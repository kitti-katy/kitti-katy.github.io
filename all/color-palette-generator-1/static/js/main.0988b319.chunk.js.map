{"version":3,"sources":["components/account/Login.js","components/account/Register.js","components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/Label.js","components/color-picker/ColorPicker.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","components/ClipboardCopier.js","pages/color-generation/HSL/components/HSLFilters.js","components/TryIt.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","firebase/context.js","firebase/Firebase.js","firebase/index.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["React","Component","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","react_default","a","createElement","style","padding","display","justifyContent","Link","to","className","icon","type","theme","Color","v1","v2","v3","colorFormat","this","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","initial_state","baseColor","Label","props","class","title","ColorPicker","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","hexValue","componentDidMount","generateMainCanvas","generateSatCanvas","document","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","ctx","getElementById","getContext","i","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","j","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","clientX","clientY","handleMouseMoveMainCanvas","rect","getBoundingClientRect","x","left","y","top","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","handleFormInput","val","setAppBackground","getElementsByTagName","backgroundColor","getNumberPickerInput","id","onChange","input","size","width","value","setFromHue","e","target","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","test","_baseColor$hsl","_baseColor$rgb","height","border","borderColor","borderRadius","marginLeft","marginTop","position","zIndex","lib","time","handler","float","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","marginRight","verticalAlign","Label_Label","margin","connect","BaseColorReducer","dispatch","bindActionCreators","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","text","onCopy","success","cursor","Option","Select","RadioGroup","Radio","Group","selectedColorStyle","textAlign","fontSize","tileStyle","exportJSONButtonStyle","lineHeight","reloadButtonStyle","presets","analogous","name","variations","square","triad","_12Colors","HSLFilters","hueStep","satStep","lightStep","numberOfColors","clickedColor","selectedPreset","selectedVariation","componentDidUpdate","selectPreset","resetFilters","selectedOptions","setFilters","setVariation","console","log","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","getSliderInput","label","slider","reset","colorElements","handleSelectColor","index","getTilesRow","rowNumber","_this$state","anyColor","Array","apply","map","el","floor","newColor","key","onClick","objectSpread","getTiles","_this$props$baseColor","_this$state2","numberOfRows","marginBottom","_this$state3","selectedColorFont","borderBottom","es_radio","keys","es_select","v","ClipboardCopier_ClipboardCopier","SelectedColorReducer","tryIds","TryIt","initialState","setHoverEffects","allTryElements","getAllTryElements","forEach","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","setColor","compName","newColors","components","_React$createElement","_this2","appBar","header","background","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","card","defineProperty","fontFamily","paddingBottom","es_button","onMouseOver","HSL","borderBottomLeftRadius","borderTopLeftRadius","boxShadow","color_picker_ColorPicker","borderBottomRightRadius","borderTopRightRadius","components_HSLFilters","components_TryIt","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","push","selectedColorIndex","flexWrap","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","handleSubmit","preventDefault","img","Image","src","canvas","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","generatedPalette1","generatedPalette2","generatedPalette3","generatedPalette4","extractColorsFunction2","darkLightArr","lightStr","darks","lights","palette","concat","generatedPalette5","generatedPalette6","generatedPalette7","generatedPalette8","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","palettePieces","c","Grid_default","item","xs","$imagePreview","palettePieces1","palettePieces2","palettePieces3","palettePieces4","palettePieces5","palettePieces6","palettePieces7","palettePieces8","onSubmit","container","spacing","Picture","components_PictureUpload","Community","palettes","Card_default","Main","Switch","Route","exact","path","component","FirebaseContext","createContext","Firebase","doCreateUserWithEmailAndPassword","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","App","context","Consumer","firebase","href","rel","components_Header","Main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","render","es","BrowserRouter","Provider","src_App_0","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0988b319.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleLoginButtonClick = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Login</Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Login </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Username or Email\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            \r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nexport default class Register extends React.Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    open: false\r\n  };\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => this.setState({ ...INITIAL_STATE }))\r\n      .catch(error => this.setState({ error }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => this.setState({ [event.target.name]: event.target.value });\r\n  handleClickOpen = () => this.setState({ open: true });\r\n  handleClose = () => this.setState({ open: false });\r\n  handleLoginButtonClick = () => { };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Sign Up</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\"        >\r\n          <DialogTitle id=\"form-dialog-title\">Sign Up </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <form onSubmit={this.onSubmit}>\r\n              <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Full Name\" />\r\n              <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\" />\r\n              <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\r\n              <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirm Password\" />\r\n              <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Username\" type=\"text\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email\" type=\"email\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Password\" type=\"password\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Confirm Password\" type=\"password\" fullWidth />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">Create Account</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Login from \"./account/Login\"\r\nimport Register from \"./account/Register\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon, Button } from 'antd';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ padding: '24px', display: 'flex', justifyContent: 'left' }}>\r\n        <Link to='/generate/hsl' className=\"header-button\"> <Icon type=\"setting\" theme=\"filled\" /> Generate Palette Style {/*<Icon type=\"build\" />*/} </Link>\r\n        <Link to='/generate/custom' className=\"header-button\"> <Icon type=\"edit\" theme=\"filled\" /> Custom </Link>\r\n        <Link to='/generate/picture' className=\"header-button\"> <Icon type=\"picture\" theme=\"filled\" /> From Picture {/*<Icon type=\"picture\" /> */} </Link>\r\n        {/*<Button component={Link} to='/community'>Community</Button>\r\n            }\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\"> Awesome CPG </Typography>\r\n           \r\n            {/* <div>\r\n              <Button aria-owns={newPaletteAnchor ? \"simple-menu\" : null} aria-haspopup=\"true\" onClick={this.handleClickPalette}> New Palette</Button>\r\n              <Menu id=\"new-palette\" anchorEl={newPaletteAnchor} open={Boolean(newPaletteAnchor)} onClose={this.handleClosePalette} >\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/hsl'>From HSL</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/custom'>Custom</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/picture'>From Picture</MenuItem>\r\n              </Menu>\r\n           </div>*/}\r\n\r\n        {/*<Button component={Link} to='/generate/hsl'>From HSL</Button>\r\n            <Button component={Link} to='/generate/custom'>Custom</Button>\r\n            <Button component={Link} to='/generate/picture'>From Picture</Button>\r\n            <Button component={Link} to='/community'>Community</Button>\r\n            <Login />\r\n            <Register firebase={this.props.firebase} />\r\n          </Toolbar>\r\n        </AppBar>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color(200, 20, 50, 'HSL') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import React from \"react\";\r\n\r\nexport const Label = (props) => \r\n<div class=\"ant-form-item-label\">\r\n<label class=\"\" title={props.title} style={{color:'#3d3d3d'}}>{props.title}</label>\r\n</div>","import React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { Label } from '../Label';\r\nimport { Input, Card } from 'antd';\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    allowClrChange: false,\r\n    allowSatChange: false,\r\n    mouseDownMainCanvas: false,\r\n    mouseDownSatCanvas: false,\r\n\r\n    pickerCirclePositionX: 0,\r\n    pickerCirclePositionY: 0,\r\n    saturationRectPositionY: 0,\r\n\r\n    selectedColor: new Color(200, 20, 50, 'HSL'),\r\n    hexValue: new Color(200, 20, 50, 'HSL').HEXString.substring(1)\r\n  };\r\n  componentDidMount = () => {\r\n    this.generateMainCanvas(this.props.baseColor);\r\n    this.generateSatCanvas(this.props.baseColor);\r\n    document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n    document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n  };\r\n\r\n  generateMainCanvas = baseColor => {\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let i = 0; i < 360; i += 1) {\r\n      var gradient = ctx.createLinearGradient(i, 0, i, 200);\r\n      gradient.addColorStop(0, \"hsl(\" + i + \",\" + sat + \"%,0%)\");\r\n      gradient.addColorStop(0.5, \"hsl(\" + i + \",\" + sat + \"%,50%)\");\r\n      gradient.addColorStop(1, \"hsl(\" + i + \",\" + sat + \"%,100%)\");\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(i, 0, i, 200);\r\n    }\r\n  };\r\n  generateSatCanvas = baseColor => {\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202; j += 2) {\r\n      for (let i = 0; i < 10; i += 1) {\r\n        ctx.fillStyle = \"hsl(\" + hue + \", \" + j / 2 + \"%, \" + light + \"%)\";\r\n        ctx.fillRect(i, j, i, j + 2);\r\n      }\r\n    }\r\n  };\r\n\r\n  enableColorChange = () => this.setState({ allowClrChange: true });\r\n  disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n  handleMouseDownMainCanvas = evt => {\r\n    this.setMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  handleMouseMoveMainCanvas = evt => {\r\n    if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n      this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n  setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n  setColorFromMainCanvas = (clientX, clientY) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let hue = Math.round(x);\r\n    let sat = this.props.baseColor.hsl.sat;\r\n    let light = Math.round(y / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.setState({ selectedColor: color })\r\n    this.props.changeBaseColor(color);\r\n    this.generateSatCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n\r\n  handleMouseDownSatCanvas = evt => {\r\n    this.setSatMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  handleMouseMoveSatCanvas = evt => {\r\n    if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n      this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n  setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n  setColorFromSatCanvas = clientY => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = this.props.baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.props.changeBaseColor(color);\r\n    this.setState({ selectedColor: color })\r\n    this.generateMainCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    this.generateMainCanvas(color);\r\n    this.generateSatCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); this.setAppBackground('#' + val) }\r\n  setAppBackground = (hexValue) => document.getElementsByTagName('body')[0].style.backgroundColor = hexValue\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <Input size=\"small\" style={{ width: '60px' }} type=\"number\" id={id} min=\"0\" max={max} value={val} onChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, e.target.value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, e.target.value, \"HSL\"))\r\n  setFromRed = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, e.target.value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, e.target.value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div className=\"element-holder\">\r\n\r\n        <div>\r\n          {/*<h2 style={{ textAlign: 'left' }} >Pick Color</h2>*/}\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <div id=\"pickerCircle\"\r\n              style={{\r\n                width: \"16px\", height: \"16px\", border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"white\", borderRadius: \"15px\",\r\n                marginLeft: hue - 8 + \"px\", marginTop: light * 2 - 8 + \"px\",\r\n                backgroundColor: hexString, position: \"absolute\", zIndex: 100\r\n              }}\r\n            />\r\n            <Throttle time=\"20\" handler=\"onMouseMove\">\r\n              <canvas height=\"200\" width=\"360\" id=\"main-canvas-color-picker\"\r\n                style={{ display: \"inline\", position: \"relative\", float: \"left\", border: 'solid 1px #0000001c' }}\r\n                onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n            </Throttle>\r\n          </div>\r\n      \r\n            <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}\r\n              onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n              onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n              <div id=\"saturationCircle\"\r\n                style={{\r\n                  backgroundColor: hexString,\r\n                  position: \"absolute\", display: \"inline\", marginLeft: \"-5.5px\", width: \"24px\", height: \"7px\",\r\n                  border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"#d9d9d9\", borderRadius: \"3px\",\r\n                  marginTop: sat * 2 - 5 + \"px\"\r\n                }} />\r\n              <canvas height=\"200\" width=\"10\" id=\"saturation-canvas-color-picker\"\r\n                style={{ display: \"inline\", marginRight: \"7px\", border: \"1px solid #d9d9d9\" }}\r\n              />\r\n            </div>\r\n         \r\n          <div style={{ display: 'grid', justifyContent: 'space-between' }}>\r\n            <div style={{ width: '400px' }}>\r\n              <div style={{ display: 'inline-block', verticalAlign: 'top', width: '87px', marginRight: '16px' }}>\r\n                <div> <Label title=\"H\" />{this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n                <div> <Label title=\"S\" />{this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n                <div> <Label title=\"L\" />{this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n              </div>\r\n\r\n              <div style={{ display: 'inline-block', verticalAlign: 'top', width: '87px', marginRight: '16px' }}>\r\n                <div> <Label title=\"R\" />{this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n                <div> <Label title=\"G\" />{this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n                <div> <Label title=\"B\" />{this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n              </div>\r\n\r\n              <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '152px' }}>\r\n                <div style={{ padding: '35px 56px', backgroundColor: hexString, display: 'inline-block', borderRadius: '3px', marginTop: '6px' }} />\r\n                <div style={{ display: 'inline-block' }}>\r\n                  <Label title=\"Hex #\" />\r\n                  <Input size=\"small\" style={{ width: \"82px\" }} type=\"text\" id=\"Hex\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color(200, 20, 50, 'HSL').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {message, Icon   } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n   <Icon id=\"copy-to-clipboard-icon\" type=\"copy\" style={{cursor:'pointer'}} />\r\n  </CopyToClipboard>\r\n \r\n)\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Label } from '../../../../components/Label'\r\nimport { ClipboardCopier } from '../../../../components/ClipboardCopier' \r\nimport { Input, Button, Icon, Slider, Select   } from 'antd';\r\nimport { Radio } from 'antd';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst padding = '8px'\r\nconst selectedColorStyle = {padding: '2px 20px', textAlign: 'center', display: 'inline', fontSize: '14px', float:'right'}\r\nconst selectedTileStyle = {}\r\nconst tileStyle = {  padding: '0.5cm', display: 'inline-block', margin: '-2.5px 0'}\r\nconst exportJSONButtonStyle = {float: 'right', marginLeft: '18px', fontSize: '22px', lineHeight: '2' }\r\nconst reloadButtonStyle = {float: 'right', marginLeft: '18px', fontSize: '22px', lineHeight: '2'}\r\n\r\n// variations: hueChange: 30, satChange: 20, lightChange:20, h step, s step, l step, number of colors\r\nconst presets = { \r\n  analogous : { name:'Analogous', variations: [ [30, 0, 10, 10, 1, 1, 30], [30, 20, 20, 25, 5, 1, 75], [30, 0, 20, 5, 1, 1, 15] ]}, \r\n  square: { name:'Square', variations: [ [60, 0, 10, 10, 1, 1, 40] , [60, 20, 20, 25, 5, 1, 100], [60, 0, 20, 5, 1, 1, 20]] }, \r\n  triad: { name:'Triad', variations: [ [120, 0, 10, 10, 1, 1, 30], [120, 20, 20, 25, 5, 1, 75], [120, 0, 20, 5, 1, 1, 15] ] }, \r\n  _12Colors: {name:'12 Colors', variations: [ [30, 0, 10, 10, 5, 1, 120], [30, 0, 20, 5, 1, 1, 60] ] }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 10, satChange: 0, lightChange: 8,\r\n    hueStep: 10, satStep: 1, lightStep: 1,\r\n    numberOfColors: 126,\r\n    clickedColor: 0,\r\n    selectedPreset: 'None',\r\n    selectedVariation: 0\r\n  };\r\n\r\n  componentDidUpdate = () => {}\r\n\r\n  // PRESETS HANDLERS\r\n  selectPreset = e => {\r\n    let selectedPreset = e.target.value\r\n    this.setState({ selectedPreset: selectedPreset, selectedVariation: 0 }, ()=> {\r\n      if(selectedPreset == 'None') return\r\n      this.resetFilters(0)\r\n    })\r\n  }\r\n  resetFilters = (selectedVariation) => {\r\n    let selectedOptions = presets[this.state.selectedPreset].variations[selectedVariation]\r\n    let hueChange = selectedOptions[0], satChange = selectedOptions[1]\r\n    let lightChange = selectedOptions[2], hueStep = selectedOptions[3]\r\n    let satStep = selectedOptions[4], lightStep = selectedOptions[5]\r\n    let numberOfColors = selectedOptions[6]\r\n    this.setFilters(hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors)\r\n  }\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n  setVariation = (val) => { console.log(val); this.setState({selectedVariation: val}, this.resetFilters(val))}\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value, selectedPreset: 'None' })\r\n  handleSatChange = value => this.setState({ satChange: value, selectedPreset: 'None' })\r\n  handleLightChange = value => this.setState({ lightChange: value, selectedPreset: 'None' })\r\n  handleHueStepChange = value => this.setState({ hueStep: value, selectedPreset: 'None' })\r\n  handleSatStepChange = value => this.setState({ satStep: value, selectedPreset: 'None' })\r\n  handleLightStepChange = value => this.setState({ lightStep: value, selectedPreset: 'None' })\r\n  handleNumberOfColorsChange = e => {\r\n    let n = e.target.value\r\n    if ((n > 0 && n < 181) || (n == ''))\r\n      this.setState({ numberOfColors: n, selectedPreset: 'None' })\r\n  }\r\n  getSliderInput = (value, onChange, min, max, label) => \r\n  <div> <Label title={label} /> \r\n    <Slider min={min} max={max} onChange={onChange} value={value} style={{ width: '120px', display:'inline-block', verticalAlign:'bottom' }}/> \r\n    <input type='number' style={{ width: '40px', border:'none', backgroundColor:'transparent', marginLeft:'6px' }} min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value}/>\r\n  </div>\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  reset = () => {\r\n    this.setState({ selectedPreset: 'None' })\r\n    this.setFilters(10, 0, 8, 1, 1, 1, 126)\r\n  }\r\n  exportJSON = () => {\r\n    let colorElements = document.getElementById(\"generated-colors\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (hue, sat, light, rowNumber, numberOfColors) => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep,  clickedColor } = this.state\r\n    let anyColor = new Color(0, 0, 0, 'RGB')\r\n    return Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      index = index + numberOfColors*rowNumber\r\n      let h = (parseInt(hue) + (Math.floor(index/ hueStep) * hueChange) ) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 101\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 101\r\n      let newColor = anyColor.HSLtoHex(h, s, l)\r\n      return (<div key={index} onClick={() => this.handleSelectColor(newColor, index  )} style={{ ...tileStyle, backgroundColor: newColor, borderRadius: clickedColor == index  ? '25px' : '0'}}/> ) } ) \r\n  }\r\n  getTiles = () => {\r\n    let {hue, sat, light}= this.props.baseColor.hsl;\r\n    let {numberOfColors, hueStep} = this.state\r\n    let isSplit = this.state.selectedPreset != 'None'\r\n      if(isSplit)\r\n      {\r\n        let numberOfRows = parseInt(numberOfColors)/parseInt(hueStep)\r\n        return Array.apply(null, { length: numberOfRows }).map((el, rowNumber) =>( <div style={{marginBottom:'8px'}} key={'presetgenerated' + rowNumber}>{this.getTilesRow(hue, sat, light, rowNumber, hueStep)} </div> ) )\r\n      }\r\n      else return this.getTilesRow(hue, sat, light, 0, numberOfColors)\r\n    }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, selectedPreset, numberOfColors, clickedColor, selectedVariation } = this.state\r\n\r\n    let selectedColor = this.props.selected\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <div style={{ width: '700px'}} className=\"element-holder\">\r\n        <div>\r\n          {/* PRESETS */}\r\n          <div style={{ borderBottom: '1px solid #e8e8e8', padding: padding + ' 0' }} >\r\n          <div style={{display:'inline-block'}}>\r\n            <RadioGroup value={selectedPreset} onChange={this.selectPreset} style={{ display: 'flex' }} >\r\n              <Radio value={'None'}>None</Radio>\r\n              {Object.keys(presets).map(key => <Radio key={key} value={key}>{presets[key].name}</Radio> )}\r\n            </RadioGroup>\r\n            </div>\r\n            { selectedPreset != 'None' &&\r\n            <span style={{float:'right'}}> \r\n                <Select value={selectedVariation} style={{ width: 120 }} onChange={this.setVariation} size=\"small\">\r\n                  {presets[selectedPreset].variations.map( (v, i)=> <Option key={'varOption' + selectedPreset + i} value={i}>Style {i}</Option> )}\r\n                </Select>\r\n            </span>\r\n            \r\n            }\r\n          </div>\r\n          {/* CHANGE FILTERS */}\r\n          <div style={{ borderBottom: '1px solid #e8e8e8', padding: padding + ' 0' }}>\r\n            <div >\r\n              <span style={{ float: 'right' }}>\r\n                {this.getSliderInput(hueStep, this.handleHueStepChange, 0, 100, 'Hue Step')}\r\n                {this.getSliderInput(satStep, this.handleSatStepChange, 0, 100, 'Saturation Step')}\r\n                {this.getSliderInput(lightStep, this.handleLightStepChange, 0, 100, 'Light Step')}\r\n              </span>\r\n            </div>\r\n            <div >\r\n                {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n                {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n                {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n          </div>\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div style={{ padding: padding + ' 0' }}>\r\n            <Icon type=\"export\" style={exportJSONButtonStyle} onClick={this.exportJSON} /> <Icon type=\"reload\" onClick={this.reset} style={reloadButtonStyle} />\r\n            <Label title=\"Number of Colors\" style={{ marginLeft: '18px' }} />\r\n            <Input size=\"small\" style={{ width: '60px', marginLeft: '18px' }} type=\"number\" min=\"0\" max='360' value={numberOfColors} onChange={this.handleNumberOfColorsChange} />\r\n            {/* Selected Color Square */}\r\n            <div style = {{...selectedColorStyle,backgroundColor: selectedColor,  color: selectedColorFont, border: '1px solid ' + selectedColorFont }}>\r\n              {selectedColor} <ClipboardCopier value={selectedColor} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* GENERATED TILES */}\r\n        <div id=\"generated-colors\" style={{ height: 'max-content', lineHeight: '1.45' }}> {this.getTiles()} </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Icon } from 'antd';\r\nimport Color from '../utilities/Color'\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n            \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n            \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\nconst hoverStyle = '3px dotted red'\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                appBar: '#ffffff',\r\n                title: '#353535',\r\n                header: '#353535',\r\n                header2: '#353535',\r\n                background: '#ffffff',\r\n                primaryButton: '#ffffff',\r\n                secondaryButton: '#ffffff',\r\n                successButton: '#ffffff',\r\n                dangerButton: '#ffffff',\r\n                infoButton: '#ffffff',\r\n\r\n                primaryButtonFont: '#353535',\r\n                secondaryButtonFont: '#353535',\r\n                successButtonFont: '#353535',\r\n                dangerButtonFont: '#353535',\r\n                infoButtonFont: '#353535',\r\n                paragraph: '#353535',\r\n            }\r\n        };\r\n    }\r\n    componentDidUpdate = () => {}\r\n    componentDidMount = () => {this.setHoverEffects()}\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n         }\r\n          )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); } ) \r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none' )\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => { \r\n                                                                        e.stopPropagation()\r\n                                                                        let innerElements = el.querySelectorAll('*')\r\n                                                                        let allNoneHovered = true\r\n                                                                        innerElements.forEach(elem => { if(allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ')} )\r\n                                                                        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none' } \r\n                                                                        )\r\n    \r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor!=null ? this.props.selectedColor : this.props.selected\r\n\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div style={{ width: '450px',  /*background: '#f5f5f5',*/ }}>\r\n\r\n                <div style={{ width: '450px', display: 'inline-block', cursor: 'pointer' }}>\r\n                    <Card style={{}} id=\"try-background\"\r\n                        onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background, borderColor: '#b8b8b8' }}\r\n                        headStyle={{ backgroundColor: appBar }}\r\n                        >\r\n\r\n                        <h2 style={{ color: title, fontFamily: \"'Lora', serif\", borderBottom: '1px solid #e8e8e8', paddingBottom: '12px'}}>\r\n                            <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}   >Title </span>\r\n                            <Button style={{ float: 'right' }} onClick={this.reset}> <Icon type=\"reload\" />  </Button>\r\n                        </h2>\r\n                        <br />\r\n                        <h2    style={{ color: header, fontFamily: \"'Lora', serif\" }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h2>\r\n                        <p   \r\n                        id=\"try-text\"\r\n                            style={{ color: paragraph, fontFamily: \"'Nanum Gothic', sans-serif\", lineHeight: '2' }}\r\n                            onClick={(e) => this.setColor(e, 'paragraph')}>\r\n                            Click here to apply the colors and see how it will look.\r\n                        <br />\r\n                            <br />\r\n                            1. Pick a base color; <br />\r\n                            2. Apply HSL Filters: For every consecutive color choose Hue, Saturation and Light changes.\r\n                            Change step values to specify how frequently the change will be applied (e.g. hue value will change every 2nd square);\r\n                           <br />\r\n                            3. Have fun!\r\n                            </p>\r\n                        <br />\r\n                        <br /><br /> \r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'primaryButton')} id=\"try-button-primary\"\r\n                                style={{ backgroundColor: primaryButton, color: primaryButtonFont }}>\r\n                                <div    onClick={(e) => this.setColor(e, 'primaryButtonFont')} onMouseOver={(e) => e.stopPropagation()} id=\"try-button-primary-font\">Primary </div>\r\n                            </Button>\r\n                            <Button\r\n                                id=\"try-button-secondary\" onClick={(e) => this.setColor(e, 'secondaryButton')}\r\n                                style={{ backgroundColor: secondaryButton, color: secondaryButtonFont, marginLeft: '15px' }}>\r\n                                <div   onClick={(e) => this.setColor(e, 'secondaryButtonFont')} id=\"try-button-secondary-font\"> Secondary</div>\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'successButton')} id=\"try-button-success\"\r\n                                style={{ backgroundColor: successButton, color: successButtonFont }}>\r\n                                <div   onClick={(e) => this.setColor(e, 'successButtonFont')} id=\"try-button-success-font\"><Icon type=\"check-circle\" /> Success</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'infoButton')}\r\n                                id=\"try-button-info\" style={{ backgroundColor: infoButton, color: infoButtonFont, marginLeft: '15px' }}>\r\n                                <div   onClick={(e) => this.setColor(e, 'infoButtonFont')} id=\"try-button-info-font\"><Icon type=\"info-circle\" /> Info</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'dangerButton')}\r\n                                id=\"try-button-danger\" style={{ backgroundColor: dangerButton, color: dangerButtonFont, marginLeft: '15px' }}>\r\n                                <div   onClick={(e) => this.setColor(e, 'dangerButtonFont')} id=\"try-button-danger-font\"><Icon type=\"warning\" /> Danger</div>\r\n                            </Button>\r\n                        </div>\r\n                    </Card >\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\n\r\nconst backgroundColor= '#f0f0f0' //'#f5f5f5' // '#cccccc' \r\n\r\nclass HSL extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'inline-block', margin: 'auto' }}>\r\n        <div style={{\r\n          display: 'inline-block', verticalAlign: 'top', background: backgroundColor,\r\n          borderBottomLeftRadius: '5px', borderTopLeftRadius: '5px', padding: '48px', height: '840px',\r\n          boxShadow: '#00000059 1px 1px 10px 1px'\r\n        }}>\r\n          <ColorPicker /> </div>\r\n          <div style={{\r\n          display: 'inline-block', verticalAlign: 'top', background: backgroundColor,\r\n          borderBottomRightRadius: '5px', borderTopRightRadius: '5px', marginLeft: '6px', padding: '48px 0 48px 48px', height: '840px',\r\n          boxShadow: '#00000059 1px 1px 10px 1px'\r\n        }}>\r\n        <div style={{ display: 'inline-block', verticalAlign: 'top'}}>\r\n          <HSLFilters /> </div>\r\n        <div\r\n          style={{ display: 'inline-block', verticalAlign: 'top', padding: '0 48px'}}>\r\n          <TryIt /></div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HSL;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport {Icon} from 'antd'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0};\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    exportJSON = () => exportJSON(this.state.colors)\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        return (\r\n            <div style={{ width: '400px' }}>\r\n                <button onClick={this.exportJSON}> Export JSON</button>\r\n                    <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                        {this.state.colors.map((color, index) =>\r\n                            <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                                style={{\r\n                                    backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                    borderRadius: selectedColorIndex == index ? '30px' : '0', padding: '30px', display: 'block'\r\n                                }} />)\r\n                        }\r\n                        <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)} \r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign:'center' }} >\r\n                        <Icon type=\"plus\" style = {{fontSize:'24px', padding:'20px'}} />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nconst backgroundColor= '#f0f0f0'\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    console.log(this.props.baseColor)\r\n    return (\r\n      <div style={{ display: \"inline-block\", margin: \"auto\" }}>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            background: backgroundColor,\r\n            borderBottomLeftRadius: \"15px\",\r\n            borderTopLeftRadius: \"15px\",\r\n            padding: \"48px\",\r\n            height: \"840px\"\r\n          }}\r\n        >\r\n          <ColorPicker />\r\n          <GeneratedColors />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            background: backgroundColor,\r\n            borderBottomRightRadius: \"15px\",\r\n            borderTopRightRadius: \"15px\",\r\n            padding: \"48px\",\r\n            height: \"840px\"\r\n          }}\r\n        >\r\n          <TryIt selectedColor={this.props.baseColor.HEXString}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import ImageUploader from 'react-images-upload';\r\n\r\nimport React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass PictureUpload extends Component {\r\n    state = {\r\n        palette1: [], palette2: [], palette3: [], palette4: [],\r\n        palette5: [], palette6: [], palette7: [], palette8: [],\r\n        clickedColor: 0, image: '', imagePreviewUrl: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let img = new Image()\r\n        img.src = this.state.imagePreviewUrl\r\n        let canvas = document.createElement('canvas')\r\n        canvas.width = img.width;\r\n        canvas.height = img.height\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.drawImage(img, 0, 0)\r\n        let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data\r\n\r\n        // By Hue Version\r\n        let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } }\r\n        let arr12Colors = []\r\n        let arr24Colors1 = []\r\n        let arr48Colors1 = []\r\n        let arr72Colors1 = []\r\n        pushVersion1Function(arr12Colors, 12)\r\n        pushVersion1Function(arr24Colors1, 24)\r\n        pushVersion1Function(arr48Colors1, 48)\r\n        pushVersion1Function(arr72Colors1, 72)\r\n        let version1Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            arr[bucketNumber].totalHue += hsl.hue\r\n            arr[bucketNumber].totalSat += hsl.sat\r\n            arr[bucketNumber].totalLight += hsl.light\r\n            arr[bucketNumber].number += 1\r\n        }\r\n\r\n        // By Hue and Light Version\r\n        let pushVersion2Function = (arr, n) => {\r\n            for (var i = 0; i < n; i++) {\r\n                arr.push({\r\n                    light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n                    dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n                });\r\n            }\r\n        }\r\n        let arr12Colors2 = []\r\n        let arr24Colors2 = []\r\n        let arr48Colors2 = []\r\n        let arr72Colors2 = []\r\n        pushVersion2Function(arr12Colors2, 12)\r\n        pushVersion2Function(arr24Colors2, 24)\r\n        pushVersion2Function(arr48Colors2, 48)\r\n        pushVersion2Function(arr72Colors2, 72)\r\n        let version2Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark\r\n            bucket.totalHue += hsl.hue\r\n            bucket.totalSat += hsl.sat\r\n            bucket.totalLight += hsl.light\r\n            bucket.number += 1\r\n        }\r\n\r\n        for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n            let r = pixelArray[i];\r\n            let g = pixelArray[i + 1];\r\n            let b = pixelArray[i + 2];\r\n            let hsl = RGBtoHSL(r, g, b)\r\n            // By Hue Version\r\n            version1Function(hsl, arr12Colors, 30)\r\n            version1Function(hsl, arr24Colors1, 15)\r\n            version1Function(hsl, arr48Colors1, 7.5)\r\n            version1Function(hsl, arr72Colors1, 5)\r\n\r\n            // By Hue and Light Version\r\n            version2Function(hsl, arr12Colors2, 30)\r\n            version2Function(hsl, arr24Colors2, 15)\r\n            version2Function(hsl, arr48Colors2, 7.5)\r\n            version2Function(hsl, arr72Colors2, 5)\r\n        }\r\n\r\n        // By Hue Version\r\n        let extractColorsFunction = obj => 'hsl(' + obj.totalHue / obj.number + ', ' + obj.totalSat / obj.number + '%, ' + obj.totalLight / obj.number + '% )'\r\n        let generatedPalette1 = arr12Colors.map(extractColorsFunction)\r\n        let generatedPalette2 = arr24Colors1.map(extractColorsFunction)\r\n        let generatedPalette3 = arr48Colors1.map(extractColorsFunction)\r\n        let generatedPalette4 = arr72Colors1.map(extractColorsFunction)\r\n\r\n        // By Hue and Light Version\r\n        let extractColorsFunction2 = arr => {\r\n            //looks better when dark goes first\r\n            let darkLightArr = arr.map(obj => {\r\n                let light = obj.light\r\n                let lightStr = 'hsl(' + light.totalHue / light.number + ', ' + light.totalSat / light.number + '%, ' + light.totalLight / light.number + '% )'\r\n                let dark = obj.dark\r\n                let darkStr = 'hsl(' + dark.totalHue / dark.number + ', ' + dark.totalSat / dark.number + '%, ' + dark.totalLight / dark.number + '% )'\r\n                return { dark: darkStr, light: lightStr }\r\n            })\r\n            let darks = darkLightArr.map(obj => obj.dark)\r\n            let lights = darkLightArr.map(obj => obj.light)\r\n            let palette = []\r\n            palette = palette.concat(darks)\r\n            palette = palette.concat(lights)\r\n            return palette\r\n        }\r\n        let generatedPalette5 = extractColorsFunction2(arr12Colors2)\r\n        let generatedPalette6 = extractColorsFunction2(arr24Colors2)\r\n        let generatedPalette7 = extractColorsFunction2(arr48Colors2)\r\n        let generatedPalette8 = extractColorsFunction2(arr72Colors2)\r\n\r\n        this.setState({\r\n            palette1: generatedPalette1, palette2: generatedPalette2, palette3: generatedPalette3, palette4: generatedPalette4,\r\n            palette5: generatedPalette5, palette6: generatedPalette6, palette7: generatedPalette7, palette8: generatedPalette8\r\n        })\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    getTiles = (palette) => {\r\n        let palettePieces = ''\r\n        if (palette.length != 0) {\r\n            palettePieces = palette.map((c) => <Grid item xs={1} > <div style={{ padding: '30px', backgroundColor: c }} /> </Grid>)\r\n        }\r\n        return palettePieces\r\n    }\r\n\r\n    render() {\r\n        let { imagePreviewUrl } = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n            $imagePreview = (<img id='uploaded-image' src={imagePreviewUrl} style={{ width: '400px' }} />);\r\n        } else {\r\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n\r\n        let palettePieces1 = this.getTiles(this.state.palette1)\r\n        let palettePieces2 = this.getTiles(this.state.palette2)\r\n        let palettePieces3 = this.getTiles(this.state.palette3)\r\n        let palettePieces4 = this.getTiles(this.state.palette4)\r\n        let palettePieces5 = this.getTiles(this.state.palette5)\r\n        let palettePieces6 = this.getTiles(this.state.palette6)\r\n        let palettePieces7 = this.getTiles(this.state.palette7)\r\n        let palettePieces8 = this.getTiles(this.state.palette8)\r\n\r\n        return (\r\n            <div className=\"previewComponent\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input className=\"fileInput\" type=\"file\" onChange={(e) => this.handleImageChange(e)} />\r\n                    <button className=\"submitButton\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Generate Palette</button>\r\n                </form>\r\n                <div className=\"imgPreview\" > {$imagePreview} </div>\r\n                <canvas id='canv' />\r\n\r\n                <h3> Version 1 (12, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces1}\r\n                </Grid>\r\n                <h3> Version 2 (24, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces2}\r\n                </Grid>\r\n                <h3> Version 3 (48, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces3}\r\n                </Grid>\r\n                <h3> Version 4 (72, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces4}\r\n                </Grid>\r\n\r\n                <h3> Version 5 (12, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces5}\r\n                </Grid>\r\n                <h3> Version 6 (24, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces6}\r\n                </Grid>\r\n                <h3> Version 7 (48, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces7}\r\n                </Grid>\r\n                <h3> Version 8 (72, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces8}\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nconst backgroundColor= '#f0f0f0'\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"inline-block\", margin: \"auto\" }}>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            background: backgroundColor,\r\n            borderBottomLeftRadius: \"15px\",\r\n            borderTopLeftRadius: \"15px\",\r\n            padding: \"48px\",\r\n            height: \"840px\"\r\n          }}\r\n        >\r\n          <PictureUpload />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            background: backgroundColor,\r\n            borderBottomRightRadius: \"15px\",\r\n            borderTopRightRadius: \"15px\",\r\n            padding: \"48px\",\r\n            height: \"840px\"\r\n          }}\r\n        >\r\n          <TryIt />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main style={{display:'grid'}}>\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n\r\n};\r\nclass Firebase {\r\n    constructor() { app.initializeApp(config);}\r\n    // *** Auth API ***\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nimport { FirebaseContext } from './firebase';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => {\n          return <div className=\"App\" id=\"App\">\n         <link href=\"https://fonts.googleapis.com/css?family=Lora|Nanum+Gothic\" rel=\"stylesheet\"/>\n         <link href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" rel=\"stylesheet\"/>\n              <Header firebase={firebase} />\n              <Main />\n          </div>\n        }}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; \nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nimport Firebase, { FirebaseContext } from './firebase';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}