{"version":3,"sources":["components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","utilities/HSLPaletteGenerator.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","components/ExportJSONButton.js","components/ResetColorsButton.js","components/ClipboardCopier.js","components/SelectedColorPanel.js","redux/HSLModeReducer.js","pages/color-generation/HSL/components/SelectMode.js","pages/color-generation/HSL/components/HSLFilters.js","pages/color-generation/HSL/components/HSLFiltersAlternative.js","components/TryIt/TryIt.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","firebase/context.js","firebase/Firebase.js","firebase/index.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","_this2","this","react_default","a","createElement","navbar","Group","align","Alignment","LEFT","Heading","Divider","buttons","className","icon","text","onClick","Component","withRouter","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","type","initial_state","baseColor","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","canvas","document","getElementById","ctx","getContext","scaledWidth","scaledHeight","setAttribute","i","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","style","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","hexValue","componentDidMount","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","onChange","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","_baseColor$hsl","id","borderColor","backgroundColor","lib","time","handler","height","width","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","size","value","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","e","target","test","_baseColor$rgb","card","color_picker_ColorPickerCanvas","html","display","verticalAlign","margin","marginBottom","whiteSpace","class","connect","BaseColorReducer","dispatch","bindActionCreators","utilities_HSLPaletteGenerator","HSLPaletteGenerator","hueStep","satStep","lightStep","numberOfColors","_palette","Array","apply","map","el","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","l1","l2","l3","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","forEach","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","click","ExportJSONButton","tooltip","placement","title","ResetColorsButton","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","onCopy","success","cursor","SelectedColorPanel","selectedColorFont","border","ClipboardCopier_ClipboardCopier","changeHSLMode","isAdvanced","SelectMode","paddingBottom","radioGroup","inline","selectedValue","controls","label","HSLModeReducer","HSLFilters","clickedColor","componentDidUpdate","setFilters","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","handleResetButtonClick","handleExportJSON_ButtonClick","colorElements","getElementsByTagName","getSliderInput","slider","getSliderInputRight","textAlign","handleSelectColor","getTilesRow","rowNumber","key","getTiles","_this$state","palette","_this$state2","components_SelectMode","justifyContent","padding","ExportJSONButton_ExportJSONButton","ResetColorsButton_ResetColorsButton","SelectedColorPanel_SelectedColorPanel","SelectedColorReducer","displayOptions","hueDivisors","1","2","3","4","5","6","8","9","10","12","15","18","20","24","30","satLightDivisors","HSLFiltersAlternative","selectedDisplayOption","selectedColorId","getPalette","levels","handleHueSliderChange","handleSatSliderChange","handleLightSliderChange","getElementsByClassName","handleChangeOrderUpClick","next","handleChangeOrderDownClick","marks","step","defaultValue","float","satArr","i1","lightArr","i2","lightColor","i3","isSelected","background","tryIds","TryIt","initialState","setHoverEffects","allTryElements","getAllTryElements","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","setColor","compName","newColors","components","getTryButton","component","font","primereact_button","marginRight","fontSize","appBar","header","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","componentsKeys","keys","minWidth","maxWidth","minHeight","headStyle","fontFamily","lineHeight","HSL","handleSelectMode","bool","components_color_picker_ColorPicker","HSL_components_HSLFiltersAlternative","HSL_components_HSLFilters","components_TryIt_TryIt","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","selectedColorIndex","defineProperty","flexWrap","borderRadius","es_icon","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","generated","handleSubmit","preventDefault","img","Image","src","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","palettePieces","c","$imagePreview","onSubmit","Picture","Picture_components_PictureUpload","Community","palettes","Grid_default","container","spacing","item","xs","Card_default","Main","Switch","Route","exact","path","FirebaseContext","React","createContext","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","App","context","Consumer","firebase","href","rel","components_Header","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","BrowserRouter","Provider","src_App_0","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efb492dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Navbar, Alignment } from \"@blueprintjs/core\";\r\nimport {  withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Group align={Alignment.LEFT}>\r\n            <Navbar.Heading>Awesome Color Palette Generator</Navbar.Heading>\r\n            <Navbar.Divider />\r\n            <Button className=\"bp3-minimal\" icon=\"build\" text=\"Generate Palette Style\" onClick={() => this.navigateTo('/generate/hsl')}  />\r\n            <Button className=\"bp3-minimal\" icon=\"media\" text=\"From Image\" onClick={() => this.navigateTo('/generate/picture')}  />\r\n            <Button className=\"bp3-minimal\" icon=\"drag-handle-horizontal\" text=\"Custom\" onClick={() => this.navigateTo('/generate/custom')}  />\r\n        </Navbar.Group>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#edb407', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 1920 ? 1 : window.innerWidth / 1920\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", drawHueCanvas);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Card, Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <Card className=\"element-holder\">\r\n\r\n        <div id=\"color-picker\">\r\n          <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n          <div id=\"color-inputs-container\">\r\n            <div className=\"input-boxes\">\r\n              <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n              <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n              <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n            </div>\r\n\r\n            <div className=\"input-boxes\">\r\n              <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n              <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n              <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n              <div className=\"input-boxes\" >\r\n                <div>\r\n                  <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                  <input id='hex-intput-txt-box' class=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n                </div>\r\n              </div>\r\n              <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL').HEXString\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#edb407', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\n\r\nexport const  ExportJSONButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Export JSON\"}>\r\n        <Icon icon=\"export\" className=\"export-json-btn\" onClick={props.onClick} />\r\n    </Tooltip>","import React from \"react\";\r\nimport { Tooltip } from 'antd'\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const ResetColorsButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Reset\"}>\r\n        <Icon icon=\"repeat\" className=\"reset-btn\" onClick={props.onClick} />\r\n    </Tooltip>\r\n","import React from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {message,   } from 'antd';\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n   <Icon id=\"copy-to-clipboard-icon\" icon=\"duplicate\" style={{cursor:'pointer', verticalAlign: 'bottom'}} />\r\n  </CopyToClipboard>\r\n \r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from './ClipboardCopier'\r\nimport Color from \"../utilities/Color\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    let selectedColor = props.selectedColor\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 30 ? '#182026' : '#D8E1E8'\r\n\r\n    return (\r\n        <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont, border: '1px solid ' + selectedColorFont }}>\r\n            <label>{selectedColor} <ClipboardCopier value={selectedColor} /> </label>\r\n        </div>)\r\n}\r\n","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeHSLMode } from '../../../../redux/HSLModeReducer'\r\nimport { Radio, RadioGroup } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAdvanced: state.HSLModeReducer.isAdvanced\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeHSLMode: changeHSLMode }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ paddingBottom: '12px', marginBottom: '24px' }} className=\"bottom-bordered\">\r\n                <RadioGroup className=\"HSL-mode-select\" inline={true} selectedValue={this.props.isAdvanced} onChange={e => this.props.changeHSLMode(e.target.value === 'true')} >\r\n                    <Radio label=\"Basic\" value={false} />\r\n                    <Radio label=\"Advanced\" value={true} />\r\n                </RadioGroup>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport HSLPaletteGenerator from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { getChunks } from \"../../../../utilities/ArrayMethods\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Icon, Slider, Select, Tooltip } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport './HSLFilters.css'\r\nimport './HSLFiltersCommon.css'\r\nimport SelectMode from \"./SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{textAlign:'right'}}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\" >\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* HSL FILTERS */}\r\n          <div className='bottom-bordered hsl-advanced-filters'>\r\n            {/* Changes */}\r\n            <div >\r\n              {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n              {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n              {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div>\r\n              {this.getSliderInput(hueStep, this.handleHueStepChange, 1, 100, 'Hue Step')}\r\n              {this.getSliderInput(satStep, this.handleSatStepChange, 1, 100, 'Saturation Step')}\r\n              {this.getSliderInput(lightStep, this.handleLightStepChange, 1, 100, 'Light Step')}\r\n            </div>\r\n          </div>\r\n\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div className=\"vertical-padding bottom-bordered\" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: \"12px\" }}>\r\n            {/* Number Of Colors */}\r\n            <div id='number-of-colors-input'> {this.getSliderInput(numberOfColors, this.handleNumberOfColorsChange, 6, 181, 'Number of Colors')} </div>\r\n\r\n            <div className=\" hsl-container-2\" style={{ marginBottom: \"0\", padding: \"0\" }}>\r\n              {/* ExportJSON */}\r\n              < ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n              {/* Reset */}\r\n              <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n              {/* Selected Color Panel */}\r\n              <SelectedColorPanel selectedColor={selectedColor} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { getAdvancedPalette } from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Slider, Tooltip } from 'antd';\r\nimport './HSLFiltersAlternative.css'\r\nimport './HSLFiltersCommon.css'\r\nimport SelectMode from \"./SelectMode\"\r\nimport { Card, Label, Icon } from \"@blueprintjs/core\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15', 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst satLightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\n\r\nclass HSLFiltersAlternative extends Component {\r\n  state = {\r\n    hueSplitter: 8, satSplitter: 1, lightSplitter: 5,\r\n    selectedDisplayOption: 0,\r\n    selectedColorId: ''\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  getPalette = () => {\r\n    let { hueSplitter, satSplitter, lightSplitter, selectedDisplayOption } = this.state\r\n    let levels = displayOptions[selectedDisplayOption]\r\n    let palette = getAdvancedPalette(this.props.baseColor, hueSplitter, satSplitter, lightSplitter, levels[0], levels[1], levels[2], 0, 0)\r\n    return palette\r\n  }\r\n\r\n  // FILTER HANDLERS\r\n  handleHueSliderChange = value => this.setState({ hueSplitter: value })\r\n  handleSatSliderChange = value => this.setState({ satSplitter: value })\r\n  handleLightSliderChange = value => this.setState({ lightSplitter: value })\r\n\r\n  // EXPORT JSON HANDLER\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, selectedColorId) => {\r\n    this.setState({ selectedColorId })\r\n    this.props.selectColor(hex)\r\n  }\r\n\r\n  handleChangeOrderUpClick = () => {\r\n    let next = this.state.selectedDisplayOption + 1\r\n    next = next == displayOptions.length ? 0 : next\r\n    this.setState({ selectedDisplayOption: next })\r\n  }\r\n  handleChangeOrderDownClick = () => {\r\n    let next = this.state.selectedDisplayOption - 1\r\n    next = next == -1 ? displayOptions.length-1 : next\r\n    this.setState({ selectedDisplayOption: next })\r\n  }\r\n\r\n  render() {\r\n    let palette = this.getPalette()\r\n\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\">\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* CHANGE FILTERS */}\r\n          {/* Hue */}\r\n          <div id='hsl-container-1'>\r\n            <Label className=\"slider-label\">Number Of Hues</Label>\r\n            <Slider marks={hueDivisors} step={null} defaultValue={12} max={30} min={1} onChange={this.handleHueSliderChange} />\r\n\r\n            <div style={{ marginTop: '44px' }}>\r\n              {/* Light */}\r\n              <div style={{ float: 'right', width: '45%' }}>\r\n                <Label className=\"slider-label\">Number Of Lights</Label>\r\n                <Slider marks={satLightDivisors} step={null} defaultValue={5} max={20} min={1} onChange={this.handleLightSliderChange} />\r\n              </div>\r\n              {/* Saturation */}\r\n              <div style={{ width: '45%' }}>\r\n                <Label className=\"slider-label\" >Number Of Saturations</Label>\r\n                <Slider marks={satLightDivisors} step={null} defaultValue={1} max={20} min={1} onChange={this.handleSatSliderChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/*} <div className=\"vertical-padding bottom-bordered\"></div>*/}\r\n\r\n          {/* SELECTED COLOR VALUE, EXPORT JSON */}\r\n          <div className=\" hsl-container-2 bottom-bordered top-bordered\">\r\n            {/* Change Order Up */}\r\n            <Icon icon=\"arrow-up\" className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n            {/* Change Order Down*/}\r\n            <Icon icon=\"arrow-down\" className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n            {/* ExportJSON */}\r\n            <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n            {/* Selected Color Panel */}\r\n            <SelectedColorPanel selectedColor={selectedColor} />\r\n          </div>\r\n\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"bottom-bordered tiles-holder generated-tiles\">\r\n            {palette.map((satArr, i1) =>\r\n              <div className=\"level-1-holder\" key={i1 + \"l1\"}>\r\n                {satArr.map((lightArr, i2) =>\r\n                  <div style={{ display: 'block' }} key={i2 + \"l2\"}>\r\n                    {lightArr.map((lightColor, i3) => {\r\n                      let color = lightColor.HEXString\r\n                      let isSelected = this.state.selectedColorId == color\r\n                      return <div key={i3 + color} id={color}\r\n                        className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')} style={{ background: color }}\r\n                        onClick={() => this.handleSelectColor(color, color)} />\r\n                    }\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>)}\r\n          </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFiltersAlternative);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { Button } from 'primereact/button';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Card, Label, Icon } from \"@blueprintjs/core\";\r\nimport \"./TryIt.css\"\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\nconst hoverStyle = '3px dotted red'\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                background: '#ffffff',\r\n                primaryButton: '#ffffff',\r\n                secondaryButton: '#ffffff',\r\n                successButton: '#ffffff',\r\n                warningButton: '#ffffff',\r\n                dangerButton: '#ffffff',\r\n                infoButton: '#ffffff',\r\n\r\n                title: '#353535',\r\n                header: '#353535',\r\n                primaryButtonFont: '#353535',\r\n                secondaryButtonFont: '#353535',\r\n                successButtonFont: '#353535',\r\n                dangerButtonFont: '#353535',\r\n                warningButtonFont: '#353535',\r\n                infoButtonFont: '#353535',\r\n                paragraph: '#353535',\r\n            }\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) => <Button\r\n        onClick={(e) => this.setColor(e, component)} id={id} style={{ backgroundColor: background, color: font, marginRight: '16px', borderColor: 'transparent', fontSize:'9.5pt' }}\r\n        label={<div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div>} />\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        let componentsKeys = Object.keys(components)\r\n\r\n        return (\r\n            <Card style={{  minWidth: '500px', maxWidth:'600px', minHeight: '750px' }} className=\"element-holder\">\r\n                <div id=\"try-colors-container\">\r\n                    <Label>Apply Selected Color Here:</Label>\r\n                    <div className=\"try-card-holder\">\r\n\r\n                        <Card id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                            style={{ backgroundColor: background }} headStyle={{ backgroundColor: appBar }} >\r\n\r\n                            <h2 className=\"try-title-holder\" style={{ color: title }}>\r\n                                <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Title </span>\r\n                                <Button className=\"reset-try-card-btn\" onClick={this.reset} label={<Icon icon=\"repeat\" />} />\r\n                            </h2>\r\n                            <br />\r\n                            <h3 style={{ color: header, fontFamily: \"'Lora', serif\" }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h3>\r\n                            <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, fontFamily: \"'Nanum Gothic', sans-serif\", lineHeight: '2' }}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                                 Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                           </p>\r\n                            <br />\r\n                            <div>\r\n                                {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                                {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                            </div>\r\n                            <br />\r\n                            <div >\r\n                                {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                                {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                                {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                                {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                            </div>\r\n                            <br />\r\n                        </Card >\r\n\r\n                        <div className=\"applied-colors-header\">\r\n                            <Label>Applied Colors:</Label>\r\n                            <ExportJSONButton onClick={() => exportJSON(components)} />\r\n                        </div>\r\n\r\n                        <div className=\"applied-colors-container\">\r\n                            {componentsKeys.map(key =>\r\n                                <div className=\"applied-color\"\r\n                                    style={{ backgroundColor: components[key], color: new Color(components[key], 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white' }}>\r\n                                    {components[key]}\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport SelectMode from \"./components/SelectMode\"\r\nimport HSLFiltersAlternative from \"./components/HSLFiltersAlternative\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { Select } from 'antd';\r\nimport { TabMenu } from 'primereact/tabmenu';\r\nimport \"./HSL.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAdvanced: state.HSLModeReducer.isAdvanced\r\n  }\r\n}\r\nclass HSL extends Component {\r\n  state = {\r\n    isAdvanced: false\r\n  }\r\n  handleSelectMode = (bool) => { this.setState({ isAdvanced: bool }) }\r\n  render() {\r\n    return (\r\n      <div className=\"HSL-page-container\">\r\n\r\n        {/* Color Picker */}\r\n        <ColorPicker id=\"HSL-color-picker-section\" />\r\n\r\n        {/* HSL Filters */}\r\n        {!this.props.isAdvanced && <HSLFiltersAlternative id=\"HSL-filters-section-basic\" />}\r\n        {this.props.isAdvanced && <HSLFilters id=\"HSL-filters-section-advanced\" />}\r\n\r\n        <div style={{ display: 'inline-block', verticalAlign: 'top', }}> {/*} <TabMenu model={[{label: 'Basic'},{label: 'Advanced'}]} /> */}</div>\r\n        {/* Try It */}\r\n        <TryIt id=\"HSL-try-it-section\" />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSL);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Icon, Tooltip } from 'antd'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\n\r\nimport '../../../../Common.css'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0 };\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    handleExportJSON_ButtonClick = () => exportJSON(this.state.colors)\r\n    handleResetButtonClick = () => { this.setState({ colors: [this.props.baseColor.HEXString], clickedColor: 0 }) }\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        let selectedColorFont = new Color(baseColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div style={{ width: '400px', width: '41vw' }} className=\"element-holder\">\r\n\r\n                <div className=\" hsl-container-2 bottom-bordered top-bordered\" style={{}}>\r\n                    {/* ExportJSON */}\r\n                    < ExportJSONButton onClick={this.exportJSON} />\r\n                    {/* Reset */}\r\n                    <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n                    {/* Selected Color Panel */}\r\n                    <SelectedColorPanel selectedColor={baseColor} />\r\n                </div>\r\n\r\n                <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.colors.map((color, index) =>\r\n                        <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                        className={\"single-tile \" + (selectedColorIndex == index ? 'selected-tile' : '')}\r\n                            style={{\r\n                                backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                padding: '30px', display: 'block'\r\n                            }} />)\r\n                    }\r\n                    <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)}\r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign: 'center', borderRadius: '50%' }} >\r\n                        <Icon type=\"plus\" style={{ fontSize: '24px', padding: '20px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ColorPicker />\r\n        <GeneratedColors />\r\n        <TryIt selectedColor={this.props.baseColor.HEXString} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from \"../../../../redux/SelectedColorReducer\";\r\nimport { changeBaseColor } from \"../../../../redux/BaseColorReducer\";\r\nimport { exportJSON } from \"../../../../utilities/ExportJSON\";\r\nimport \"./PictureUpload.css\"\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch);\r\n};\r\n\r\nclass PictureUpload extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n    let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n    // By Hue Version\r\n    let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n    let arr12Colors = [];\r\n    let arr24Colors1 = [];\r\n    let arr48Colors1 = [];\r\n    let arr72Colors1 = [];\r\n    pushVersion1Function(arr12Colors, 12);\r\n    pushVersion1Function(arr24Colors1, 24);\r\n    pushVersion1Function(arr48Colors1, 48);\r\n    pushVersion1Function(arr72Colors1, 72);\r\n    let version1Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      arr[bucketNumber].totalHue += hsl.hue;\r\n      arr[bucketNumber].totalSat += hsl.sat;\r\n      arr[bucketNumber].totalLight += hsl.light;\r\n      arr[bucketNumber].number += 1;\r\n    };\r\n\r\n    // By Hue and Light Version\r\n    let pushVersion2Function = (arr, n) => {\r\n      for (var i = 0; i < n; i++) {\r\n        arr.push({\r\n          light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n          dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n        });\r\n      }\r\n    };\r\n    let arr12Colors2 = [];\r\n    let arr24Colors2 = [];\r\n    let arr48Colors2 = [];\r\n    let arr72Colors2 = [];\r\n    pushVersion2Function(arr12Colors2, 12);\r\n    pushVersion2Function(arr24Colors2, 24);\r\n    pushVersion2Function(arr48Colors2, 48);\r\n    pushVersion2Function(arr72Colors2, 72);\r\n    let version2Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n      bucket.totalHue += hsl.hue;\r\n      bucket.totalSat += hsl.sat;\r\n      bucket.totalLight += hsl.light;\r\n      bucket.number += 1;\r\n    };\r\n\r\n    for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n      let r = pixelArray[i];\r\n      let g = pixelArray[i + 1];\r\n      let b = pixelArray[i + 2];\r\n      let hsl = RGBtoHSL(r, g, b);\r\n      // By Hue Version\r\n      version1Function(hsl, arr12Colors, 30);\r\n      version1Function(hsl, arr24Colors1, 15);\r\n      version1Function(hsl, arr48Colors1, 7.5);\r\n      version1Function(hsl, arr72Colors1, 5);\r\n\r\n      // By Hue and Light Version\r\n      version2Function(hsl, arr12Colors2, 30);\r\n      version2Function(hsl, arr24Colors2, 15);\r\n      version2Function(hsl, arr48Colors2, 7.5);\r\n      version2Function(hsl, arr72Colors2, 5);\r\n    }\r\n\r\n    // By Hue Version\r\n    let extractColorsFunction = obj => \"hsl(\" + obj.totalHue / obj.number + \", \" + obj.totalSat / obj.number + \"%, \" + obj.totalLight / obj.number + \"% )\";\r\n    let palette1 = arr12Colors.map(extractColorsFunction);\r\n    let palette2 = arr24Colors1.map(extractColorsFunction);\r\n    let palette3 = arr48Colors1.map(extractColorsFunction);\r\n    let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n    // By Hue and Light Version\r\n    let extractColorsFunction2 = arr => {\r\n      //looks better when dark goes first\r\n      let darkLightArr = arr.map(obj => {\r\n        let light = obj.light;\r\n        let lightStr = \"hsl(\" + light.totalHue / light.number + \", \" + light.totalSat / light.number + \"%, \" + light.totalLight / light.number + \"% )\";\r\n        let dark = obj.dark;\r\n        let darkStr = \"hsl(\" + dark.totalHue / dark.number + \", \" + dark.totalSat / dark.number + \"%, \" + dark.totalLight / dark.number + \"% )\";\r\n        return { dark: darkStr, light: lightStr };\r\n      });\r\n      let darks = darkLightArr.map(obj => obj.dark);\r\n      let lights = darkLightArr.map(obj => obj.light);\r\n      let palette = [];\r\n      palette = palette.concat(darks);\r\n      palette = palette.concat(lights);\r\n      return palette;\r\n    };\r\n    let palette5 = extractColorsFunction2(arr12Colors2);\r\n    let palette6 = extractColorsFunction2(arr24Colors2);\r\n    let palette7 = extractColorsFunction2(arr48Colors2);\r\n    let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n    this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) { palettePieces = palette.map(c => <div className=\"picture-single-tile\" style={{ backgroundColor: c }} />) }\r\n    return palettePieces;\r\n  };\r\n\r\n  render() {\r\n    const { palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8 } = this.state\r\n\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) { $imagePreview = (<img id=\"uploaded-image\" src={imagePreviewUrl} style={{ width: \"400px\" }} />); }\r\n    else { $imagePreview = <span />; }\r\n\r\n    return (\r\n      <div className=\"previewComponent element-holder\">\r\n        <div style={{ display: \"inline-block\", verticalAlign: 'top' }}>\r\n          <h2>Please select an Image for Preview</h2>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={e => this.handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={e => this.handleSubmit(e)}> Generate Palette </button>\r\n          </form>\r\n          <br />\r\n          <div className=\"imgPreview\"> {$imagePreview} </div>\r\n          <canvas id=\"canv\" />\r\n        </div>\r\n        {this.state.generated && (\r\n          <div id=\"generated-palettes-holder\">\r\n            <h3> Version 1 (12, by Hue) </h3> <div> {this.getTiles(palette1)} </div>\r\n            <h3> Version 2 (24, by Hue) </h3> <div> {this.getTiles(palette2)} </div>\r\n            <h3> Version 3 (48, by Hue) </h3> <div> {this.getTiles(palette3)} </div>\r\n            <h3> Version 4 (72, by Hue) </h3> <div> {this.getTiles(palette4)} </div>\r\n            <h3> Version 5 (12, by Hue and Light) </h3> <div> {this.getTiles(palette5)} </div>\r\n            <h3> Version 6 (24, by Hue and Light) </h3> <div> {this.getTiles(palette6)} </div>\r\n            <h3> Version 7 (48, by Hue and Light) </h3> <div> {this.getTiles(palette7)} </div>\r\n            <h3> Version 8 (72, by Hue and Light) </h3> <div> {this.getTiles(palette8)} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nimport \"./Picture.css\"\r\n\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picture-page\">\r\n        <PictureUpload /><TryIt />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\nimport \"../Common.css\"\r\nexport const Main = () => (\r\n  <main style={{display:'grid'}} className=\"main-holder\">\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n\r\n};\r\nclass Firebase {\r\n    constructor() { app.initializeApp(config);}\r\n    // *** Auth API ***\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nimport { FirebaseContext } from './firebase';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => {\n          return <div className=\"App bp3-dark\" id=\"App\">\n         <link href=\"https://fonts.googleapis.com/css?family=Lora|Nanum+Gothic\" rel=\"stylesheet\"/>\n         <link href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" rel=\"stylesheet\"/>\n              <Header firebase={firebase} />\n              <Main />\n          </div>\n        }}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; \nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n\n\nimport Firebase, { FirebaseContext } from './firebase';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}