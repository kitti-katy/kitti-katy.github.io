{"version":3,"sources":["components/Header.js","redux/HSLBasicReducer.js","pages/color-generation/HSL/components/HSLBasic/Filters.js","utilities/Color.js","redux/SelectedColorReducer.js","utilities/HSLPaletteGenerator.js","pages/color-generation/HSL/components/HSLBasic/Tiles.js","pages/color-generation/HSL/components/HSLBasic/DisplayOrderButtons.js","components/ExportJSONButton.js","utilities/ExportJSON.js","redux/HSLModeReducer.js","pages/color-generation/HSL/components/SelectMode/SelectMode.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","components/GoldenRatio.js","styles.js","components/TryIt/TryItGradient.js","components/TryIt/TryIt.js","components/ClipboardCopier.js","components/SelectedColorPanel.js","components/TryIt/TryMain.js","pages/color-generation/HSL/components/HSLBasic/HSLBasicContainer.js","pages/color-generation/HSL/HSL.js","components/ResetColorsButton.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/color-generation/HSL/components/HSLFilters.js","pages/community/Community.js","components/Main.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","className","Component","withRouter","setHueSplit","hueSplit","type","setSatSplit","satSplit","setLightSplit","lightSplit","setDisplayOrder","l1","l2","l3","initial_state","hueDivisors","1","2","3","4","5","6","8","9","10","12","15","lightDivisors","20","satDivisors","Filters","handleHueSliderChange","value","handleSatSliderChange","handleLightSliderChange","_this$props","this","id","html","slider","marks","step","defaultValue","max","min","onChange","connect","HSLBasicReducer","dispatch","bindActionCreators","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","Math","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","selectColor","selected","utilities_HSLPaletteGenerator","HSLPaletteGenerator","baseColor","hueStep","satStep","lightStep","numberOfColors","_baseColor$hsl","_palette","Array","apply","map","el","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","forEach","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","Tiles","containerWidth","componentDidMount","document","getElementById","clientWidth","getPadding","palette","innerWidth","padding","getRowHolderWidth","width","tilesHorizontal","getPalette","handleSelectColor","selectedColorId","_this2","selectedColor","tilePadding","l1Width","class","style","margin","height","alignItems","display","flexWrap","justifyContent","satArr","i1","key","lightArr","i2","lightColor","i3","isSelected","background","minWidth","minHeight","border","onClick","BaseColorReducer","SelectedColorReducer","displayOrder","displayOptions","DisplayOrderButtons","selectedDisplayOption","setLevels","i","handleChangeOrderUpClick","next","handleChangeOrderDownClick","tooltip","placement","title","icon","ExportJSONButton","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","changeHSLMode","isAdvanced","iconStyle","verticalAlign","marginRight","SelectMode","Palette_default","fontSize","Brush_default","Star_default","Image_default","HSLModeReducer","changeBaseColor","getScaler","window","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","canvas","ctx","getContext","scaledWidth","scaledHeight","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","hexValue","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","borderColor","backgroundColor","lib","time","handler","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","size","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","e","target","test","_baseColor$rgb","color_picker_ColorPickerCanvas","marginBottom","whiteSpace","GoldenRatio","direction","longFirst","longChild","shortChild","isVertical","measure","maxMeasure","firstStyle","secondStyle","long","short","objectSpread","borderStyle","TryItGradient","initialState","componentDidUpdate","setHoverEffects","allTryElements","getAllTryElements","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","gradientColors","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","setNumberOfColors","oldN","from","console","log","pop","setColor","colorIndex","newColors","gradientString","join","GoldenRatio_GoldenRatio","backgroundImage","borderRight","lineHeight","cursor","ExportJSONButton_ExportJSONButton","textAlign","tryIds","texts","backgrounds","TryIt","compName","components","getTryButton","component","font","text","appBar","header","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","headStyle","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","onCopy","success","children","SelectedColorPanel","selectedColorFont","ClipboardCopier_ClipboardCopier","switchers","label","components_TryIt_TryIt","TryIt_TryItGradient","TryMain","selectedTryIndex","switchNext","switchPrevious","tryComponent","SelectedColorPanel_SelectedColorPanel","HSLBasicContainer","handleExportJSON_ButtonClick","colorElements","getElementsByClassName","baseColorFont","borderTop","flexDirection","HSLBasic_DisplayOrderButtons","HSLBasic_Tiles","TryIt_TryMain","components_SelectMode_SelectMode","HSLBasic_Filters","popover","content","components_color_picker_ColorPicker","HSL","handleSelectMode","bool","HSLBasic_HSLBasicContainer","ResetColorsButton","GeneratedColors","clickedColor","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","handleResetButtonClick","selectedColorIndex","defineProperty","ResetColorsButton_ResetColorsButton","borderRadius","es_icon","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","generated","handleSubmit","preventDefault","img","Image","src","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","_this$state","$imagePreview","onSubmit","Picture","Picture_components_PictureUpload","HSLFilters","setFilters","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","getElementsByTagName","getSliderInput","getSliderInputRight","getTilesRow","rowNumber","_this$state2","card","Community","palettes","Grid_default","container","spacing","item","xs","Card_default","Main","Switch","Route","exact","path","render","Redirect","to","App","components_Header","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","es","BrowserRouter","src_App","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f40cdfe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <div className='header'>\r\n        <h2>Awesome Color Palette Generator</h2>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 1, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action. hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Slider } from 'antd';\r\nimport '../HSLFiltersAlternative.css'\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\nimport { setHueSplit, setSatSplit, setLightSplit } from '../../../../../redux/HSLBasicReducer'\r\n\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setHueSplit: setHueSplit, setSatSplit: setSatSplit, setLightSplit: setLightSplit }, dispatch) }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit\r\n    }\r\n}\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15' } //, 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst lightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\nconst satDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10' }\r\nconst hueMax = 15\r\nconst satMax = 10\r\nconst lightMax = 20\r\n\r\nclass Filters extends Component {\r\n    // FILTER HANDLERS\r\n    handleHueSliderChange = value => this.props.setHueSplit(value)\r\n    handleSatSliderChange = value => this.props.setSatSplit(value)\r\n    handleLightSliderChange = value => this.props.setLightSplit(value)\r\n\r\n    render() {\r\n        const { hueSplit, satSplit, lightSplit } = this.props\r\n        return (\r\n            <div id='hsl-container-1' >\r\n                <div>\r\n                    <Label className=\"slider-label\">Hues</Label>\r\n                    <Slider marks={hueDivisors} step={null} defaultValue={hueSplit} max={hueMax} min={1} onChange={this.handleHueSliderChange} />\r\n                </div>\r\n                {/* Saturation */}\r\n                <div>\r\n                    <Label className=\"slider-label\" >Saturations</Label>\r\n                    <Slider marks={satDivisors} step={null} defaultValue={lightSplit} max={satMax} min={1} onChange={this.handleSatSliderChange} />\r\n                </div>\r\n                {/* Light */}\r\n                <div>\r\n                    <Label className=\"slider-label\">Lights</Label>\r\n                    <Slider marks={lightDivisors} step={null} defaultValue={satSplit} max={lightMax} min={1} onChange={this.handleLightSliderChange} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#81042b', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL').HEXString\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../../../../redux/SelectedColorReducer'\r\nimport { Card, Icon } from \"@blueprintjs/core\";\r\nimport { getAdvancedPalette } from \"../../../../../utilities/HSLPaletteGenerator\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit,\r\n        displayOrder: state.HSLBasicReducer.displayOrder,\r\n        l1: state.HSLBasicReducer.l1,\r\n        l2: state.HSLBasicReducer.l2,\r\n        l3: state.HSLBasicReducer.l3\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass Tiles extends Component {\r\n    state = { containerWidth: 0 }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ containerWidth: document.getElementById('palette-container').clientWidth })\r\n    }\r\n    getPadding = (palette) => {\r\n        let width = palette.length\r\n        let innerWidth = palette[0][0].length\r\n        let containerWidth = this.state.containerWidth\r\n        let padding = 95 / (innerWidth * 2)\r\n        return Math.floor(padding) - 0.1\r\n    }\r\n    getRowHolderWidth = (palette) => {\r\n        let width = palette.length\r\n        let innerWidth = palette[0][0].length\r\n        let tilesHorizontal = innerWidth * width\r\n        let scaler = tilesHorizontal <= 1 ? 0.125 :\r\n            tilesHorizontal <= 2 ? 0.25 :\r\n                tilesHorizontal <= 4 ? 0.5 :\r\n                    tilesHorizontal < 40 ? 1 :\r\n                        tilesHorizontal < 100 ? 2 :\r\n                            tilesHorizontal < 120 ? 3 :\r\n                                tilesHorizontal < 140 ? 4 : 5\r\n        return (100 / width) * scaler + '%'\r\n    }\r\n    getPalette = () => {\r\n        let { baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3 } = this.props\r\n        let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3, 0, 0)\r\n        return palette\r\n    }\r\n\r\n    // TILES PART\r\n    handleSelectColor = (hex, selectedColorId) => {\r\n        this.setState({ selectedColorId })\r\n        this.props.selectColor(hex)\r\n    }\r\n\r\n\r\n    render() {\r\n        let palette = this.getPalette()\r\n        let selectedColor = this.props.selected\r\n\r\n        let tilePadding = this.getPadding(palette)\r\n        let l1Width = this.getRowHolderWidth(palette)\r\n        //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div class=\"tiles-holder generated-tiles\" style={{ width: '62%', margin: 'auto' }} >\r\n                <div style={{ height: '100%', width: '100%', alignItems: 'center', display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                    {palette.map((satArr, i1) =>\r\n                        <table className=\"level-1-holder\" key={i1 + \"l1\"} style={{ width: l1Width }}>\r\n\r\n                            {satArr.map((lightArr, i2) =>\r\n                                <tr key={i2 + \"l2\"}>\r\n                                    {lightArr.map((lightColor, i3) => {\r\n                                        let color = lightColor.HEXString\r\n                                        let isSelected = selectedColor == color\r\n                                        return <td key={i1 + '' + i2 + '' + i3 + color} id={color}\r\n                                            className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                            style={{\r\n                                                background: color, padding: tilePadding + '%', minWidth: tilePadding + '%', minHeight: tilePadding + '%',\r\n                                                border: 'none'\r\n                                            }}\r\n                                            onClick={() => this.handleSelectColor(color, color)} />\r\n                                    }\r\n                                    )}\r\n                                </tr>\r\n                            )}\r\n                        </table >)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tiles);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayOrder } from '../../../../../redux/HSLBasicReducer'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setDisplayOrder: setDisplayOrder }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\n\r\nclass DisplayOrderButtons extends Component {\r\n    state = { selectedDisplayOption: 0 };\r\n\r\n    setLevels = (i) => this.props.setDisplayOrder(displayOptions[i][0], displayOptions[i][1], displayOptions[i][2])\r\n\r\n    handleChangeOrderUpClick = () => {\r\n        let next = this.state.selectedDisplayOption + 1\r\n        next = next == displayOptions.length ? 0 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n    handleChangeOrderDownClick = () => {\r\n        let next = this.state.selectedDisplayOption - 1\r\n        next = next == -1 ? displayOptions.length - 1 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Change Order Up */}\r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    <Icon icon=\"arrow-up\" className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n                </Tooltip>\r\n                {/* Change Order Down*/}\r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    <Icon icon=\"arrow-down\" className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n                </Tooltip>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DisplayOrderButtons);\r\n","import React from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\n\r\nexport const  ExportJSONButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Export JSON\"}>\r\n        <Icon icon=\"export\" className=\"export-json-btn\" onClick={props.onClick} />\r\n    </Tooltip>","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeHSLMode } from '../../../../../redux/HSLModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport './SelectMode.scss'\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAdvanced: state.HSLModeReducer.isAdvanced\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeHSLMode: changeHSLMode }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    navigateTo = (link) => this.props.history.push(link);\r\n    render() {\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} ><div><PaletteIcon style={iconStyle} fontSize=\"small\" /> BASIC</div> </div>\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} ><div><BrushIcon style={iconStyle} fontSize=\"small\" /> ADVANCED </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/custom')}><div><StarIcon style={iconStyle} fontSize=\"small\" /> CUSTOM </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/picture')}><div><ImageIcon style={iconStyle} fontSize=\"small\" /> FROM PICTURE </div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#81042b', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", drawHueCanvas);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Card, Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div id=\"color-picker\">\r\n        <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n        <div id=\"color-inputs-container\">\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n            <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n            <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n          </div>\r\n\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n            <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n            <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n            <div className=\"input-boxes\" >\r\n              <div>\r\n                <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                <input id='hex-intput-txt-box' class=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","\r\nimport React from \"react\";\r\n\r\nexport const GoldenRatio = (props) => {\r\n    // direction: vertical or horizontal\r\n    // longFirst : true\r\n    // long\r\n    // short\r\n    const { direction, longFirst, longChild, shortChild } = props\r\n\r\n    // styling\r\n    let isVertical = direction == 'vertical'\r\n    let measure = isVertical ? 'height' : 'width'\r\n    let maxMeasure = !isVertical ? 'height' : 'width'\r\n    let firstStyle = {}, secondStyle = {}\r\n    firstStyle[measure] = longFirst ? '62%' : '38%'\r\n    secondStyle[measure] = longFirst ? '38%' : '62%'\r\n    firstStyle[maxMeasure] = '-webkit-fill-available'\r\n    secondStyle[maxMeasure] = '-webkit-fill-available'\r\n    if (!isVertical) {\r\n        firstStyle.display = 'inline-block'\r\n        secondStyle.display = 'inline-block'\r\n        firstStyle.verticalAlign = 'top'\r\n        secondStyle.verticalAlign = 'top'\r\n    }\r\n\r\n\r\n    // apply styling\r\n    let long = <div style={longFirst ? firstStyle : secondStyle}>{longChild}</div>\r\n    let short = <div style={longFirst ? secondStyle : firstStyle}>{shortChild}</div>\r\n\r\n    return (\r\n        <div style={{ display: direction == 'vertical' ? 'inline-table' : 'inherit', height: '-webkit-fill-available', width: '100%', ...props.style }}>\r\n            {longFirst ? long : short}\r\n            {longFirst ? short : long}\r\n        </div>\r\n    )\r\n}","export const borderStyle = '1px solid rgb(224, 224, 224)'","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport \"./TryIt.scss\"\r\nimport { GoldenRatio } from \"../GoldenRatio\";\r\nimport { borderStyle } from '../../styles'\r\nimport { Tooltip, Slider } from 'antd'\r\nimport { Label } from \"@blueprintjs/core\";\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nclass TryItGradient extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            gradientColors: ['#81042b', '#9a6a79', '#dda7b8', '#040102'],\r\n            numberOfColors: 4\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => this.state.gradientColors.map((color, i) => document.getElementById('gradient-' + i))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setNumberOfColors = (n) => {\r\n        let oldN = this.state.numberOfColors\r\n        let gradientColors = Array.from(this.state.gradientColors)\r\n        console.log(n - oldN)\r\n        if (n > oldN)\r\n            for (let i = 0; i < n - oldN; i++) {\r\n                gradientColors.push('#ffffff')\r\n            }\r\n        if (n < oldN) {\r\n            for (let i = 0; i <  oldN - n; i++) {\r\n                gradientColors.pop()\r\n            }\r\n        }\r\n        console.log(gradientColors)\r\n        this.setState({ numberOfColors: n, gradientColors: gradientColors }, this.setHoverEffects)\r\n    }\r\n    setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.gradientColors\r\n        newColors[colorIndex] = this.getSelectedColor()\r\n        this.setState({ gradientColors: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n\r\n    render() {\r\n        let gradientColors = this.state.gradientColors\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let gradientString = \"linear-gradient(to right,\" + gradientColors.join(',') + \")\"\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div style={{ width: '100%', background: 'white', height: '-webkit-fill-available', border: borderStyle }} >\r\n                <GoldenRatio\r\n                    direction=\"horizontal\"\r\n                    longFirst={true}\r\n                    shortChild={\r\n                        <div className=\"try-colors-container\" style={{ backgroundImage: gradientString }}>\r\n                            {gradientColors.map(\r\n                                (color, i) =>\r\n                                    <div style={{ padding: '10px', width: '100%', }}\r\n                                        onClick={(e) => this.setColor(e, i)} id={'gradient-' + i} />\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    longChild={\r\n                        <div style={{ direction: 'rtl', padding: '24px', borderRight: '2px dashed rgb(202, 210, 221)', height: '-webkit-fill-available', lineHeight: '2' }}>\r\n                            <div style={{ color: 'rgb(97, 97, 97)' }}>\r\n                                <Tooltip placement=\"top\" title={\"Reset Applied Colors\"}>\r\n                                    <Icon icon=\"repeat\" onClick={this.reset} style={{ cursor: 'pointer' }} />\r\n                                </Tooltip>\r\n                                <ExportJSONButton onClick={() => exportJSON(gradientColors)} /></div>\r\n                            <br />\r\n                            <div className=\"hsl-slider\">\r\n                                <Label className=\"slider-label\" style={{ textAlign: 'right' }}>Number of Gradients</Label>\r\n                                <Slider className=\"slider-input\" min={2} max={8} onChange={this.setNumberOfColors} value={this.state.numberOfColors} />\r\n                            </div>\r\n\r\n                            <br />\r\n                            <h4> Gradient Colors </h4>\r\n\r\n                            <div className=\"applied-colors-container\">\r\n                                {gradientColors.map(color =>\r\n                                    <div className=\"applied-color\"\r\n                                        style={{ backgroundColor: color, color: new Color(color, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}>\r\n                                        {color}\r\n                                    </div>)}\r\n                            </div>\r\n\r\n                        </div>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryItGradient);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport \"./TryIt.scss\"\r\nimport { GoldenRatio } from \"../GoldenRatio\";\r\nimport { borderStyle } from '../../styles'\r\nimport { Tooltip } from 'antd'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                background: '#f7f3f4',\r\n                primaryButton: '#f7f3f4',\r\n                secondaryButton: '#f7f3f4',\r\n                successButton: '#f7f3f4',\r\n                warningButton: '#f7f3f4',\r\n                dangerButton: '#f7f3f4',\r\n                infoButton: '#f7f3f4',\r\n\r\n                title: '#030202',\r\n                header: '#030202',\r\n                primaryButtonFont: '#030202',\r\n                secondaryButtonFont: '#030202',\r\n                successButtonFont: '#030202',\r\n                dangerButtonFont: '#030202',\r\n                warningButtonFont: '#030202',\r\n                infoButtonFont: '#030202',\r\n                paragraph: '#030202',\r\n            }\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) => {\r\n\r\n        return (\r\n            <button class='try-button'\r\n                onClick={(e) => this.setColor(e, component)} id={id} style={{\r\n                    backgroundColor: background, color: font, border: '1px solid ' + font + '80'\r\n                }}>\r\n                <div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div></button>)\r\n    }\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div style={{ width: '100%', background: 'white', height: '-webkit-fill-available', border: borderStyle }} className='horizontal-holder-ls'>\r\n\r\n                <div style={{ direction: 'rtl', padding: '24px', borderRight: '2px dashed rgb(202, 210, 221)', height: '-webkit-fill-available', lineHeight: '2' }}>\r\n                    <div style={{ color: 'rgb(97, 97, 97)' }}>\r\n                        <Tooltip placement=\"top\" title={\"Reset Applied Colors\"}>\r\n                            <Icon icon=\"repeat\" onClick={this.reset} style={{ cursor: 'pointer' }} />\r\n                        </Tooltip>\r\n                        <ExportJSONButton onClick={() => exportJSON(components)} /></div>\r\n                    <br />\r\n                    <h4> Backgrounds </h4>\r\n                    <div className=\"applied-colors-container\">\r\n                        {backgrounds.map(key =>\r\n                            <div className=\"applied-color\"\r\n                                style={{\r\n                                    backgroundColor: components[key],\r\n                                    color: new Color(components[key], 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n                                }}>\r\n                                {components[key]}\r\n                            </div>)}\r\n                    </div>\r\n                    <br />\r\n                    <h4> Texts </h4>\r\n                    <div className=\"applied-colors-container\">\r\n                        {texts.map(key =>\r\n                            <div className=\"applied-color\"\r\n                                style={{ backgroundColor: components[key], color: new Color(components[key], 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}>\r\n                                {components[key]}\r\n                            </div>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"try-colors-container\">\r\n                    <div className=\"try-card-holder\">\r\n                        <div id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                            style={{ backgroundColor: background }} headStyle={{ backgroundColor: appBar }} >\r\n                            <h3 className=\"try-title-holder\" style={{ color: title }}>\r\n                                <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Apply Selected Color Here </span>\r\n                            </h3>\r\n\r\n                            <h4 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h4>\r\n                            <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, lineHeight: '2' }}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                                 Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                    </p>\r\n                            <br />\r\n                            <div style={{ display: 'flex' }}>\r\n                                {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                                {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                            </div>\r\n                            <br />\r\n                            <div style={{ display: 'flex' }}>\r\n                                {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                                {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                                {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                                {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                            </div>\r\n                        </div >\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { message, } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n    <span style={{ cursor: 'pointer' }}>\r\n      {props.children}\r\n    </span>\r\n  </CopyToClipboard>\r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from './ClipboardCopier'\r\nimport Color from \"../utilities/Color\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    let selectedColor = props.selectedColor\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n\r\n    return (\r\n        <ClipboardCopier value={selectedColor} >\r\n            <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont, border: '1px solid ' + selectedColorFont }}>\r\n                <label>{selectedColor}  <Icon id=\"copy-to-clipboard-icon\" icon=\"duplicate\" style={{ verticalAlign: 'bottom', fontSize: '0.8em' }} /> </label>\r\n            </div>\r\n        </ClipboardCopier >\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { borderStyle } from '../../styles'\r\nimport TryItGradient from \"./TryItGradient\";\r\nimport TryIt from \"./TryIt\";\r\nimport { SelectedColorPanel } from \"../SelectedColorPanel\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected\r\n    }\r\n}\r\n\r\nconst switchers = [\r\n    {\r\n        label: 'Web App', component: () => <TryIt />\r\n    },\r\n    {\r\n        label: 'Gradient', component: () => <TryItGradient />\r\n    }]\r\n\r\nclass TryMain extends Component {\r\n    state = {\r\n        selectedTryIndex: 0\r\n    }\r\n    switchNext = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == switchers.length - 1)\r\n            this.setState({ selectedTryIndex: 0 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected + 1 })\r\n    }\r\n    switchPrevious = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == 0)\r\n            this.setState({ selectedTryIndex: switchers.length - 1 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected - 1 })\r\n    }\r\n\r\n    render() {\r\n        const selectedTryIndex = this.state.selectedTryIndex\r\n\r\n        const label = switchers[selectedTryIndex].label\r\n        const tryComponent = switchers[selectedTryIndex].component()\r\n\r\n        return (\r\n            <div style={{ width: '100%', background: 'white', border: borderStyle }} >\r\n                <div className='horizontal-holder-ls' style={{ padding: '8px' }}>\r\n                    <div/>\r\n                    <div style={{ textAlign: 'center' }}>\r\n\r\n                        <Icon icon=\"arrow-left\" className=\"arrow-btn\" onClick={this.switchPrevious} />\r\n                        {label}\r\n                        <Icon icon=\"arrow-right\" className=\"arrow-btn\" style={{ marginLeft: '16px' }} onClick={this.switchNext} />\r\n\r\n                        <SelectedColorPanel selectedColor={this.props.selected} />\r\n\r\n                    </div>\r\n                </div>\r\n                {tryComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TryMain);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filters from './Filters'\r\nimport Tiles from './Tiles'\r\nimport DisplayOrderButtons from './DisplayOrderButtons'\r\nimport { ExportJSONButton } from '../../../../../components/ExportJSONButton'\r\nimport { exportJSON } from '../../../../../utilities/ExportJSON'\r\nimport '../HSLFiltersAlternative.css'\r\nimport SelectMode from \"../SelectMode/SelectMode\"\r\nimport ColorPicker from \"../../../../../components/color-picker/ColorPicker\";\r\nimport { GoldenRatio } from \"../../../../../components/GoldenRatio\";\r\nimport { borderStyle } from '../../../../../styles'\r\nimport { Popover } from 'antd';\r\nimport TryMain from \"../../../../../components/TryIt/TryMain\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass HSLBasicContainer extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'white'\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n                <div className='vertical-holder-ls'>\r\n                    <div id='palette-container' style={{ borderRight: borderStyle, borderTop: borderStyle, display: 'flex', flexDirection: 'column' }} >\r\n                        <div className=\" hsl-container-2 \" >\r\n                            <DisplayOrderButtons />\r\n                            <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n                        </div>\r\n                        <Tiles />\r\n                    </div>\r\n                    <div className='vertical-long'><TryMain /></div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode />\r\n                        <div className='horizontal-holder-ls filters-short'>\r\n                            <Filters />\r\n                            <Popover content={<ColorPicker />} placement=\"bottom\">\r\n                                <div className='base-color-select-container' style={{ background: this.props.baseColor.HEXString }} >\r\n                                    <h3 className='select-color-btn' style={{ color: baseColorFont }} >SELECT BASE COLOR</h3>\r\n                                </div>\r\n                            </Popover>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSLBasicContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport HSLBasicContainer from \"./components/HSLBasic/HSLBasicContainer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAdvanced: state.HSLModeReducer.isAdvanced\r\n  }\r\n}\r\nclass HSL extends Component {\r\n  state = {\r\n    isAdvanced: false\r\n  }\r\n  handleSelectMode = (bool) => { this.setState({ isAdvanced: bool }) }\r\n  render() {\r\n    return (<HSLBasicContainer />);\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSL);\r\n\r\n","import React from \"react\";\r\nimport { Tooltip } from 'antd'\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const ResetColorsButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Reset\"}>\r\n        <Icon icon=\"repeat\" className=\"reset-btn\" onClick={props.onClick} />\r\n    </Tooltip>\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Icon, Tooltip } from 'antd'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0 };\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    handleExportJSON_ButtonClick = () => exportJSON(this.state.colors)\r\n    handleResetButtonClick = () => { this.setState({ colors: [this.props.baseColor.HEXString], clickedColor: 0 }) }\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        let selectedColorFont = new Color(baseColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div style={{ width: '400px', width: '41vw' }} className=\"element-holder\">\r\n\r\n                <div className=\" hsl-container-2 bottom-bordered top-bordered\" style={{}}>\r\n                    {/* ExportJSON */}\r\n                    < ExportJSONButton onClick={this.exportJSON} />\r\n                    {/* Reset */}\r\n                    <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n                    {/* Selected Color Panel */}\r\n                    <SelectedColorPanel selectedColor={baseColor} />\r\n                </div>\r\n\r\n                <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.colors.map((color, index) =>\r\n                        <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                        className={\"single-tile \" + (selectedColorIndex == index ? 'selected-tile' : '')}\r\n                            style={{\r\n                                backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                padding: '30px', display: 'block'\r\n                            }} />)\r\n                    }\r\n                    <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)}\r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign: 'center', borderRadius: '50%' }} >\r\n                        <Icon type=\"plus\" style={{ fontSize: '24px', padding: '20px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ColorPicker />\r\n        <GeneratedColors />\r\n        <TryIt selectedColor={this.props.baseColor.HEXString} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from \"../../../../redux/SelectedColorReducer\";\r\nimport { changeBaseColor } from \"../../../../redux/BaseColorReducer\";\r\nimport { exportJSON } from \"../../../../utilities/ExportJSON\";\r\nimport \"./PictureUpload.css\"\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch);\r\n};\r\n\r\nclass PictureUpload extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n    let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n    // By Hue Version\r\n    let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n    let arr12Colors = [];\r\n    let arr24Colors1 = [];\r\n    let arr48Colors1 = [];\r\n    let arr72Colors1 = [];\r\n    pushVersion1Function(arr12Colors, 12);\r\n    pushVersion1Function(arr24Colors1, 24);\r\n    pushVersion1Function(arr48Colors1, 48);\r\n    pushVersion1Function(arr72Colors1, 72);\r\n    let version1Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      arr[bucketNumber].totalHue += hsl.hue;\r\n      arr[bucketNumber].totalSat += hsl.sat;\r\n      arr[bucketNumber].totalLight += hsl.light;\r\n      arr[bucketNumber].number += 1;\r\n    };\r\n\r\n    // By Hue and Light Version\r\n    let pushVersion2Function = (arr, n) => {\r\n      for (var i = 0; i < n; i++) {\r\n        arr.push({\r\n          light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n          dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n        });\r\n      }\r\n    };\r\n    let arr12Colors2 = [];\r\n    let arr24Colors2 = [];\r\n    let arr48Colors2 = [];\r\n    let arr72Colors2 = [];\r\n    pushVersion2Function(arr12Colors2, 12);\r\n    pushVersion2Function(arr24Colors2, 24);\r\n    pushVersion2Function(arr48Colors2, 48);\r\n    pushVersion2Function(arr72Colors2, 72);\r\n    let version2Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n      bucket.totalHue += hsl.hue;\r\n      bucket.totalSat += hsl.sat;\r\n      bucket.totalLight += hsl.light;\r\n      bucket.number += 1;\r\n    };\r\n\r\n    for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n      let r = pixelArray[i];\r\n      let g = pixelArray[i + 1];\r\n      let b = pixelArray[i + 2];\r\n      let hsl = RGBtoHSL(r, g, b);\r\n      // By Hue Version\r\n      version1Function(hsl, arr12Colors, 30);\r\n      version1Function(hsl, arr24Colors1, 15);\r\n      version1Function(hsl, arr48Colors1, 7.5);\r\n      version1Function(hsl, arr72Colors1, 5);\r\n\r\n      // By Hue and Light Version\r\n      version2Function(hsl, arr12Colors2, 30);\r\n      version2Function(hsl, arr24Colors2, 15);\r\n      version2Function(hsl, arr48Colors2, 7.5);\r\n      version2Function(hsl, arr72Colors2, 5);\r\n    }\r\n\r\n    // By Hue Version\r\n    let extractColorsFunction = obj => \"hsl(\" + obj.totalHue / obj.number + \", \" + obj.totalSat / obj.number + \"%, \" + obj.totalLight / obj.number + \"% )\";\r\n    let palette1 = arr12Colors.map(extractColorsFunction);\r\n    let palette2 = arr24Colors1.map(extractColorsFunction);\r\n    let palette3 = arr48Colors1.map(extractColorsFunction);\r\n    let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n    // By Hue and Light Version\r\n    let extractColorsFunction2 = arr => {\r\n      //looks better when dark goes first\r\n      let darkLightArr = arr.map(obj => {\r\n        let light = obj.light;\r\n        let lightStr = \"hsl(\" + light.totalHue / light.number + \", \" + light.totalSat / light.number + \"%, \" + light.totalLight / light.number + \"% )\";\r\n        let dark = obj.dark;\r\n        let darkStr = \"hsl(\" + dark.totalHue / dark.number + \", \" + dark.totalSat / dark.number + \"%, \" + dark.totalLight / dark.number + \"% )\";\r\n        return { dark: darkStr, light: lightStr };\r\n      });\r\n      let darks = darkLightArr.map(obj => obj.dark);\r\n      let lights = darkLightArr.map(obj => obj.light);\r\n      let palette = [];\r\n      palette = palette.concat(darks);\r\n      palette = palette.concat(lights);\r\n      return palette;\r\n    };\r\n    let palette5 = extractColorsFunction2(arr12Colors2);\r\n    let palette6 = extractColorsFunction2(arr24Colors2);\r\n    let palette7 = extractColorsFunction2(arr48Colors2);\r\n    let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n    this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) { palettePieces = palette.map(c => <div className=\"picture-single-tile\" style={{ backgroundColor: c }} />) }\r\n    return palettePieces;\r\n  };\r\n\r\n  render() {\r\n    const { palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8 } = this.state\r\n\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) { $imagePreview = (<img id=\"uploaded-image\" src={imagePreviewUrl} style={{ width: \"400px\" }} />); }\r\n    else { $imagePreview = <span />; }\r\n\r\n    return (\r\n      <div className=\"previewComponent element-holder\">\r\n        <div style={{ display: \"inline-block\", verticalAlign: 'top' }}>\r\n          <h2>Please select an Image for Preview</h2>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={e => this.handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={e => this.handleSubmit(e)}> Generate Palette </button>\r\n          </form>\r\n          <br />\r\n          <div className=\"imgPreview\"> {$imagePreview} </div>\r\n          <canvas id=\"canv\" />\r\n        </div>\r\n        {this.state.generated && (\r\n          <div id=\"generated-palettes-holder\">\r\n            <h3> Version 1 (12, by Hue) </h3> <div> {this.getTiles(palette1)} </div>\r\n            <h3> Version 2 (24, by Hue) </h3> <div> {this.getTiles(palette2)} </div>\r\n            <h3> Version 3 (48, by Hue) </h3> <div> {this.getTiles(palette3)} </div>\r\n            <h3> Version 4 (72, by Hue) </h3> <div> {this.getTiles(palette4)} </div>\r\n            <h3> Version 5 (12, by Hue and Light) </h3> <div> {this.getTiles(palette5)} </div>\r\n            <h3> Version 6 (24, by Hue and Light) </h3> <div> {this.getTiles(palette6)} </div>\r\n            <h3> Version 7 (48, by Hue and Light) </h3> <div> {this.getTiles(palette7)} </div>\r\n            <h3> Version 8 (72, by Hue and Light) </h3> <div> {this.getTiles(palette8)} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nimport \"./Picture.css\"\r\n\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picture-page\">\r\n        <PictureUpload /><TryIt />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport HSLPaletteGenerator from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { getChunks } from \"../../../../utilities/ArrayMethods\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Icon, Slider, Select, Tooltip } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport './HSLFilters.css'\r\nimport SelectMode from \"./SelectMode/SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{textAlign:'right'}}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\" >\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* HSL FILTERS */}\r\n          <div className='bottom-bordered hsl-advanced-filters'>\r\n            {/* Changes */}\r\n            <div >\r\n              {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n              {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n              {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div>\r\n              {this.getSliderInput(hueStep, this.handleHueStepChange, 1, 100, 'Hue Step')}\r\n              {this.getSliderInput(satStep, this.handleSatStepChange, 1, 100, 'Saturation Step')}\r\n              {this.getSliderInput(lightStep, this.handleLightStepChange, 1, 100, 'Light Step')}\r\n            </div>\r\n          </div>\r\n\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div className=\"vertical-padding bottom-bordered\" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: \"12px\" }}>\r\n            {/* Number Of Colors */}\r\n            <div id='number-of-colors-input'> {this.getSliderInput(numberOfColors, this.handleNumberOfColorsChange, 6, 181, 'Number of Colors')} </div>\r\n\r\n            <div className=\" hsl-container-2\" style={{ marginBottom: \"0\", padding: \"0\" }}>\r\n              {/* ExportJSON */}\r\n              < ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n              {/* Reset */}\r\n              <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n              {/* Selected Color Panel */}\r\n              <SelectedColorPanel selectedColor={selectedColor} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' render={() => (<Redirect to='/generate/hsl' />)}  />\r\n      <Route exact path='/generate/hsl' component={HSL} />\r\n      <Route path='/generate/custom' component={Custom} />\r\n      <Route path='/generate/picture' component={Picture} />\r\n      <Route path='/community' component={Community} />\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <Main />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    \n      <App />\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}