{"version":3,"sources":["logo.svg","components/account/Login.js","components/account/Register.js","components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/color-picker/ColorPicker.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","pages/color-generation/HSL/components/HSLFilters.js","components/TryIt.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","state","open","handleClickOpen","_this","setState","handleClose","handleLoginButtonClick","react_default","a","createElement","Button_default","onClick","this","Dialog_default","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","TextField_default","autoFocus","margin","label","type","fullWidth","DialogActions_default","color","React","Component","Register","Header","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","currentTarget","handleClosePalette","_this$state","AppBar_default","position","Toolbar_default","Typography_default","variant","aria-owns","aria-haspopup","Menu_default","anchorEl","Boolean","MenuItem_default","component","Link","to","Login_Login","Register_Register","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","initial_state","baseColor","ColorPicker","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","componentDidMount","generateMainCanvas","props","generateSatCanvas","document","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","ctx","getElementById","getContext","i","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","j","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","clientX","clientY","handleMouseMoveMainCanvas","rect","getBoundingClientRect","x","left","y","top","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","handleFormInput","getNumberPickerInput","val","onChange","className","value","_this2","Grid_default","container","spacing","item","xs","style","display","width","height","border","borderRadius","marginLeft","marginTop","backgroundColor","zIndex","lib","time","handler","float","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","marginRight","e","target","connect","BaseColorReducer","dispatch","bindActionCreators","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","HSLFilters","hueStep","satStep","lightStep","numberOfColors","clickedColor","selectedPreset","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","selectPreset","preset","setAnalogous","setAdjacent","setTetrad","setTriad","setMonochromatic","handleSelectColor","index","colorElements","getElementsByTagName","attributes","anyColor","Select_default","flexWrap","Array","apply","map","el","floor","newColor","padding","selectButtonStyle","TryIt","components","appBar","appBarFont","header1","header2","background","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","setColor","compName","newColors","Card_default","CardContent_default","justifyContent","SelectedColorReducer","HSL","color_picker_ColorPicker","components_HSLFilters","components_TryIt","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","push","console","log","selectedColorIndex","Add_default","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","handleSubmit","preventDefault","img","Image","src","canvas","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","generatedPalette1","generatedPalette2","generatedPalette3","generatedPalette4","extractColorsFunction2","darkLightArr","lightStr","darks","lights","palette","concat","generatedPalette5","generatedPalette6","generatedPalette7","generatedPalette8","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","$imagePreview","palettePieces1","palettePieces2","palettePieces3","palettePieces4","palettePieces5","palettePieces6","palettePieces7","palettePieces8","onSubmit","Picture","components_PictureUpload","Community","palettes","Main","Switch","Route","exact","path","App","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rel","href","components_Header","Main_Main","window","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9089d613.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleLoginButtonClick = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Login</Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Login </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Username or Email\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            \r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Register extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleLoginButtonClick = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Sign Up</Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Sign Up </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Create Account\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Login from \"./account/Login\"\r\nimport Register from \"./account/Register\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n\r\n\r\n\r\n  render() {\r\n    const { newPaletteAnchor, loginAnchor } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\"> Awesome CPG </Typography>\r\n            <div>\r\n              <Button aria-owns={newPaletteAnchor ? \"simple-menu\" : null} aria-haspopup=\"true\" onClick={this.handleClickPalette}> New Palette</Button>\r\n              <Menu id=\"new-palette\" anchorEl={newPaletteAnchor} open={Boolean(newPaletteAnchor)} onClose={this.handleClosePalette} >\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/hsl'>From HSL</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/custom'>Custom</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/picture'>From Picture</MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <Button component={Link} to='/community'>Community</Button>\r\n            <Login />\r\n            <Register />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color(200, 20, 50, 'HSL') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    allowClrChange: false,\r\n    allowSatChange: false,\r\n    mouseDownMainCanvas: false,\r\n    mouseDownSatCanvas: false,\r\n\r\n    pickerCirclePositionX: 0,\r\n    pickerCirclePositionY: 0,\r\n    saturationRectPositionY: 0\r\n  };\r\n  componentDidMount = () => {\r\n    this.generateMainCanvas(this.props.baseColor);\r\n    this.generateSatCanvas(this.props.baseColor);\r\n    document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n    document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n  };\r\n\r\n  generateMainCanvas = baseColor => {\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let i = 0; i < 360; i += 1) {\r\n      var gradient = ctx.createLinearGradient(i, 0, i, 200);\r\n      gradient.addColorStop(0, \"hsl(\" + i + \",\" + sat + \"%,0%)\");\r\n      gradient.addColorStop(0.5, \"hsl(\" + i + \",\" + sat + \"%,50%)\");\r\n      gradient.addColorStop(1, \"hsl(\" + i + \",\" + sat + \"%,100%)\");\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(i, 0, i, 200);\r\n    }\r\n  };\r\n  generateSatCanvas = baseColor => {\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202; j += 2) {\r\n      for (let i = 0; i < 10; i += 1) {\r\n        ctx.fillStyle = \"hsl(\" + hue + \", \" + j / 2 + \"%, \" + light + \"%)\";\r\n        ctx.fillRect(i, j, i, j + 2);\r\n      }\r\n    }\r\n  };\r\n\r\n  enableColorChange = () => this.setState({ allowClrChange: true });\r\n  disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n  handleMouseDownMainCanvas = evt => {\r\n    this.setMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  handleMouseMoveMainCanvas = evt => {\r\n    if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n      this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n  setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n  setColorFromMainCanvas = (clientX, clientY) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let hue = Math.round(x);\r\n    let sat = this.props.baseColor.hsl.sat;\r\n    let light = Math.round(y / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.props.changeBaseColor(color);\r\n    this.generateSatCanvas(color);\r\n  };\r\n\r\n  handleMouseDownSatCanvas = evt => {\r\n    this.setSatMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  handleMouseMoveSatCanvas = evt => {\r\n    if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n      this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n  setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n  setColorFromSatCanvas = clientY => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = this.props.baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.props.changeBaseColor(color);\r\n    this.generateMainCanvas(color);\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    this.generateMainCanvas(color);\r\n    this.generateSatCanvas(color);\r\n  };\r\n  getNumberPickerInput = (id, max, val, onChange) => <input className=\"numberPickerInput\" type=\"number\" id={id} min=\"0\" max={max} value={val} onChange={onChange} />\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    let hue = baseColor.hsl.hue;\r\n    let sat = baseColor.hsl.sat;\r\n    let light = baseColor.hsl.light;\r\n    let r = baseColor.rgb.r;\r\n    let g = baseColor.rgb.g;\r\n    let b = baseColor.rgb.b;\r\n    let hexString = baseColor.HEXString;\r\n\r\n    let setFromHue = e => this.handleFormInput(new Color(e.target.value, sat, light, \"HSL\"))\r\n    let setFromSat = e => this.handleFormInput(new Color(hue, e.target.value, light, \"HSL\"))\r\n    let setFromLight = e => this.handleFormInput(new Color(hue, sat, e.target.value, \"HSL\"))\r\n    let setFromRed = e => this.handleFormInput(new Color(e.target.value, g, b, \"RGB\"))\r\n    let setFromGreen = e => this.handleFormInput(new Color(r, e.target.value, b, \"RGB\"))\r\n    let setFromBlue = e => this.handleFormInput(new Color(r, g, e.target.value, \"RGB\"))\r\n    let setFromHex = e => this.handleFormInput(new Color(e.target.value, 0, 0, \"Hex\"))\r\n\r\n    return (\r\n      <div>\r\n        <Grid container spacing={8}>\r\n          <Grid item xs={12}>\r\n            <div style={{ display: \"inline-block\" }}>\r\n              <div id=\"pickerCircle\"\r\n                style={{\r\n                  width: \"16px\", height: \"16px\", border: \"1px solid white\", borderRadius: \"15px\",\r\n                  marginLeft: baseColor.hsl.hue - 8 + \"px\", marginTop: baseColor.hsl.light * 2 - 8 + \"px\",\r\n                  backgroundColor: hexString, position: \"absolute\", zIndex: 100\r\n                }}\r\n              />\r\n              <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                <canvas height=\"200\" width=\"360\" id=\"main-canvas-color-picker\"\r\n                  style={{ display: \"inline\", position: \"relative\", float: \"left\" }}\r\n                  onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                  onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n              </Throttle>\r\n            </div>\r\n            <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\r\n              <div id=\"saturationCircle\"\r\n                style={{\r\n                  position: \"absolute\", display: \"inline\", marginLeft: \"-6px\", width: \"20px\", height: \"7px\", border: \"2px solid white\", borderRadius: \"3px\",\r\n                  marginTop: baseColor.hsl.sat * 2 - 5 + \"px\", backgroundColor: hexString\r\n                }} />\r\n              <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                <canvas height=\"200\" width=\"10\" id=\"saturation-canvas-color-picker\" style={{ display: \"inline\", marginRight: \"7px\" }}\r\n                  onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas} onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n              </ Throttle>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}> </Grid>\r\n          <Grid item xs={3} spacing={8}>\r\n            <Grid item xs={12}> H:  {this.getNumberPickerInput('H', 359, hue, setFromHue)} </Grid>\r\n            <Grid item xs={12}> S: {this.getNumberPickerInput('S', 100, sat, setFromSat)}</Grid>\r\n            <Grid item xs={12}> L: {this.getNumberPickerInput('L', 100, b, setFromLight)}</Grid>\r\n          </Grid>\r\n          <Grid item xs={4} spacing={8}> <div style={{ width: \"100%\", height: \"100%\", backgroundColor: hexString, display: \"inline-block\" }} /> </Grid>\r\n          <Grid item xs={3} spacing={8}>\r\n            <Grid item xs={12}> R: {this.getNumberPickerInput('R', 255, r, setFromRed)} </Grid>\r\n            <Grid item xs={12}> G: {this.getNumberPickerInput('G', 255, g, setFromGreen)}</Grid>\r\n            <Grid item xs={12}> B: {this.getNumberPickerInput('B', 255, b, setFromBlue)}</Grid>\r\n          </Grid>\r\n          <Grid item xs={12}> Hex: <input style={{ width: \"72px\" }} type=\"text\" id=\"Hex\" value={hexString} onChange={setFromHex} /></Grid>\r\n        </Grid>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color(200, 20, 50, 'HSL').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Color from \"../../../../utilities/Color\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {exportJSON} from '../../../../utilities/ExportJSON'\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 25,\r\n    satChange: 0,\r\n    lightChange: 1,\r\n    hueStep: 1,\r\n    satStep: 1,\r\n    lightStep: 1,\r\n    numberOfColors: 130,\r\n\r\n    clickedColor: 0,\r\n    selectedPreset: 'None'\r\n  };\r\n  handleHueChange = e => this.setState({ hueChange: e.target.value, selectedPreset: 'None' })\r\n  handleSatChange = e => this.setState({ satChange: e.target.value, selectedPreset: 'None' })\r\n  handleLightChange = e => this.setState({ lightChange: e.target.value, selectedPreset: 'None' })\r\n  handleHueStepChange = e => this.setState({ hueStep: e.target.value, selectedPreset: 'None' })\r\n  handleSatStepChange = e => this.setState({ satStep: e.target.value, selectedPreset: 'None' })\r\n  handleLightStepChange = e => this.setState({ lightStep: e.target.value, selectedPreset: 'None' })\r\n  handleNumberOfColorsChange = e => this.setState({ numberOfColors: e.target.value, selectedPreset: 'None' })\r\n\r\n  selectPreset = e => {\r\n    let preset = e.target.value\r\n    this.setState({ selectedPreset: preset })\r\n    switch (preset) {\r\n      case \"Analogous\": this.setAnalogous();\r\n      case \"Adjacent\": this.setAdjacent();\r\n      case \"Tetrad\": this.setTetrad();\r\n      case \"Triad\": this.setTriad();\r\n    }\r\n  }\r\n  setAnalogous = () => this.setState({ hueChange: 30, satChange: 20, lightChange: 20, hueStep: 16, satStep: 5, lightStep: 1, numberOfColors: 60 })\r\n  setTetrad = () => this.setState({ hueChange: 30, satChange: 20, lightChange: 20, hueStep: 16, satStep: 5, lightStep: 1, numberOfColors: 60 })\r\n  setMonochromatic = () => this.setState({ hueChange: 30, satChange: 20, lightChange: 20, hueStep: 16, satStep: 5, lightStep: 1, numberOfColors: 60 })\r\n  setAdjacent = () => this.setState({ hueChange: 30, satChange: 20, lightChange: 20, hueStep: 16, satStep: 5, lightStep: 1, numberOfColors: 60 })\r\n  setTriad = () => this.setState({ hueChange: 30, satChange: 20, lightChange: 20, hueStep: 16, satStep: 5, lightStep: 1, numberOfColors: 60 })\r\n\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n\r\n  exportJSON = () => {\r\n    let colorElements = document.getElementById(\"generated-colors\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].attributes.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    let hue = baseColor.hsl.hue;\r\n    let sat = baseColor.hsl.sat;\r\n    let light = baseColor.hsl.light;\r\n\r\n    let anyColor = new Color(0, 0, 0, 'RGB')\r\n\r\n    return (\r\n      <Grid container spacing={8} style={{ width: '400px' }}>\r\n        <Grid item xs={12} >Preset: <Select value={this.state.selectedPreset} onChange={this.selectPreset} >\r\n          <MenuItem value={'None'}> <em>None</em></MenuItem>\r\n          <MenuItem value={'Analogous'}><em>Analogous</em></MenuItem>\r\n          <MenuItem value={'Adjacent'}><em>Adjacent</em></MenuItem>\r\n          <MenuItem value={'Triad'}><em>Triad</em></MenuItem>\r\n          <MenuItem value={'Tetrad'}><em>Tetrad</em></MenuItem> </Select>\r\n        </Grid>\r\n        <Grid item xs={6} > Hue Change: < input type=\"number\" min=\"0\" max='360' value={this.state.hueChange} onChange={this.handleHueChange} /></Grid>\r\n        <Grid item xs={6} > Hue Step: < input type=\"number\" min=\"0\" max='360' value={this.state.hueStep} onChange={this.handleHueStepChange} /></Grid>\r\n        <Grid item xs={6} > Sat Change: < input type=\"number\" min=\"0\" max='360' value={this.state.satChange} onChange={this.handleSatChange} /></Grid>\r\n        <Grid item xs={6} > Sat Step: < input type=\"number\" min=\"0\" max='360' value={this.state.satStep} onChange={this.handleSatStepChange} /></Grid>\r\n        <Grid item xs={6} > Light Change: < input type=\"number\" min=\"0\" max='360' value={this.state.lightChange} onChange={this.handleLightChange} /></Grid>\r\n        <Grid item xs={6} > Light Step: < input type=\"number\" min=\"0\" max='360' value={this.state.lightStep} onChange={this.handleLightStepChange} /></Grid>\r\n        <Grid item xs={12} > Number of Colors: < input type=\"number\" min=\"0\" max='360' value={this.state.numberOfColors} onChange={this.handleNumberOfColorsChange} /></Grid>\r\n\r\n        <Grid item xs={12} ><button onClick={this.exportJSON}> Export JSON</button></Grid>\r\n        <Grid item xs={12} >\r\n          <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n            {\r\n              Array.apply(null, { length: this.state.numberOfColors }).map((el, index) => {\r\n                let h = (hue + (Math.floor(index / this.state.hueStep) * this.state.hueChange)) % 360\r\n                let s = (sat + (Math.floor(index / this.state.satStep) * this.state.satChange)) % 101\r\n                let l = (light + (Math.floor(index / this.state.lightStep) * this.state.lightChange)) % 101\r\n                let newColor = anyColor.HSLtoHex(h, s, l)\r\n                return <div onClick={() => this.handleSelectColor(newColor, index)}\r\n                  style={{ backgroundColor: newColor, borderRadius: this.state.clickedColor == index ? '15px' : '0', padding: '15px', display: 'block' }} ></div>\r\n              })\r\n            }\r\n          </div>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Color from \"../utilities/Color\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\nconst selectButtonStyle = { color: 'black', width: '100%', border: 'solid gray 1px', padding: '4px' }\r\n\r\nclass TryIt extends Component {\r\n    state = {\r\n        components: {\r\n            appBar: 'white',\r\n            appBarFont: '',\r\n            header1: 'white',\r\n            header2: '',\r\n            background: 'lightgray',\r\n            primaryButton: '',\r\n            secondaryButton: '',\r\n            successButton: '',\r\n            dangerButton: '',\r\n            infoButton: '',\r\n\r\n            primaryButtonFont: '',\r\n            secondaryButtonFont: '',\r\n            successButtonFont: '',\r\n            dangerButtonFont: '',\r\n            infoButtonFont: '',\r\n            paragraph: '',\r\n        }\r\n    };\r\n    setColor = (compName) => {\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.props.selected\r\n        this.setState({ components: newColors })\r\n    }\r\n\r\n    render() {\r\n        let components = this.state.components\r\n\r\n        let setAppBar = () => this.setColor('appBar')\r\n        let setAppBarFont = () => this.setColor('appBarFont')\r\n        let setHeader1 = () => this.setColor('header1')\r\n        let setHeader2 = () => this.setColor('header2')\r\n        let setBackground = () => this.setColor('background')\r\n        let setPrimaryButton = () => this.setColor('primaryButton')\r\n        let setSecondaryButton = () => this.setColor('secondaryButton')\r\n        let setSuccessButton = () => this.setColor('successButton')\r\n        let setDangerButton = () => this.setColor('dangerButton')\r\n        let setInfoButton = () => this.setColor('infoButton')\r\n\r\n        let setPrimaryButtonFont = () => this.setColor('primaryButtonFont')\r\n        let setSecondaryButtonFont = () => this.setColor('secondaryButtonFont')\r\n        let setSuccessButtonFont = () => this.setColor('successButtonFont')\r\n        let setDangerButtonFont = () => this.setColor('dangerButtonFont')\r\n        let setInfoButtonFont = () => this.setColor('infoButtonFont')\r\n        let setParagraph = () => this.setColor('paragraph')\r\n\r\n        return (\r\n            <Grid container spacing={24}>\r\n                <Grid item xs={8}>\r\n                    <Card style={{ backgroundColor: components.background }}>\r\n                        <Toolbar style={{ backgroundColor: components.appBar }}> <Typography><h2 style={{ color: components.appBarFont }}> App Bar </h2></Typography></Toolbar>\r\n                        <CardContent >\r\n                            <Typography>\r\n                                <h2 style={{ color: components.header1 }}> Header </h2>\r\n                                <p style={{ color: components.paragraph }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <Button style={{ backgroundColor: components.primaryButton, color: components.primaryButtonFont }} variant=\"contained\" color=\"primary\"> Primary </Button>\r\n                                <Button style={{ backgroundColor: components.secondaryButton, color: components.secondaryButtonFont }} variant=\"contained\" color=\"primary\"> Secondary </Button>\r\n                                <Button style={{ backgroundColor: components.infoButton, color: components.infoButtonFont }} variant=\"contained\" color=\"primary\"> Info </Button>\r\n                                <Button style={{ backgroundColor: components.successButton, color: components.successButtonFont }} variant=\"contained\" color=\"primary\"> Success </Button>\r\n                                <Button style={{ backgroundColor: components.dangerButton, color: components.dangerButtonFont }} variant=\"contained\" color=\"primary\"> Danger </Button>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card >\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                    <Typography style = {{ backgroundColor: this.props.selected}}>\r\n                        <h2> {this.props.selected }\r\n                    <span style={{ borderRadius: '15px', padding: '15px', display: 'inline-block', backgroundColor: this.props.selected }} /></h2> </Typography>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setAppBarFont}> App Bar Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setAppBar}> App Bar Background </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setBackground}> Background </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setHeader1}> Header </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setParagraph}> Paragraph </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setPrimaryButtonFont}> Primary Button Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setPrimaryButton}> Primary Button Background</div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setSecondaryButtonFont}> Secondary Button Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setSecondaryButton}> Secondary Button Background</div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setInfoButtonFont}> Info Button Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setInfoButton}> Info Button Background</div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setSuccessButtonFont}> Success Button Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setSuccessButton}> Success Button Background</div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setDangerButtonFont}> Danger Button Font </div></Grid>\r\n                        <Grid item xs={6} style={selectButtonStyle}><div onClick={setDangerButton}> Danger Button Background</div></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nclass HSL extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <ColorPicker />\r\n            <HSLFilters />\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default HSL;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0};\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    exportJSON = () => exportJSON(this.state.colors)\r\n\r\n    render() {\r\n        console.log(this.state.colors)\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        return (\r\n            <Grid container spacing={8} style={{ width: '400px' }}>\r\n                <Grid item xs={12} ><button onClick={this.exportJSON}> Export JSON</button></Grid>\r\n                <Grid item xs={12} >\r\n                    <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                        {this.state.colors.map((color, index) =>\r\n                            <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                                style={{\r\n                                    backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                    borderRadius: selectedColorIndex == index ? '30px' : '0', padding: '30px', display: 'block'\r\n                                }} ></div>)\r\n                        }\r\n                        <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)} style={{ border: 'gray solid 1px', display: 'block', width: '60px', height: '60px' }} >\r\n                            <AddIcon style={{ margin: 'auto', marginTop: '15px' }} />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <ColorPicker />\r\n            <GeneratedColors />\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Custom;\r\n","import ImageUploader from 'react-images-upload';\r\n\r\nimport React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass PictureUpload extends Component {\r\n    state = {\r\n        palette1: [], palette2: [], palette3: [], palette4: [],\r\n        palette5: [], palette6: [], palette7: [], palette8: [],\r\n        clickedColor: 0, image: '', imagePreviewUrl: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let img = new Image()\r\n        img.src = this.state.imagePreviewUrl\r\n        let canvas = document.createElement('canvas')\r\n        canvas.width = img.width;\r\n        canvas.height = img.height\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.drawImage(img, 0, 0)\r\n        let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data\r\n\r\n        // By Hue Version\r\n        let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } }\r\n        let arr12Colors = []\r\n        let arr24Colors1 = []\r\n        let arr48Colors1 = []\r\n        let arr72Colors1 = []\r\n        pushVersion1Function(arr12Colors, 12)\r\n        pushVersion1Function(arr24Colors1, 24)\r\n        pushVersion1Function(arr48Colors1, 48)\r\n        pushVersion1Function(arr72Colors1, 72)\r\n        let version1Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            arr[bucketNumber].totalHue += hsl.hue\r\n            arr[bucketNumber].totalSat += hsl.sat\r\n            arr[bucketNumber].totalLight += hsl.light\r\n            arr[bucketNumber].number += 1\r\n        }\r\n\r\n        // By Hue and Light Version\r\n        let pushVersion2Function = (arr, n) => {\r\n            for (var i = 0; i < n; i++) {\r\n                arr.push({\r\n                    light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n                    dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n                });\r\n            }\r\n        }\r\n        let arr12Colors2 = []\r\n        let arr24Colors2 = []\r\n        let arr48Colors2 = []\r\n        let arr72Colors2 = []\r\n        pushVersion2Function(arr12Colors2, 12)\r\n        pushVersion2Function(arr24Colors2, 24)\r\n        pushVersion2Function(arr48Colors2, 48)\r\n        pushVersion2Function(arr72Colors2, 72)\r\n        let version2Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark\r\n            bucket.totalHue += hsl.hue\r\n            bucket.totalSat += hsl.sat\r\n            bucket.totalLight += hsl.light\r\n            bucket.number += 1\r\n        }\r\n\r\n        for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n            let r = pixelArray[i];\r\n            let g = pixelArray[i + 1];\r\n            let b = pixelArray[i + 2];\r\n            let hsl = RGBtoHSL(r, g, b)\r\n            // By Hue Version\r\n            version1Function(hsl, arr12Colors, 30)\r\n            version1Function(hsl, arr24Colors1, 15)\r\n            version1Function(hsl, arr48Colors1, 7.5)\r\n            version1Function(hsl, arr72Colors1, 5)\r\n\r\n            // By Hue and Light Version\r\n            version2Function(hsl, arr12Colors2, 30)\r\n            version2Function(hsl, arr24Colors2, 15)\r\n            version2Function(hsl, arr48Colors2, 7.5)\r\n            version2Function(hsl, arr72Colors2, 5)\r\n        }\r\n\r\n        // By Hue Version\r\n        let extractColorsFunction = obj => 'hsl(' + obj.totalHue / obj.number + ', ' + obj.totalSat / obj.number + '%, ' + obj.totalLight / obj.number + '% )'\r\n        let generatedPalette1 = arr12Colors.map(extractColorsFunction)\r\n        let generatedPalette2 = arr24Colors1.map(extractColorsFunction)\r\n        let generatedPalette3 = arr48Colors1.map(extractColorsFunction)\r\n        let generatedPalette4 = arr72Colors1.map(extractColorsFunction)\r\n\r\n        // By Hue and Light Version\r\n        let extractColorsFunction2 = arr => {\r\n            //looks better when dark goes first\r\n            let darkLightArr = arr.map(obj => {\r\n                let light = obj.light\r\n                let lightStr = 'hsl(' + light.totalHue / light.number + ', ' + light.totalSat / light.number + '%, ' + light.totalLight / light.number + '% )'\r\n                let dark = obj.dark\r\n                let darkStr = 'hsl(' + dark.totalHue / dark.number + ', ' + dark.totalSat / dark.number + '%, ' + dark.totalLight / dark.number + '% )'\r\n                return { dark: darkStr, light: lightStr }\r\n            })\r\n            let darks = darkLightArr.map(obj => obj.dark)\r\n            let lights = darkLightArr.map(obj => obj.light)\r\n            let palette = []\r\n            palette = palette.concat(darks)\r\n            palette = palette.concat(lights)\r\n            return palette\r\n        }\r\n        let generatedPalette5 = extractColorsFunction2(arr12Colors2)\r\n        let generatedPalette6 = extractColorsFunction2(arr24Colors2)\r\n        let generatedPalette7 = extractColorsFunction2(arr48Colors2)\r\n        let generatedPalette8 = extractColorsFunction2(arr72Colors2)\r\n\r\n        this.setState({\r\n            palette1: generatedPalette1, palette2: generatedPalette2, palette3: generatedPalette3, palette4: generatedPalette4,\r\n            palette5: generatedPalette5, palette6: generatedPalette6, palette7: generatedPalette7, palette8: generatedPalette8\r\n        })\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    getTiles = (palette) => {\r\n        let palettePieces = ''\r\n        if (palette.length != 0) {\r\n            palettePieces = palette.map((c) => <Grid item xs={1} > <div style={{ padding: '30px', backgroundColor: c }} /> </Grid>)\r\n        }\r\n        return palettePieces\r\n    }\r\n\r\n    render() {\r\n        let { imagePreviewUrl } = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n            $imagePreview = (<img id='uploaded-image' src={imagePreviewUrl} style={{ width: '400px' }} />);\r\n        } else {\r\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n\r\n        let palettePieces1 = this.getTiles(this.state.palette1)\r\n        let palettePieces2 = this.getTiles(this.state.palette2)\r\n        let palettePieces3 = this.getTiles(this.state.palette3)\r\n        let palettePieces4 = this.getTiles(this.state.palette4)\r\n        let palettePieces5 = this.getTiles(this.state.palette5)\r\n        let palettePieces6 = this.getTiles(this.state.palette6)\r\n        let palettePieces7 = this.getTiles(this.state.palette7)\r\n        let palettePieces8 = this.getTiles(this.state.palette8)\r\n\r\n        return (\r\n            <div className=\"previewComponent\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input className=\"fileInput\" type=\"file\" onChange={(e) => this.handleImageChange(e)} />\r\n                    <button className=\"submitButton\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Upload Image</button>\r\n                </form>\r\n                <div className=\"imgPreview\" > {$imagePreview} </div>\r\n                <canvas id='canv' />\r\n\r\n                <h3> Version 1 (12, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces1}\r\n                </Grid>\r\n                <h3> Version 2 (24, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces2}\r\n                </Grid>\r\n                <h3> Version 3 (48, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces3}\r\n                </Grid>\r\n                <h3> Version 4 (72, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces4}\r\n                </Grid>\r\n\r\n                <h3> Version 5 (12, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces5}\r\n                </Grid>\r\n                <h3> Version 6 (24, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces6}\r\n                </Grid>\r\n                <h3> Version 7 (48, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces7}\r\n                </Grid>\r\n                <h3> Version 8 (72, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces8}\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../HSL/components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PictureUpload from './components/PictureUpload';\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <PictureUpload/>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport HSL from \"./pages/color-generation/HSL/HSL\";\nimport Login from './components/account/Login'\nimport firebase from 'firebase/app';\nimport {Main} from './components/Main'\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    // Initialize Firebase\n    var config = {\n      apiKey: \"AIzaSyB1JWce7ZQ-7DyJXBo5pIMnIZ-ndiki_m8\",\n      authDomain: \"awesome-cpg.firebaseapp.com\",\n      databaseURL: \"https://awesome-cpg.firebaseio.com\",\n      projectId: \"awesome-cpg\",\n      storageBucket: \"awesome-cpg.appspot.com\",\n      messagingSenderId: \"641260986127\"\n    };\n    firebase.initializeApp(config);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"/>\n        <Header />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}