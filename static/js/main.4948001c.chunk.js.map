{"version":3,"sources":["components/Header.js","utilities/ExportJSON.js","redux/FilterModeReducer.js","sections/filters/SelectMode.js","utilities/Color.js","sections/try-it/TryItGradient.js","utilities/BlindConversion.js","sections/try-it/TryWeb.js","utilities/ChangeColorsInPixelArray.js","sections/try-it/TryPixelArt.js","sections/try-it/TryMain.js","components/ExportJSONButton.js","components/ClipboardCopier.js","sections/side-bar/SelectedColorPanel.js","redux/ColorBlindnessReducer.js","sections/side-bar/SelectBlindness.js","sections/side-bar/LeftActionsBar.js","redux/SelectedColorReducer.js","utilities/HSLPaletteGenerator.js","sections/tiles/BasicTiles.js","sections/tiles/AdvancedTiles.js","sections/tiles/PictureTiles.js","redux/HSLAdvancedReducer.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","components/SelectBaseColorButton.js","sections/filters/AdvancedFilters.js","redux/HSLBasicReducer.js","sections/filters/BasicFilters.js","redux/PictureReducer.js","sections/filters/PictureFilters.js","pages/MainPage.js","App.js","serviceWorker.js","redux/HSLModeReducer.js","redux/ShowExtraToolsReducer.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","className","Component","withRouter","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","setAttribute","click","changeFilter","filterMode","type","initial_state","iconStyle","verticalAlign","marginRight","SelectMode","getTab","mode","icon","text","onClick","this","Palette_default","style","fontSize","Brush_default","Image_default","connect","FilterModeReducer","dispatch","bindActionCreators","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","TryItGradient","initialState","componentDidUpdate","componentDidMount","setHoverEffects","allTryElements","getAllTryElements","forEach","el","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","gradientColors","map","i","getElementById","addEventListener","e","elem","outline","target","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","pushCurrentStateToHistory","initialComponentsState","setNumberOfColors","oldN","numberOfColors","Array","from","pop","setColor","colorIndex","pushCurrentStateAndClearFuture","newColors","selectedColor","selected","clearFutureStack","historyStack","getCurrentComponentsStateCopy","_","futureStack","undo","addCurrentStateToFutureStack","setCurrentStateFromHistory","redo","setStateFromFuture","parse","_this2","gradientString","join","backgroundImage","gridAutoFlow","display","paddingTop","key","id","slider","width","onChange","value","backgroundColor","tooltip","placement","title","IconButton_default","size","CloudDownload_default","Autorenew_default","disabled","Undo_default","Redo_default","objectSpread","SelectedColorReducer","blindnessNames","keys","None","R","G","B","Protanopia","Protanomaly","Deuteranopia","Deuteranomaly","Tritanopia","Tritanomaly","Achromatopsia","Achromatomaly","convertToBlind","_getConvertedColor","o","m","fu","getConvertedColor","tryIds","texts","backgrounds","TryIt","setHoverEffectInPalette","hovered","components","compName","getTryButton","component","background","font","border","getBlindComponentsColors","oldComponents","newComponents","blindness","showBlindness","header","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","borderRadius","lineHeight","name","bg_color","onMouseOver","onMouseLeave","VisibilityOff_default","Visibility_default","ColorBlindnessReducer","changeColorsInPixelArray","pixelArray","oldRGBColor","newRGBColor","getRGBColor","arr","TryPixelArt","handleSubmit","img","Image","src","imagePreviewUrl","onload","canvas","height","ctx","getContext","drawImage","getImageData","data","distinguishColors","console","log","currentPixelArray","image","handleChangeColor","oldPixelArray","newPixelArray","imageData","rgbaArr","alpha","set","Uint8ClampedArray","putImageData","redrawCanvas","handleImageChange","preventDefault","reader","FileReader","file","files","onloadend","obj","result","readAsDataURL","flexDirection","alignItems","justifyContent","minHeight","maxHeight","marginBottom","maxWidth","htmlFor","cursor","originalColors","switchers","label","TryWeb","try_it_TryItGradient","try_it_TryPixelArt","TryMain","selectedTryIndex","setSelected","tryComponent","option","ExportJSONButton","FormControl_default","minWidth","InputLabel_default","Select_default","MenuItem_default","message","config","top","duration","ClipboardCopier","lib","onCopy","success","children","SelectedColorPanel","selectedColorFont","ClipboardCopier_ClipboardCopier","setBlindness","blindnessType","SelectBlindness","handleChange","React","LeftActionsBar","side_bar_SelectBlindness","ExportJSONButton_ExportJSONButton","SelectedColorPanel_SelectedColorPanel","selectColor","utilities_HSLPaletteGenerator","HSLPaletteGenerator","baseColor","hueStep","satStep","lightStep","_baseColor$hsl","_palette","apply","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","l1","l2","l3","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","BasicTiles","selectedKey","getPadding","palette","getRowHolderWidth","outer","vertical","getPalette","_this$props","hueSplit","satSplit","lightSplit","handleSelectColor","hexValue","tilePadding","numberOfFractions","flexWrap","satArr","i1","lightArr","i2","lightColor","i3","blindedColor","colorKey","isSelected","padding","BaseColorReducer","HSLBasicReducer","displayOrder","AdvancedTiles","HSLAdvancedReducer","PictureTiles","getTiles","palettePieces","palettes","margin","textAlign","PictureReducer","setAdvancedHSLInput","evt","changeBaseColor","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","scaledWidth","scaledHeight","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","borderColor","react_throttle_lib","time","handler","onMouseDown","onMouseMove","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","test","_baseColor$rgb","color_picker_ColorPickerCanvas","html","whiteSpace","SelectBaseColorButton","baseColorFont","popover","content","components_color_picker_ColorPicker","HSLFilters","handleExportJSON_ButtonClick","colorElements","getElementsByTagName","getSliderInput","float","getEvent","tooltipVisible","components_SelectBaseColorButton","setHueSplit","setSatSplit","setLightSplit","hueDivisors","lightDivisors","satDivisors","BasicFilters","handleHueSliderChange","handleSatSliderChange","handleLightSliderChange","indexOf","step","defaultValue","setPalettes","PictureFilters","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","clickedColor","generated","pushVersion1Function","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","$imagePreview","MainPage","getElementsByClassName","getDisplayOption","show","showBasic","showAdvanced","showFromImage","side_bar_LeftActionsBar","tiles_BasicTiles","tiles_AdvancedTiles","tiles_PictureTiles","filters_SelectMode","filters_BasicFilters","AdvancedFilters","filters_PictureFilters","try_it_TryMain","App","components_Header","pages_MainPage","Boolean","location","hostname","match","isAdvanced","show_extra_tools","rootReducer","combineReducers","arguments","undefined","action","HSLModeReducer","ShowExtraToolsReducer","defineProperty","store","createStore","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4948001c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <div className='header'>\r\n        <h2>PALETTE GENERATOR</h2>\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeFilter = (filterMode) => { return { type: CHANGE_MODE, filterMode } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { filterMode: 'BASIC' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const FilterModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, filterMode: action.filterMode } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeFilter } from '../../redux/FilterModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        filterMode: state.FilterModeReducer.filterMode\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeFilter:changeFilter }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    getTab = (mode, icon, text) =>  <div className={this.props.filterMode == mode ? 'selected-mode' : ''} onClick={() => this.props.changeFilter(mode)} ><div> {icon} {text} </div></div>\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                {this.getTab('BASIC', <PaletteIcon style={iconStyle} fontSize=\"small\" />, 'BASIC')}\r\n                {this.getTab('ADVANCED', <BrushIcon style={iconStyle} fontSize=\"small\" />, 'ADVANCED')}\r\n                {/*this.getRoute('/custom', <StarIcon style={iconStyle} fontSize=\"small\" />, 'CUSTOM')*/}\r\n                {this.getTab('FROM_IMAGE', <ImageIcon style={iconStyle} fontSize=\"small\" />, 'FROM IMAGE')}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport \"./TryIt.scss\"\r\nimport { Tooltip, Slider } from 'antd'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as _ from 'lodash'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nclass TryItGradient extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            ...this.initialComponentsState,\r\n            historyStack: [],\r\n            futureStack: []\r\n        };\r\n    }\r\n    get initialComponentsState() {\r\n        return {\r\n            gradientColors: ['#81042b', '#9a6a79', '#dda7b8', '#040102'],\r\n            numberOfColors: 4\r\n        }\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => this.state.gradientColors.map((color, i) => document.getElementById('gradient-' + i))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.pushCurrentStateToHistory(); this.setState(this.initialComponentsState); }\r\n\r\n    setNumberOfColors = (n) => {\r\n        let oldN = this.state.numberOfColors\r\n        let gradientColors = Array.from(this.state.gradientColors)\r\n        if (n > oldN)\r\n            for (let i = 0; i < n - oldN; i++) {\r\n                gradientColors.push('#ffffff')\r\n            }\r\n        if (n < oldN) {\r\n            for (let i = 0; i < oldN - n; i++) {\r\n                gradientColors.pop()\r\n            }\r\n        }\r\n        this.setState({ numberOfColors: n, gradientColors: gradientColors }, this.setHoverEffects)\r\n    }\r\n    setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        this.pushCurrentStateAndClearFuture()\r\n        let newColors = this.state.gradientColors\r\n        newColors[colorIndex] = this.getSelectedColor()\r\n        this.setState({ gradientColors: newColors })\r\n    }\r\n\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    // Add/Remove History\r\n\r\n    // TODO: rename it? \r\n    pushCurrentStateAndClearFuture = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.clearFutureStack()\r\n    }\r\n\r\n    pushCurrentStateToHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let gradientColors = this.getCurrentComponentsStateCopy()\r\n        if (!_.isEqual(historyStack[0], gradientColors)) {\r\n            historyStack.push(gradientColors)\r\n            this.setState({ historyStack })\r\n        }\r\n    }\r\n    clearFutureStack = () =>\r\n        this.setState({ futureStack: [] })\r\n\r\n    undo = () => {\r\n        this.addCurrentStateToFutureStack()\r\n        this.setCurrentStateFromHistory()\r\n    }\r\n    addCurrentStateToFutureStack = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        futureStack.push(this.getCurrentComponentsStateCopy())\r\n        this.setState({ futureStack })\r\n    }\r\n    setCurrentStateFromHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let gradientColors = historyStack.pop()\r\n        this.setState({ historyStack, gradientColors })\r\n    }\r\n\r\n    redo = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.setStateFromFuture()\r\n    }\r\n    setStateFromFuture = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        let gradientColors = futureStack.pop()\r\n        this.setState({ futureStack, gradientColors })\r\n    }\r\n\r\n    getCurrentComponentsStateCopy = () =>\r\n        JSON.parse(JSON.stringify(this.state.gradientColors))\r\n\r\n\r\n\r\n    render() {\r\n        let gradientColors = this.state.gradientColors\r\n\r\n        let gradientString = \"linear-gradient(to right,\" + gradientColors.join(',') + \")\"\r\n\r\n        return (\r\n            <div className='try-web'>\r\n\r\n                <div className=\"try-colors-container\" style={{ backgroundImage: gradientString, gridAutoFlow: 'column', display: 'grid' }}>\r\n                    {gradientColors.map(\r\n                        (color, i) =>\r\n                            <div style={{ paddingTop: '150px', }} key={color + i}\r\n                                onClick={(e) => this.setColor(e, i)} id={'gradient-' + i} />\r\n                    )}\r\n                </div>\r\n\r\n                <div >\r\n                    <Slider className=\"slider-input gradient-slider\" style={{ width: '100%' }} min={2} max={8} onChange={this.setNumberOfColors} value={this.state.numberOfColors} />\r\n                </div>\r\n\r\n                <div className=\"applied-colors-container\">\r\n                    {gradientColors.map((color, i) =>\r\n                        <div className=\"applied-color\" key={'applied' + color + i}\r\n                            style={{ backgroundColor: color, color: new Color(color, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}\r\n                            onClick={(e) => this.setColor(e, i)}>\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton size='small' onClick={() => exportJSON(gradientColors)} > <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton size='small' onClick={this.reset} > <AutorenewIcon /></IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton size='small' onClick={this.undo} disabled={this.state.historyStack.length == 0}>\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton size='small' onClick={this.redo} disabled={this.state.futureStack.length == 0}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryItGradient);\r\n","// http://web.archive.org/web/20081014161121/http://www.colorjack.com/labs/colormatrix/\r\n\r\nconst blinds =\r\n{\r\n    None: { R: [100, 0, 0], G: [0, 100, 0], B: [0, 100, 0] },\r\n    Protanopia: { R: [56.667, 43.333, 0], G: [55.833, 44.167, 0], B: [0, 24.167, 75.833] },\r\n    Protanomaly: { R: [81.667, 18.333, 0], G: [33.333, 66.667, 0], B: [0, 12.5, 87.5] },\r\n    Deuteranopia: { R: [62.5, 37.5, 0], G: [70, 30, 0], B: [0, 30, 70] },\r\n    Deuteranomaly: { R: [80, 20, 0], G: [25.833, 74.167, 0], B: [0, 14.167, 85.833] },\r\n    Tritanopia: { R: [95, 5, 0], G: [0, 43.333, 56.667], B: [0, 47.5, 52.5] },\r\n    Tritanomaly: { R: [96.667, 3.333, 0], G: [0, 73.333, 26.667], B: [0, 18.333, 81.667] },\r\n    Achromatopsia: { R: [29.9, 58.7, 11.4], G: [29.9, 58.7, 11.4], B: [29.9, 58.7, 11.4] },\r\n    Achromatomaly: { R: [61.8, 32, 6.2], G: [16.3, 77.5, 6.2], B: [16.3, 32.0, 51.6] }\r\n}\r\n\r\n\r\nconst Blind = function (v) { // this function just returns the Matrix\r\n\r\n    return ({\r\n        'None': [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanopia': [0.567, 0.433, 0, 0, 0, 0.558, 0.442, 0, 0, 0, 0, 0.242, 0.758, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanomaly': [0.817, 0.183, 0, 0, 0, 0.333, 0.667, 0, 0, 0, 0, 0.125, 0.875, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranopia': [0.625, 0.375, 0, 0, 0, 0.7, 0.3, 0, 0, 0, 0, 0.3, 0.7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranomaly': [0.8, 0.2, 0, 0, 0, 0.258, 0.742, 0, 0, 0, 0, 0.142, 0.858, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanopia': [0.95, 0.05, 0, 0, 0, 0, 0.433, 0.567, 0, 0, 0, 0.475, 0.525, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanomaly': [0.967, 0.033, 0, 0, 0, 0, 0.733, 0.267, 0, 0, 0, 0.183, 0.817, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatopsia': [0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatomaly': [0.618, 0.320, 0.062, 0, 0, 0.163, 0.775, 0.062, 0, 0, 0.163, 0.320, 0.516, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\r\n    }[v]);\r\n\r\n};\r\n\r\nconst getConvertedColor = (o, m) => { // takes: RGBA object, Matrix array\r\n    function fu(n) { return (n < 0 ? 0 : (n < 255 ? n : 255)); }\r\n\r\n    var r = ((o.r * m[0]) + (o.g * m[1]) + (o.b * m[2]) + (1 * m[3]) + m[4]);\r\n    var g = ((o.r * m[5]) + (o.g * m[6]) + (o.b * m[7]) + (1 * m[8]) + m[9]);\r\n    var b = ((o.r * m[10]) + (o.g * m[11]) + (o.b * m[12]) + (1 * m[13]) + m[14]);\r\n    var a = ((o.r * m[15]) + (o.g * m[16]) + (o.b * m[17]) + (1 * m[18]) + m[19]);\r\n\r\n    return ({ 'r': fu(r), 'g': fu(g), 'b': fu(b), 'a': fu(a) });\r\n\r\n};\r\n\r\nexport const blindnessNames = Object.keys(blinds)\r\n\r\n\r\nexport const convertToBlind = (color, type) => {\r\n\r\n    const { r, g, b, a } = getConvertedColor(color.rgb, Blind(type));\r\n    return 'rgba( ' + r + ', ' + g + ', ' + b + ', ' + a + ')'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport \"./TryIt.scss\"\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\n\r\nimport { Tooltip } from 'antd'\r\nimport * as _ from 'lodash'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nconst backgroundColor = '#ffffff'\r\nconst textColor = '#030202'\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            ...this.initialComponentsState,\r\n            historyStack: [],\r\n            futureStack: [],\r\n            showBlindness: true\r\n        };\r\n    }\r\n    get initialComponentsState() {\r\n        return {\r\n            components: {\r\n                background: backgroundColor,\r\n                primaryButton: backgroundColor,\r\n                secondaryButton: backgroundColor,\r\n                successButton: backgroundColor,\r\n                warningButton: backgroundColor,\r\n                dangerButton: backgroundColor,\r\n                infoButton: backgroundColor,\r\n\r\n                title: textColor,\r\n                header: textColor,\r\n                primaryButtonFont: textColor,\r\n                secondaryButtonFont: textColor,\r\n                successButtonFont: textColor,\r\n                dangerButtonFont: textColor,\r\n                warningButtonFont: textColor,\r\n                infoButtonFont: textColor,\r\n                paragraph: textColor,\r\n            },\r\n            hovered: null\r\n        }\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => {\r\n        this.setHoverEffects()\r\n        this.pushCurrentStateAndClearFuture()\r\n    }\r\n    setHoverEffectInPalette = (color) => {\r\n        this.setState({ hovered: color })\r\n    }\r\n\r\n\r\n    // Add/Remove History\r\n\r\n    // TODO: rename it? \r\n    pushCurrentStateAndClearFuture = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.clearFutureStack()\r\n    }\r\n\r\n    pushCurrentStateToHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let components = this.getCurrentComponentsStateCopy()\r\n        if (!_.isEqual(historyStack[0], components)) {\r\n            historyStack.push(components)\r\n            this.setState({ historyStack })\r\n        }\r\n    }\r\n    clearFutureStack = () =>\r\n        this.setState({ futureStack: [] })\r\n\r\n    undo = () => {\r\n        this.addCurrentStateToFutureStack()\r\n        this.setCurrentStateFromHistory()\r\n    }\r\n    addCurrentStateToFutureStack = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        futureStack.push(this.getCurrentComponentsStateCopy())\r\n        this.setState({ futureStack })\r\n    }\r\n    setCurrentStateFromHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let components = historyStack.pop()\r\n        this.setState({ historyStack, components })\r\n    }\r\n\r\n    redo = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.setStateFromFuture()\r\n    }\r\n    setStateFromFuture = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        let components = futureStack.pop()\r\n        this.setState({ futureStack, components })\r\n    }\r\n\r\n    getCurrentComponentsStateCopy = () =>\r\n        JSON.parse(JSON.stringify(this.state.components))\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.pushCurrentStateToHistory(); this.setState(this.initialComponentsState); }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        this.pushCurrentStateAndClearFuture()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) =>\r\n        <button className='try-button'\r\n            onClick={(e) => this.setColor(e, component)} id={id} style={{\r\n                backgroundColor: background, color: font, border: '1px solid ' + font + '80'\r\n            }}>\r\n            <div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div></button>\r\n\r\n    getBlindComponentsColors = () => {\r\n        let oldComponents = this.state.components\r\n        let newComponents = {}\r\n        let blindness = this.props.blindness\r\n        if (this.state.showBlindness && blindness != 'None') {\r\n            Object.keys(oldComponents).forEach(key =>\r\n                newComponents[key] = convertToBlind(new Color(oldComponents[key], 0, 0, 'Hex'), blindness)\r\n            )\r\n            return newComponents\r\n        }\r\n\r\n        return oldComponents\r\n    }\r\n\r\n    render() {\r\n        let components = this.getBlindComponentsColors()\r\n        const { title, header,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        return (\r\n            <div className='try-web'>\r\n\r\n\r\n                <div className=\"try-card-holder\">\r\n\r\n                    <div id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background, border: '1px solid #d4d4d4', borderRadius: '1%' }}> {/*  headStyle={{ backgroundColor: appBar }} > */}\r\n\r\n                        <h3 className=\"try-title-holder\" style={{ color: title }}>\r\n                            <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Apply Selected Color Here </span>\r\n                        </h3>\r\n\r\n                        <h4 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h4>\r\n                        <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, lineHeight: '2' }}>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                            {/* Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. */}\r\n                        </p>\r\n                        <br />\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                            {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                            {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                            {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                            {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n\r\n                <div className=\"applied-colors-container\">\r\n                    {backgrounds.map((name, i) => {\r\n                        let key = \"text_\" + name + \"_\" + i\r\n                        let is_hovered = this.state.hovered == key\r\n                        let bg_color = is_hovered ? selectedColor : components[name]\r\n                        return (\r\n                            <div className=\"applied-color\" key={key}\r\n                                onMouseOver={() => this.setHoverEffectInPalette(name)}\r\n                                onMouseLeave={() => this.setHoverEffectInPalette(null)}\r\n                                onClick={(e) => this.setColor(e, name)}\r\n                                style={{\r\n                                    backgroundColor: bg_color\r\n                                }} />)\r\n                    }\r\n                    )}\r\n                    {texts.map((key, i) =>\r\n                        <div className=\"applied-color\" key={\"bg_\" + key + \"_\" + i}\r\n                            onClick={(e) => this.setColor(e, key)}\r\n                            style={{\r\n                                backgroundColor: components[key]\r\n                            }}>\r\n                            {}\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton size='small' onClick={(e) => { e.stopPropagation(); exportJSON(components) }}> <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton size='small' onClick={this.reset}> <AutorenewIcon />  </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton size='small' onClick={this.undo} disabled={this.state.historyStack.length == 0}>\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton size='small' onClick={this.redo} disabled={this.state.futureStack.length == 0}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                    <Tooltip placement=\"bottom\" title={this.state.showBlindness ? \"Hide blind colors\" : \"Show blind colors\"}>\r\n                        <IconButton size='small' onClick={() => this.setState({ showBlindness: !this.state.showBlindness })}>\r\n                            {this.state.showBlindness && <VisibilityOffIcon /> || <VisibilityIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import * as _ from 'lodash'\r\nexport const changeColorsInPixelArray = (pixelArray, oldRGBColor, newRGBColor) => {\r\n\r\n        for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n            let rgb = getRGBColor(pixelArray, i)\r\n\r\n            if (_.isEqual(rgb, oldRGBColor)) {\r\n                pixelArray[i] = newRGBColor.r\r\n                pixelArray[i + 1] = newRGBColor.g\r\n                pixelArray[i + 2] = newRGBColor.b\r\n            }\r\n        }\r\n        return pixelArray\r\n}\r\n\r\nconst getRGBColor = (arr, i) => ({r: arr[i], g: arr[i+1], b: arr[i+2]})","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from '../../utilities/Color';\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { changeColorsInPixelArray } from '../../utilities/ChangeColorsInPixelArray';\r\nimport \"./TryIt.scss\"\r\nimport { Tooltip, Slider } from 'antd'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as _ from 'lodash'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nclass TryPixelArt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            ...this.initialComponentsState,\r\n            historyStack: [],\r\n            futureStack: []\r\n        };\r\n    }\r\n    get initialComponentsState() {\r\n        return {\r\n            distinguishColors: [],\r\n            originalColors: [],\r\n            currentPixelArray: [],\r\n            image: null\r\n        }\r\n    }\r\n\r\n\r\n    reset = (e) => { e.stopPropagation(); this.pushCurrentStateToHistory(); this.setState(this.initialComponentsState); }\r\n\r\n\r\n    setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        this.pushCurrentStateAndClearFuture()\r\n        let newColors = this.state.gradientColors\r\n        newColors[colorIndex] = this.getSelectedColor()\r\n        this.setState({ gradientColors: newColors })\r\n    }\r\n\r\n    // Add/Remove History\r\n\r\n    // TODO: rename it? \r\n    pushCurrentStateAndClearFuture = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.clearFutureStack()\r\n    }\r\n\r\n    pushCurrentStateToHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let gradientColors = this.getCurrentComponentsStateCopy()\r\n        if (!_.isEqual(historyStack[0], gradientColors)) {\r\n            historyStack.push(gradientColors)\r\n            this.setState({ historyStack })\r\n        }\r\n    }\r\n    clearFutureStack = () =>\r\n        this.setState({ futureStack: [] })\r\n\r\n    undo = () => {\r\n        this.addCurrentStateToFutureStack()\r\n        this.setCurrentStateFromHistory()\r\n    }\r\n    addCurrentStateToFutureStack = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        futureStack.push(this.getCurrentComponentsStateCopy())\r\n        this.setState({ futureStack })\r\n    }\r\n    setCurrentStateFromHistory = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        let gradientColors = historyStack.pop()\r\n        this.setState({ historyStack, gradientColors })\r\n    }\r\n\r\n    redo = () => {\r\n        this.pushCurrentStateToHistory()\r\n        this.setStateFromFuture()\r\n    }\r\n    setStateFromFuture = () => {\r\n        let futureStack = Array.from(this.state.futureStack)\r\n        let gradientColors = futureStack.pop()\r\n        this.setState({ futureStack, gradientColors })\r\n    }\r\n\r\n    getCurrentComponentsStateCopy = () =>\r\n        JSON.parse(JSON.stringify(this.state.gradientColors))\r\n\r\n\r\n    // IMAGE ACTIONS\r\n\r\n    handleSubmit = e => {\r\n        //e.preventDefault();\r\n        let img = new Image();\r\n        img.src = this.state.imagePreviewUrl;\r\n        img.onload = () => {\r\n            let canvas = document.getElementById(\"pixel-canvas\");\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.drawImage(img, 0, 0);\r\n            let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n            let distinguishColors = []\r\n            console.log(pixelArray)\r\n            for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n                let r = pixelArray[i];\r\n                let g = pixelArray[i + 1];\r\n                let b = pixelArray[i + 2];\r\n                let rgb = { r, g, b }\r\n                if (!_.find(distinguishColors, rgb))\r\n                    distinguishColors.push(rgb)\r\n            }\r\n\r\n            this.setState({ distinguishColors, currentPixelArray: pixelArray, image: img })\r\n\r\n        }\r\n    };\r\n\r\n    handleChangeColor = (i) => {\r\n\r\n        let distinguishColors = this.state.distinguishColors\r\n\r\n\r\n        let oldPixelArray = this.state.currentPixelArray\r\n        let oldRGBColor = distinguishColors[i]\r\n        let newRGBColor = new Color(this.props.selected, 0, 0, 'Hex').rgb\r\n\r\n        let newPixelArray = changeColorsInPixelArray(oldPixelArray, oldRGBColor, newRGBColor)\r\n        distinguishColors[i] = newRGBColor\r\n\r\n        this.setState({ currentPixelArray: newPixelArray, distinguishColors })\r\n\r\n        let img = this.state.image\r\n        let canvas = document.getElementById(\"pixel-canvas\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n        //ctx.putImageData(imageData, 0, 0);\r\n        var data = imageData.data;\r\n\r\n        let rgbaArr = []\r\n        console.log(data)\r\n        for (var i = 0; i < data.length; i += 4) {\r\n            let r = newPixelArray[i]\r\n            let g = newPixelArray[i + 1]\r\n            let b = newPixelArray[i + 2]\r\n            rgbaArr.push(r);     // red\r\n            rgbaArr.push(g) // green\r\n            rgbaArr.push(b) // blue\r\n            let alpha = r == 0 && g == 0 && b == 0 ? 0 : 255\r\n            rgbaArr.push(alpha) // alpha\r\n        }\r\n        console.log(data)\r\n        imageData.data.set(new Uint8ClampedArray(rgbaArr))\r\n        console.log(rgbaArr)\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n    }\r\n    /*\r\n        changeOldPixelArrayToNew = (oldPixelArray, oldRGBColor, newRGBColor) => {\r\n            let distinguishColors = this.state.distinguishColors\r\n    \r\n    \r\n            let oldPixelArray = this.state.currentPixelArray\r\n            let oldRGBColor = distinguishColors[i]\r\n            let newRGBColor = new Color(this.props.selected, 0, 0, 'Hex').rgb\r\n    \r\n            let newPixelArray = changeColorsInPixelArray(oldPixelArray, oldRGBColor, newRGBColor)\r\n    \r\n            distinguishColors[i] = selectedColorRGB\r\n    \r\n            this.setState({ currentPixelArray: newPixelArray, distinguishColors })\r\n        }\r\n    */\r\n    redrawCanvas = () => {\r\n\r\n    }\r\n\r\n\r\n    handleImageChange = e => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        if (file) {\r\n            reader.onloadend = (obj) => {\r\n                this.setState({ image: file, imagePreviewUrl: reader.result }, this.handleSubmit);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let distinguishColors = this.state.distinguishColors\r\n\r\n        return (\r\n            <div className='try-web'>\r\n\r\n                <div style={{ height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }}>\r\n                    <canvas id=\"pixel-canvas\" style={{ minHeight: '200px', maxHeight: '250px', marginBottom: '16px', maxWidth: '100%' }} />\r\n                    <div>\r\n                        <label htmlFor=\"upload-pixel-art\" style={{ cursor: 'pointer' }} className=\"upload-photo-label\">\r\n                            Upload image...\r\n                            </label>\r\n                        <input type=\"file\" name=\"pixel-art\" id=\"upload-pixel-art\"\r\n                            className='upload-image-input'\r\n                            onChange={this.handleImageChange}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"applied-colors-container\">\r\n                    {distinguishColors.map((rgb, i) =>\r\n                        <div className=\"applied-color\" key={'pixel-picture-color-' + i}\r\n                            style={{ backgroundColor: \"rgb(\" + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')' }}\r\n                            onClick={(e) => this.handleChangeColor(i)}>\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton size='small' onClick={() => exportJSON(distinguishColors)} > <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton size='small' onClick={this.reset} > <AutorenewIcon /></IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton size='small' onClick={this.undo} disabled={this.state.historyStack.length == 0}>\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton size='small' onClick={this.redo} disabled={this.state.futureStack.length == 0}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryPixelArt);","import React, { Component } from \"react\";\r\nimport TryItGradient from \"./TryItGradient\";\r\nimport TryWeb from \"./TryWeb\";\r\nimport { connect } from \"react-redux\";\r\nimport TryPixelArt from \"./TryPixelArt\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected\r\n    }\r\n}\r\n\r\nconst switchers = [\r\n    {\r\n        label: 'WEB', component: () => <TryWeb />\r\n    },\r\n    {\r\n        label: 'GRADIENT', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'PIXEL ART', component: () => <TryPixelArt />\r\n    }\r\n    /*,\r\n    {\r\n        label: 'IMAGE', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'PIXEL ART', component: () => <TryPixelArt />\r\n    },\r\n    {\r\n        label: 'SHADER', component: () => <TryItGradient />\r\n    }*/]\r\n\r\nclass TryMain extends Component {\r\n    state = {\r\n        selectedTryIndex: 0\r\n    }\r\n\r\n    setSelected = (i) => this.setState({ selectedTryIndex: i })\r\n\r\n    render() {\r\n        const selectedTryIndex = this.state.selectedTryIndex\r\n\r\n        const label = switchers[selectedTryIndex].label\r\n        const tryComponent = switchers[selectedTryIndex].component()\r\n\r\n        return (\r\n            <div className='try-holder'>\r\n                <div className=\"select-mode-table\">\r\n                    {switchers.map(\r\n                        (option, i) => <div key={\"switcher\" + i} onClick={() => this.setSelected(i)} className={i == selectedTryIndex ? 'selected-mode' : ''}><div> {option.label}</div> </div>)}\r\n                </div>\r\n                {tryComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TryMain);\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport const ExportJSONButton = (props) => (\r\n    <FormControl style={{ minWidth: 150 }}>\r\n        <InputLabel>Export Palette</InputLabel>\r\n        <Select\r\n            onChange={props.onClick}\r\n        >\r\n            <MenuItem value={'JSON'}>JSON</MenuItem>)}\r\n                </Select>\r\n    </FormControl>\r\n)\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { message, } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n    <span style={{ cursor: 'pointer' }}>\r\n      {props.children}\r\n    </span>\r\n  </CopyToClipboard>\r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from '../../components/ClipboardCopier'\r\nimport Color from \"../../utilities/Color\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    //<Icon icon=\"duplicate\" style={{ verticalAlign: 'bottom', fontSize: '0.8em' }} />\r\n    let selectedColor = props.selectedColor\r\nlet selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n\r\n    return (\r\n        <ClipboardCopier value={selectedColor} >\r\n            <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont}}>\r\n                <label>{selectedColor}   </label>\r\n            </div>\r\n        </ClipboardCopier >\r\n    )\r\n}\r\n\r\n\r\n","\r\nconst SET_BLINDNESS = 'SET_BLINDNESS'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setBlindness = (blindnessType) => { return { type: SET_BLINDNESS, blindnessType } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { blindness: 'None' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const ColorBlindnessReducer = (state = initial_state, action) =>  action.type == SET_BLINDNESS ? { ...state, blindness: action.blindnessType, } : state\r\n\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBlindness } from '../../redux/ColorBlindnessReducer'\r\nimport { blindnessNames } from \"../../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setBlindness: setBlindness }, dispatch) }\r\n\r\n\r\nclass SelectBlindness extends React.Component {\r\n\r\n    handleChange = event =>\r\n        this.props.setBlindness(event.target.value)\r\n\r\n    render() {\r\n\r\n        return (\r\n            <FormControl style={{ minWidth: 150 }}>\r\n                <InputLabel htmlFor=\"age-simple\">Color Blindness</InputLabel>\r\n                <Select\r\n                    value={this.props.blindness}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {blindnessNames.map(name => <MenuItem value={name} key={name}>{name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectBlindness);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ExportJSONButton } from '../../components/ExportJSONButton'\r\nimport { SelectedColorPanel } from \"./SelectedColorPanel\";\r\nimport SelectBlindness from \"./SelectBlindness\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected\r\n    }\r\n}\r\nclass LeftActionsBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\" tiles-actions-bar \" >\r\n                <div>\r\n                    <SelectBlindness />\r\n                </div>\r\n                <div>\r\n                    <ExportJSONButton onClick={this.props.exportJSON} />\r\n                </div>\r\n                {/*\r\n                        <div>\r\n                            <DisplayOrderButtons />\r\n                        </div>\r\n                        */}\r\n                <div>\r\n                    <SelectedColorPanel selectedColor={this.props.selected} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftActionsBar);\r\n\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#81042b', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL')\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../redux/SelectedColorReducer'\r\nimport { getAdvancedPalette } from \"../../utilities/HSLPaletteGenerator\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit,\r\n        displayOrder: state.HSLBasicReducer.displayOrder,\r\n        l1: state.HSLBasicReducer.l1,\r\n        l2: state.HSLBasicReducer.l2,\r\n        l3: state.HSLBasicReducer.l3,\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\n\r\nclass BasicTiles extends Component {\r\n    state = { selectedKey: '' }\r\n\r\n    getPadding = (palette) => {\r\n        let horizontal = palette[0][0].length\r\n        let padding = 100 / (horizontal * 2) // * by 2 because padding takes left and right parts\r\n        return padding //- 0.1\r\n    }\r\n    getRowHolderWidth = (palette) => {\r\n        let outer = palette.length\r\n        let width = palette[0][0].length\r\n        let vertical = palette[0].length\r\n\r\n        // 1\r\n        if (width == 1) {\r\n            if (vertical == 1)\r\n                return 6\r\n            if (vertical == 10)\r\n                return 12\r\n            if (vertical == 5 & outer > 6)\r\n                return 12\r\n            if (vertical > 1)\r\n                return 8\r\n        }\r\n\r\n        // 2\r\n        if (width == 2) {\r\n            if (vertical == 5 && outer == 1)\r\n                return 3\r\n            if (vertical == 5 && outer > 4 && outer < 9)\r\n                return 5\r\n            if (vertical == 5 && outer == 15)\r\n                return 8\r\n            if (vertical < 10 && outer < 9)\r\n                return 4\r\n            if (vertical < 10 && outer > 8 && outer < 12)\r\n                return 5\r\n            if (vertical < 10 && outer >= 12)\r\n                return 6\r\n            if (vertical >= 10 && outer >= 6)\r\n                return 10\r\n            if (vertical >= 10 && outer < 6)\r\n                return 5\r\n        }\r\n\r\n        // 4\r\n        if (width == 4) {\r\n            if (vertical == 1 && outer > 1)\r\n                return 2\r\n            if (vertical == 4 && outer > 9)\r\n                return 4\r\n            if (vertical > 4 && outer == 4)\r\n                return 4\r\n\r\n            if (vertical == 5 && outer == 1)\r\n                return 2\r\n            if (vertical == 5 && outer > 7)\r\n                return 4\r\n            if (vertical == 5 && outer == 15)\r\n                return 5\r\n\r\n            if (vertical >= 10 && outer < 3)\r\n                return 3\r\n            if (vertical >= 10 && outer == 5)\r\n                return 5\r\n            if (vertical >= 10 && outer == 6)\r\n                return 6\r\n            if (vertical >= 10 && outer > 7)\r\n                return 7\r\n\r\n        }\r\n        // 5\r\n        if (width == 5) {\r\n            if (vertical == 1 && outer < 7)\r\n                return 1\r\n            if (vertical == 1 && outer > 6)\r\n                return 2\r\n            if (vertical == 2 && outer > 9)\r\n                return 3\r\n            if (vertical == 2 && outer < 9)\r\n                return 2\r\n            if (vertical == 4 && outer <= 2)\r\n                return 2\r\n            if (vertical == 4 && outer == 4)\r\n                return 2\r\n            if (vertical == 5 && outer <= 2)\r\n                return 2\r\n            if (vertical >= 10 && outer > 7)\r\n                return 6\r\n            if (outer > 9)\r\n                return 4\r\n        }\r\n\r\n        // 4 5\r\n        if (width > 3 && width < 6) {\r\n            if (vertical > 3 && outer == 3)\r\n                return 3\r\n            if (vertical == 2 && outer > 4)\r\n                return 3\r\n            if (vertical > 2 && vertical < 6 && outer > 4)// && outer < 10)\r\n                return 3\r\n            if (vertical >= 10 && outer == 1)\r\n                return 2\r\n        }\r\n\r\n        // 10 12 15\r\n        if (width >= 10 && width < 20) {\r\n            if (vertical == 1)\r\n                return 1\r\n            if (vertical == 2 && outer < 6)\r\n                return 1\r\n            if (outer == 1)\r\n                return 1\r\n            if (outer >= 2)\r\n                return 2\r\n        }\r\n        // 20\r\n        if (width == 20)\r\n            return 1\r\n\r\n        return 2\r\n    }\r\n    getPalette = () => {\r\n        let { baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3 } = this.props\r\n        let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3, 0, 0)\r\n        return palette\r\n    }\r\n\r\n    // TILES PART\r\n    handleSelectColor = (hexValue, selectedKey) => {\r\n        this.setState({ selectedKey })\r\n        this.props.selectColor(hexValue)\r\n    }\r\n\r\n\r\n    render() {\r\n        let palette = this.getPalette()\r\n        let tilePadding = this.getPadding(palette)\r\n        let numberOfFractions = this.getRowHolderWidth(palette)\r\n        let wrapperStyle = {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center'\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'table', alignItems: 'center', height: '100%' }} className='tiles-section'>\r\n                <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n\r\n                    <div style={wrapperStyle}>\r\n                        {palette.map((satArr, i1) =>\r\n                            <div key={i1 + \"l1\"} style={{ border: 'solid 4px white', width: (100 / numberOfFractions) - 1 + '%' }}>\r\n\r\n                                {satArr.map((lightArr, i2) =>\r\n                                    <div key={i1 + \"-\" + i2 + \"l2\"} style={{ lineHeight: 0 }}>\r\n                                        {lightArr.map((lightColor, i3) => {\r\n                                            let color = lightColor.HEXString\r\n                                            let blindedColor = convertToBlind(lightColor, this.props.blindness)\r\n                                            let colorKey = i1 + '' + i2 + '' + i3 + color\r\n                                            let isSelected = this.state.selectedKey == colorKey\r\n                                            return <div key={colorKey} id={color}\r\n                                                className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                                style={{\r\n                                                    background: blindedColor, padding: tilePadding + '%', width: tilePadding * 2 + '%', height: tilePadding * 2 + '%',\r\n                                                    border: 'none'\r\n                                                }}\r\n                                                onClick={() => this.handleSelectColor(color, colorKey)} />\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div >)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicTiles);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport HSLPaletteGenerator from \"../../utilities/HSLPaletteGenerator\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\nimport { selectColor } from '../../redux/SelectedColorReducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n\r\n        hueChange: state.HSLAdvancedReducer.hueChange,\r\n        satChange: state.HSLAdvancedReducer.satChange,\r\n        lightChange: state.HSLAdvancedReducer.lightChange,\r\n        hueStep: state.HSLAdvancedReducer.hueStep,\r\n        satStep: state.HSLAdvancedReducer.satStep,\r\n        lightStep: state.HSLAdvancedReducer.lightStep,\r\n        numberOfColors: state.HSLAdvancedReducer.numberOfColors,\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass AdvancedTiles extends Component {\r\n    state = {\r\n        selectedKey: ''\r\n    };\r\n    \r\n    handleSelectColor = (hexValue, selectedKey) => {\r\n        this.setState({ selectedKey })\r\n        this.props.selectColor(hexValue)\r\n    }\r\n\r\n    render() {\r\n        const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.props\r\n        let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n\r\n        return (\r\n            <div style={{ display: 'table', alignItems: 'center', height: '100%', width: '100%' }} className='tiles-section'>\r\n                <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}} >\r\n\r\n                        {palette.map((color, index) => {\r\n                            let hex = color.HEXString\r\n                            let blindedColor = convertToBlind(color, this.props.blindness)\r\n                            let colorKey = index + hex\r\n                            let isSelected = this.state.selectedKey == colorKey\r\n                            return <div key={colorKey} id={hex}\r\n                                className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                style={{\r\n                                    background: blindedColor, padding: '5%', width: '10%', height: '10%',\r\n                                    border: 'none'\r\n                                }}\r\n                                onClick={() => this.handleSelectColor(hex, colorKey)} />\r\n                        }\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdvancedTiles);\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from \"../../redux/SelectedColorReducer\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    palettes: state.PictureReducer.palettes,\r\n    blindness: state.ColorBlindnessReducer.blindness\r\n  };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor }, dispatch);\r\n};\r\n\r\nclass PictureTiles extends Component {\r\n  state = {\r\n    selectedKey: ''\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) {\r\n      palettePieces = palette.map(\r\n        (color, index) => {\r\n          let hex = color.HEXString\r\n          if (hex != '#NaNNaNNaN') {\r\n            let blindedColor = convertToBlind(color, this.props.blindness)\r\n            let colorKey = index + hex\r\n            let isSelected = this.state.selectedKey == colorKey\r\n            return <div key={colorKey} id={hex}\r\n              className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n              style={{\r\n                background: blindedColor, padding: '4.15%', width: '8.3%', height: '8.3%',\r\n                border: 'none'\r\n              }}\r\n              onClick={() => this.handleSelectColor(hex, colorKey)} />\r\n          }\r\n          else {\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    return palettePieces;\r\n  };\r\n\r\n\r\n  handleSelectColor = (hexValue, selectedKey) => {\r\n    this.setState({ selectedKey })\r\n    this.props.selectColor(hexValue)\r\n  }\r\n\r\n  render() {\r\n    const palettes = this.props.palettes\r\n    return (\r\n      <div className=\"tiles-section\">\r\n        {palettes.length != 0 && (\r\n          <div style={{ width: '100%', margin: 'auto' }}>\r\n            <h1 style={{ textAlign: 'center' }}> By Hue </h1>\r\n            <h2> Version 1 </h2> <div> {this.getTiles(palettes[0])} </div><br />\r\n            <h2> Version 2 </h2> <div> {this.getTiles(palettes[1])} </div><br />\r\n            <h2> Version 3 </h2> <div> {this.getTiles(palettes[2])} </div><br />\r\n            <h2> Version 4 </h2> <div> {this.getTiles(palettes[3])} </div><br />\r\n            <h1 style={{ textAlign: 'center' }}> By Hue and Light </h1>\r\n            <h2> Version 1 </h2> <div> {this.getTiles(palettes[4])} </div><br />\r\n            <h2> Version 2 </h2> <div> {this.getTiles(palettes[5])} </div><br />\r\n            <h2> Version 3 </h2> <div> {this.getTiles(palettes[6])} </div><br />\r\n            <h2> Version 4 </h2> <div> {this.getTiles(palettes[7])} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureTiles);\r\n","\r\nconst SET_HUE_CHANGE = 'SET_HUE_CHANGE'\r\nconst SET_SAT_CHANGE = 'SET_SAT_CHANGE'\r\nconst SET_LIGHT_CHANGE = 'SET_LIGHT_CHANGE'\r\nconst SET_HUE_STEP = 'SET_HUE_STEP'\r\nconst SET_SAT_STEP = 'SET_SAT_STEP'\r\nconst SET_LIGHT_STEP = 'SET_LIGHT_STEP'\r\nconst SET_NUMBER_OF_COLORS = 'SET_NUMBER_OF_COLORS'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n\r\nconst SET_ADVANCED_HSL_INPUT = 'SET_ADVANCED_HSL_INPUT'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueChange = (hueChange) => { return { type: SET_HUE_CHANGE, hueChange } }\r\nexport let setSatChange = (satChange) => { return { type: SET_SAT_CHANGE, satChange } }\r\nexport let setLightChange = (lightChange) => { return { type: SET_LIGHT_CHANGE, lightChange } }\r\n\r\nexport let setHueStep = (hueStep) => { return { type: SET_HUE_STEP, hueStep } }\r\nexport let setSatStep = (satStep) => { return { type: SET_SAT_STEP, satStep } }\r\nexport let setLightStep = (lightStep) => { return { type: SET_LIGHT_STEP, lightStep } }\r\n\r\nexport let setNumberOfColors = (numberOfColors) => { return { type: SET_NUMBER_OF_COLORS, numberOfColors } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\nexport let setAdvancedHSLInput = (evt) => { return { type: SET_ADVANCED_HSL_INPUT, evt } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n};\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLAdvancedReducer = (state = initial_state, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_ADVANCED_HSL_INPUT: {\r\n            const target = action.evt.target;\r\n            const value = target.value;\r\n            const name = target.name;\r\n            return { ...state, [name]: value }\r\n        }\r\n        case SET_HUE_CHANGE: return { ...state, hueChange: action.hueChange }\r\n        case SET_SAT_CHANGE: return { ...state, satChange: action.satChange }\r\n        case SET_LIGHT_CHANGE: return { ...state, lightChange: action.lightChange }\r\n        case SET_HUE_STEP: return { ...state, hueStep: action.hueStep }\r\n        case SET_SAT_STEP: return { ...state, satStep: action.satStep }\r\n        case SET_LIGHT_STEP: return { ...state, lightStep: action.lightStep }\r\n        case SET_NUMBER_OF_COLORS: return { ...state, numberOfColors: action.numberOfColors }\r\n        default: return { ...state }\r\n    }\r\n\r\n\r\n}\r\n\r\n","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#81042b', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", this.drawHueCanvas);\r\n        window.removeEventListener(\"mouseup\", this.setMouseDownToFalse);\r\n        window.removeEventListener(\"mouseup\", this.setSatMouseDownToFalse);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    // Main Canvas events\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n\r\n    // Saturation Canvas events\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div id=\"color-picker\">\r\n        <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n        <div id=\"color-inputs-container\">\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n            <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n            <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n          </div>\r\n\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n            <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n            <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n            <div className=\"input-boxes\" >\r\n              <div>\r\n                <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                <input id='hex-intput-txt-box' className=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ColorPicker from \"./color-picker/ColorPicker\";\r\nimport { Popover } from 'antd';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass SelectBaseColorButton extends Component {\r\n\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'white'\r\n        return (\r\n            <div style={{display:'grid'}}> \r\n            <Popover content={<ColorPicker />} placement=\"bottom\">\r\n                <div className='base-color-select-container' style={{ background: this.props.baseColor.HEXString }} >\r\n                    <h3 className='select-color-btn' style={{ color: baseColorFont }} >BASE COLOR</h3>\r\n                </div>\r\n            </Popover>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectBaseColorButton);\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../redux/SelectedColorReducer'\r\nimport { setAdvancedHSLInput } from '../../redux/HSLAdvancedReducer'\r\nimport { exportJSON } from '../../utilities/ExportJSON'\r\nimport { Slider } from 'antd';\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport SelectBaseColorButton from \"../../components/SelectBaseColorButton\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    hueChange: state.HSLAdvancedReducer.hueChange,\r\n    satChange: state.HSLAdvancedReducer.satChange,\r\n    lightChange: state.HSLAdvancedReducer.lightChange,\r\n    hueStep: state.HSLAdvancedReducer.hueStep,\r\n    satStep: state.HSLAdvancedReducer.satStep,\r\n    lightStep: state.HSLAdvancedReducer.lightStep,\r\n    numberOfColors: state.HSLAdvancedReducer.numberOfColors\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor, setAdvancedHSLInput }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  getSliderInput = (value, min, max, label, name) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\">{label} <span style={{ float: 'right' }}>{value}</span></Label>\r\n      <Slider className=\"slider-input\" min={min} max={max}\r\n        onChange={(val) => this.props.setAdvancedHSLInput(this.getEvent(name, val))} value={value} tooltipVisible={false} />\r\n    </div>\r\n\r\n  getEvent = (name, value) => ({ target: { value, name } })\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.props\r\n    return (\r\n      <div  style={{ height: '100%' }}>\r\n        <div className=' filters'>\r\n          {/* HSL FILTERS */}\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', alignItems: 'center' }}>\r\n            {/* Changes */}\r\n            <div className='advanced-hsl-filters-group'>\r\n              {this.getSliderInput(hueChange, 0, 120, 'Hue Change', 'hueChange')}\r\n              {this.getSliderInput(satChange, 0, 100, 'Saturation Change', 'satChange')}\r\n              {this.getSliderInput(lightChange, 0, 100, 'Light Change', 'lightChange')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div className='advanced-hsl-filters-group'>\r\n              {this.getSliderInput(hueStep, 1, 30, 'Hue Step', 'hueStep')}\r\n              {this.getSliderInput(satStep, 1, 30, 'Saturation Step', 'satStep')}\r\n              {this.getSliderInput(lightStep, 1, 30, 'Light Step', 'lightStep')}\r\n            </div>\r\n            {/* Number Of Colors */}\r\n            <div className='advanced-hsl-filters-group'>\r\n              {this.getSliderInput(numberOfColors, 6, 181, 'Number of Colors', 'numberOfColors')}\r\n            </div>\r\n            <div className='advanced-hsl-filters-group'>\r\n              <SelectBaseColorButton />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 1, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action.hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Slider } from 'antd';\r\nimport './Filters.css'\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport { setHueSplit, setSatSplit, setLightSplit } from '../../redux/HSLBasicReducer'\r\nimport SelectBaseColorButton from \"../../components/SelectBaseColorButton\";\r\n\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setHueSplit: setHueSplit, setSatSplit: setSatSplit, setLightSplit: setLightSplit }, dispatch) }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit\r\n    }\r\n}\r\n\r\nconst hueDivisors = [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15]\r\nconst lightDivisors = [1, 2, 4, 5, 10, 20]\r\nconst satDivisors = [1, 2, 4, 5, 10]\r\n\r\n\r\nclass BasicFilters extends Component {\r\n    handleHueSliderChange = (index) => this.props.setHueSplit(hueDivisors[index])\r\n    handleSatSliderChange = (index) => this.props.setSatSplit(satDivisors[index])\r\n    handleLightSliderChange = (index) => this.props.setLightSplit(lightDivisors[index])\r\n\r\n    render() {\r\n        const { hueSplit, satSplit, lightSplit } = this.props\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <div className='filters' >\r\n\r\n                    <div>\r\n                        <Label className=\"slider-label\">Hues <span style={{ float: 'right' }}>{hueSplit}</span></Label>\r\n                        <Slider\r\n                            value={hueDivisors.indexOf(hueSplit)}\r\n                            min={0}\r\n                            max={hueDivisors.length - 1}\r\n                            step={1}\r\n                            onChange={this.handleHueSliderChange}\r\n                            tooltipVisible={false}\r\n                        />\r\n                    </div>\r\n                    {/* Saturation */}\r\n                    <div>\r\n                        <Label className=\"slider-label\" >Saturations <span style={{ float: 'right' }}>{satSplit}</span></Label>\r\n                        <Slider\r\n                            value={satDivisors.indexOf(satSplit)}\r\n                            min={0}\r\n                            max={satDivisors.length - 1}\r\n                            step={1}\r\n                            onChange={this.handleSatSliderChange}\r\n                            tooltipVisible={false}\r\n                        />\r\n                    </div>\r\n                    {/* Light */}\r\n                    <div>\r\n                        <Label className=\"slider-label\">Lights <span style={{ float: 'right' }}>{lightSplit}</span></Label>\r\n                        <Slider\r\n                            value={lightDivisors.indexOf(lightSplit)}\r\n                            defaultValue={lightDivisors.indexOf(lightSplit)}\r\n                            min={0}\r\n                            max={lightDivisors.length - 1}\r\n                            step={1}\r\n                            onChange={this.handleLightSliderChange}\r\n                            tooltipVisible={false}\r\n                        />\r\n                    </div>\r\n                    <SelectBaseColorButton />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicFilters);\r\n\r\n","const SET_PALETTES = 'SET_PALETTES'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setPalettes = (palettes) => { return { type: SET_PALETTES, palettes } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { palettes: [] };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const PictureReducer = (state = initial_state, action) =>  action.type == SET_PALETTES ? { ...state, palettes: action.palettes, } : state\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../utilities/Color\";\r\nimport { setPalettes } from \"../../redux/PictureReducer\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ setPalettes }, dispatch);\r\n};\r\n\r\nclass PictureFilters extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    //e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    img.onload = () => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      let ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(img, 0, 0);\r\n      let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n      // By Hue Version\r\n      let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n      let arr12Colors = [];\r\n      let arr24Colors1 = [];\r\n      let arr48Colors1 = [];\r\n      let arr72Colors1 = [];\r\n      pushVersion1Function(arr12Colors, 12);\r\n      pushVersion1Function(arr24Colors1, 24);\r\n      pushVersion1Function(arr48Colors1, 48);\r\n      pushVersion1Function(arr72Colors1, 72);\r\n      let version1Function = (hsl, arr, divider) => {\r\n        let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n        arr[bucketNumber].totalHue += hsl.hue;\r\n        arr[bucketNumber].totalSat += hsl.sat;\r\n        arr[bucketNumber].totalLight += hsl.light;\r\n        arr[bucketNumber].number += 1;\r\n      };\r\n\r\n      // By Hue and Light Version\r\n      let pushVersion2Function = (arr, n) => {\r\n        for (var i = 0; i < n; i++) {\r\n          arr.push({\r\n            light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n            dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n          });\r\n        }\r\n      };\r\n      let arr12Colors2 = [];\r\n      let arr24Colors2 = [];\r\n      let arr48Colors2 = [];\r\n      let arr72Colors2 = [];\r\n      pushVersion2Function(arr12Colors2, 12);\r\n      pushVersion2Function(arr24Colors2, 24);\r\n      pushVersion2Function(arr48Colors2, 48);\r\n      pushVersion2Function(arr72Colors2, 72);\r\n      let version2Function = (hsl, arr, divider) => {\r\n        let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n        let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n        bucket.totalHue += hsl.hue;\r\n        bucket.totalSat += hsl.sat;\r\n        bucket.totalLight += hsl.light;\r\n        bucket.number += 1;\r\n      };\r\n\r\n      for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n        let r = pixelArray[i];\r\n        let g = pixelArray[i + 1];\r\n        let b = pixelArray[i + 2];\r\n        let hsl = RGBtoHSL(r, g, b);\r\n        // By Hue Version\r\n        version1Function(hsl, arr12Colors, 30);\r\n        version1Function(hsl, arr24Colors1, 15);\r\n        version1Function(hsl, arr48Colors1, 7.5);\r\n        version1Function(hsl, arr72Colors1, 5);\r\n\r\n        // By Hue and Light Version\r\n        version2Function(hsl, arr12Colors2, 30);\r\n        version2Function(hsl, arr24Colors2, 15);\r\n        version2Function(hsl, arr48Colors2, 7.5);\r\n        version2Function(hsl, arr72Colors2, 5);\r\n      }\r\n\r\n      // By Hue Version\r\n      let extractColorsFunction = obj => new Color(obj.totalHue / obj.number, obj.totalSat / obj.number, obj.totalLight / obj.number, 'HSL')\r\n      let palette1 = arr12Colors.map(extractColorsFunction);\r\n      let palette2 = arr24Colors1.map(extractColorsFunction);\r\n      let palette3 = arr48Colors1.map(extractColorsFunction);\r\n      let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n      // By Hue and Light Version\r\n      let extractColorsFunction2 = arr => {\r\n        //looks better when dark goes first\r\n        let darkLightArr = arr.map(obj => {\r\n          let light = obj.light;\r\n          let lightStr = new Color(light.totalHue / light.number, light.totalSat / light.number, light.totalLight / light.number, 'HSL')\r\n          let dark = obj.dark;\r\n          let darkStr = new Color(dark.totalHue / dark.number, dark.totalSat / dark.number, dark.totalLight / dark.number, 'HSL')\r\n          return { dark: darkStr, light: lightStr };\r\n        });\r\n        let darks = darkLightArr.map(obj => obj.dark);\r\n        let lights = darkLightArr.map(obj => obj.light);\r\n        let palette = [];\r\n        palette = palette.concat(darks);\r\n        palette = palette.concat(lights);\r\n        return palette;\r\n      };\r\n      let palette5 = extractColorsFunction2(arr12Colors2);\r\n      let palette6 = extractColorsFunction2(arr24Colors2);\r\n      let palette7 = extractColorsFunction2(arr48Colors2);\r\n      let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n      this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n\r\n      let palettes = [palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8]\r\n      this.props.setPalettes(palettes)\r\n    }\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = (obj) => {\r\n      this.setState({ image: file, imagePreviewUrl: reader.result }, this.handleSubmit);\r\n    }\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  render() {\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n      $imagePreview = (\r\n        <img id=\"uploaded-image\" src={imagePreviewUrl} style={{ maxHeight: '145pt' }} />);\r\n    }\r\n\r\n    return (\r\n      <div style={{ height: '100%' }}>\r\n        <div style={{ height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }}>\r\n          {$imagePreview}\r\n          <div>\r\n            <label htmlFor=\"upload-photo\" style={{ cursor: 'pointer' }} className=\"upload-photo-label\">\r\n              Upload image...\r\n            </label>\r\n            <input type=\"file\" name=\"photo\" id=\"upload-photo\"\r\n              className='upload-image-input'\r\n              onChange={this.handleImageChange}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureFilters);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\nimport SelectMode from \"../sections/filters/SelectMode\"\r\nimport TryMain from \"../sections/try-it/TryMain\";\r\nimport LeftActionsBar from \"../sections/side-bar/LeftActionsBar\";\r\nimport BasicTiles from \"../sections/tiles/BasicTiles\";\r\nimport AdvancedTiles from \"../sections/tiles/AdvancedTiles\";\r\nimport PictureTiles from \"../sections/tiles/PictureTiles\";\r\nimport AdvancedFilters from \"../sections/filters/AdvancedFilters\";\r\nimport BasicFilters from \"../sections/filters/BasicFilters\";\r\nimport PictureFilters from \"../sections/filters/PictureFilters\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        filterMode: state.FilterModeReducer.filterMode\r\n    }\r\n}\r\n\r\nclass MainPage extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    getDisplayOption = (show) => ({ display: show ? 'block' : 'none', width: '100%' })\r\n    render() {\r\n        let filterMode = this.props.filterMode\r\n        // by hiding components instead of unmounting we will keep thes states saved\r\n        let showBasic = filterMode == 'BASIC'\r\n        let showAdvanced = filterMode == 'ADVANCED'\r\n        let showFromImage = filterMode == 'FROM_IMAGE'\r\n\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n\r\n                <div id='palette-container' >\r\n                    <LeftActionsBar exportJSON={this.handleExportJSON_ButtonClick} />\r\n                    <div>\r\n                        <div style={this.getDisplayOption(showBasic)} > <BasicTiles /></div>\r\n                        <div style={this.getDisplayOption(showAdvanced)} > <AdvancedTiles /></div>\r\n                        <div style={{ ...this.getDisplayOption(showFromImage), margin: 'auto' }} > <PictureTiles /></div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode history={this.props.history} />\r\n                        <div style={this.getDisplayOption(showBasic)} > <BasicFilters /></div>\r\n                        <div style={this.getDisplayOption(showAdvanced)} > <AdvancedFilters /></div>\r\n                        <div style={this.getDisplayOption(showFromImage)} > <PictureFilters /></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport MainPage from \"./pages/MainPage\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <MainPage />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","const SHOW_EXTRA_TOOLS = 'SHOW_EXTRA_TOOLS'\r\nconst HIDE_EXTRA_TOOLS = 'HIDE_EXTRA_TOOLS'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let showExtraTools = () => { return { type: SHOW_EXTRA_TOOLS, show_extra_tools: true } }\r\nexport let hideExtraTools = () => { return { type: HIDE_EXTRA_TOOLS, show_extra_tools: false } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { show_extra_tools: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const ShowExtraToolsReducer = (state = initial_state, action) =>\r\n    action.type == SHOW_EXTRA_TOOLS ? { show_extra_tools: true } :\r\n        action.type == HIDE_EXTRA_TOOLS ? { show_extra_tools: false } :\r\n            state\r\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nimport { ColorBlindnessReducer } from \"./ColorBlindnessReducer\";\r\nimport { ShowExtraToolsReducer } from \"./ShowExtraToolsReducer\";\r\nimport { HSLAdvancedReducer } from \"./HSLAdvancedReducer\";\r\nimport { PictureReducer } from \"./PictureReducer\";\r\nimport { FilterModeReducer } from \"./FilterModeReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer,\r\n  ColorBlindnessReducer,\r\n  ShowExtraToolsReducer,\r\n  HSLAdvancedReducer,\r\n  PictureReducer,\r\n  FilterModeReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}