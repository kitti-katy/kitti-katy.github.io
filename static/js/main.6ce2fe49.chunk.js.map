{"version":3,"sources":["help-files/layouts.js","help-files/help-functions.js","help-files/hotkey-panel-handler.js","Store.js","components/Header.js","sections/SelectMode.js","components/LessonTile.js","components/StyleSelect.js","sections/SelectLessonType.js","sections/Lessons.js","components/GuestUserBlock.js","sections/Race.js","components/GoalSlider.js","components/TypingResult.js","components/TypingComplete.js","components/TypingPanel.js","components/ChallengeComplete.js","components/ChallengePanel.js","components/ChallengeTile.js","sections/Practice.js","sections/Register.js","sections/Login.js","components/UserSettings.js","components/UserStatistics.js","sections/UserLoggedIn.js","sections/RightPanel.js","components/Cursor.js","components/Marker.js","components/GoalSliderHotkey.js","components/HotkeyResult.js","components/HotkeyComplete.js","components/HotkeyPanel.js","components/UserProgressBar.js","components/RaceStarter.js","components/RacePanel.js","pages/MainPage.js","serviceWorker.js","index.js","App.js"],"names":["layouts","qwerty","shortcuts","modules","_10","_20","_30","_40","_50","_60","_70","_80","practice_datasets","practice_words","race_text","hotkeyText","testUsers","name","color","speedSeed","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","permutate","str","letters","split","results","shift","currLetter","tmpResults","forEach","result","rIdx","tmp","splice","push","map","letterArray","join","filter","el","idx","self","indexOf","sort","get_lengthed_string","letter_1","letter_2","n","repeat","CTRL","getChunks","text","i","j","temparray","t","newArr","chunk","slice","getChunkedText","paragraphIndex","shotrcutDict","description","requiredKeys","function","paragraph_index","line_index","word_index","line_size","chunked","last_line_index","last_paragraph_index","after_last_word_index","isPossible","lineIndex","wordIndex","undefined","getConsequence","handleKeyPress","keys","state","lesson_type","correct","allKeys","shortcutSequence","requiredShortcut","isCorrect","completed","consequence","marker_paragraph","marker_line","markerPosition","newCursorPosition","newCursorParagraph","newCursorLine","console","log","cursorPosition","cursor_paragraph","cursor_line","StoreContext","createContext","initialState","userLoggedIn","userName","loggedInUserName","prefferedLayout","email","registerPassword","showUserSettings","pw","pw_confirmed","email_register","user_name_register","show_pw_error","show_fill_blank_error","email_login","pw_login","show_login_error","words_typed","mode","uncompleted_text","completed_text","current_word","current_input","timer_started","seconds","start","wpm","accuracy","handle_lesson_change","current_layout","new_uncompleted_text","permutations","concat","get_permutated_letters_arr","charAt","new_current_word","handle_hotkey_change","newSequenceState","shortcutN","sequence","sequenceMaxSize","generateShortcutSequence","hotkey_timer_started","hotkeys_completed","hotkey_start","ppm","reducer","action","reset_typing_panel","current_lesson","reset_hotkey_panel","reset_practice_panel","Array","from","handle_practice_change","current_challenge","reset_race","clearTimeout","timer_2","timer","timer_3","testSessionStarted","testSpeed","testRaceProgress","testUserProgress","count_down","handle_reset_race","set_race_words","value","Error","Store","children","useReducer","dispatch","Provider","Header","props","AppBar","position","className","Toolbar","Typography","variant","style","iconStyle","verticalAlign","marginRight","SelectMode","useContext","getTab","mode_","icon","func","onClick","fontSize","LessonTile","StyleSelect","FormControl","Select","labelId","id","onChange","handleChange","items","item","MenuItem","SelectLessonType","generateNewShortcutSequence","Lessons","layout_options","current_module","unlocked_typing_lessons","unlocked_typing_modules","unlocked_shortcut_lessons","lessons_loaded","unlocked_shortcut_modules","current_shortcut_lesson","set","unlocked_module","useEffect","setWords","display","flexDirection","justifyContent","txt","Object","key","height","GuestUserBlock","Avatar","backgroundColor","width","margin","paddingTop","paddingLeft","lineHeight","HotkeyPanel","setTimeout","startRaceSession","oldTestUserProgress","newTestSpeed","obj","round","newTestUserProgress","progress","startCountDown","count","GoalSlider","goal","marks","label","Slider","step","max","classes","makeStyles","root","cursor","track","borderRadius","rail","mark","markLabel","marginTop","marked","marginBottom","TypingResult","TypingComplete","current_goal","reset_panel","Button","background","TypingPanel","show_completed_typing","setUnlockedModules","word","TextField","event","start_new","Date","now","start_word_count","target","new_completed_text","new_word","words_typed_new","new_wpm","set_result","last_unlocked","current_lesson_old","unlock_next_module","InputProps","endAdornment","InputAdornment","IconButton","aria-label","ChallengeComplete","uncompleted","padding","ChallengePanel","show_completed_challenge","starsUnlocked","unlockStars","stars","newStarsUnlocked","ChallengeTile","solved","unsolved","Practice","setChallenge","getStar","Register","registerOpen","handleClick","Dialog","open","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","autoFocus","evt","type","DialogActions","Login","loginOpen","UserSettings","ExpansionPanel","border","boxShadow","ExpansionPanelSummary","expandIcon","aria-controls","align","fontWeight","ExpansionPanelDetails","defaultValue","size","startIcon","Link","UserStatistics","UserLoggedIn","textAlign","href","RightPanel","Breadcrumbs","Cursor","cursorVisible","Marker","GoalSliderHotkey","HotkeyResult","HotkeyComplete","show_completed_hotkey","getHintButton","inside","transform","float","Chip","k","splitted","words","isCursorPosition","isMarkerPosition","isBeforeMarkerPosition","markerAtEnd","toLowerCase","includes","markerAtBeginning","markerLast","cursorLast","alignItems","marginLeft","UserProgressBar","transitionTimingFunction","transition","LinearProgress","colorPrimary","barColorPrimary","bar","RaceStarter","RacePanel","MainPage","windowLoaded","currentKeysDown","getDisplayOption","show","getDisplayOption2","setInterval","document","getElementsByClassName","setAttribute","showLessons","showChallenge","showTypeRacing","onKeyDown","newState","start_press_count","new_hotkeys_completed","new_ppm","set_presses_per_minute","onKeyUp","tabIndex","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ce2fe49.chunk.js","sourcesContent":["export const layouts = {qwerty:['f j', 'd k', 's l', 'a ;', 'g h', 'r u', 'e i', 'w o', 'q p', 't y', 'v n', 'c m', 'x ,', 'z .', 'b \\'', '/ ]']} \r\n\r\nexport const shortcuts = [ 'Navigation', 'Selection', \"Editing\", 'Formatting']\r\nexport const modules = {_10: '10', _20: '20', _30:'30', _40: '40', _50:'50', _60:'60', _70:'70', _80:'80'}\r\n\r\nexport const practice_datasets = [\r\n    'Common', 'Positive', 'Social Network', \r\n    'Programming', 'Science', 'Philosophy', \r\n    'Rare English', 'Neuroscience', 'Quantum Physics']\r\n\r\nexport const practice_words = [\r\n    ['he', 'and', 'she', 'its', 'and', 'would', 'make', 'by', 'into', 'up', 'we', 'like', 'to', 'his', 'when', 'did', 'I', 'what', 'about', \r\n    'way', 'my', 'number', 'look', 'see', 'been', 'two', 'come', 'more', 'call', 'no', 'her', 'write', 'been', 'for', 'come', 'had', 'of', 'other'], \r\n\r\n['beaming', 'happy', 'accomplishment', 'lucky', 'excellent', 'accomplish', 'beautiful', 'lovely', \r\n'thrilling', 'moving', 'able', 'pleasure', 'beneficial', 'joy', 'fast', 'clean', 'favorable', 'wonderful', 'fantastic', 'up', 'choice'],\r\n\r\n[\"emoji\", \"chat\", \"tweet\", \"like\", \"post\", \"friend\", \"messenger\", \"account\", \"timeline\", \r\n\"nickname\", \"history\", \"conversation\", \"group\", \"page\", \"follower\", \"facebook\", \"youtube\", \"network\", \"connection\"],\r\n\r\n['variable', 'lisp', 'hardware', 'function', 'debugging', 'software', 'class', 'java', \r\n'interpreter', 'developer', 'constant', 'static', 'private', 'protected', 'div', 'console', 'new', 'export', 'thread', 'import'],\r\n\r\n['lepidoptery', 'cell', 'physical-science', 'volumetric ', 'Bunsen', 'microbiologist', 'petri-dish',\r\n 'science', 'herpetology', 'fossil', 'element', 'measure', 'genetics', 'scientist', 'virologist', 'radiology', 'organism', 'test ', 'ornithology'],\r\n\r\n ['babylonia', 'taught', 'sanskrit', 'reason', 'buddhism', 'hobby', 'lyrics', 'homogeneous', \r\n 'perspective', 'theoretical', 'seinfeld', 'greeks', 'maxim', 'ism', 'deconversion', 'pseudoreligion', 'phd', 'nativism', 'gnosticism', \"ash'ari\"],\r\n\r\n[\"serendipity\", \"gobbledygook\", \"scrumptious\", \"agastopia\", \"halfpace\", \"impignorate\", \"jentacular\", \"nudiustertian\", \"quire\", \r\n\"yarborough\", \"tittynope\", \"winklepicker\", \"ulotrichous\", \"kakorrhaphiophobia\", \"xertz\"],\r\n\r\n[ 'phytochemistry', 'environmental', 'psychoneuroimmunology', 'neurologic', 'biomedicine', 'thermochemistry', \r\n 'macrochemistry', 'radiochemistry',  'psychopharmacology', 'multiscience', 'brain', 'imaging'],\r\n\r\n[\"quantum\", \"mechanics\", \"eigenstate\", \"ket\", \"spin\", \"state\", \"wave\", \"degeneracy\", \"hamiltonian\", \r\n\"spectrum\", \"bosons\", \"fermions\", \"entanglement\", \"uncertainty\", \"angular\", \"momentum\", \"condensation\", \"square-integrable\"]\r\n]\r\n\r\n/*{copy: 'CTRL + C', selectAll: 'CTRL + A', paste: 'CTRL + V', cut: 'CTRL + X',\r\nredo: 'CTRL + Y', undo: 'CTRL + Z', toBeginningNextWord: 'CTRL + RIGHT ARROW', toBeginningPreviousWord: 'CTRL + LEFT ARROW',\r\ntoNextParagraphBeginning: 'CTRL + DOWN ARROW', toPreviousParagraphBeginning: 'CTRL + UP ARROW', selectTextBlock: 'CTRL + SHIFT + ARROW'\r\n}\r\n*/\r\n//https://www.howtogeek.com/115664/42-text-editing-keyboard-shortcuts-that-work-almost-everywhere/\r\n\r\n\r\nexport const race_text = [\"one\", \"two\", \"three\", 'he', 'and', 'she', 'function', 'spin', 'software', 'lucky',\r\n'way', 'my', 'number', 'look', 'see', 'been', 'two', 'come', 'more', 'call', \"chat\", \"tweet\", \r\n'console', 'hobby', 'lyrics']\r\n\r\nexport const hotkeyText = [\r\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \",\r\n\"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n\"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n]\r\n\r\nexport const testUsers =[\r\n    {name: 'Ad_95', color: '#ad4141', speedSeed: 1.5},\r\n    {name: 'Zipper', color: '#adad41', speedSeed: 2.5},\r\n    {name: 'Tor_67', color: '#41ad41', speedSeed: 3},\r\n    {name: 'DigWeed', color: '#41adad', speedSeed: 2},\r\n]","export const shuffle = (array) => {\r\n    // https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    \r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  }\r\n  \r\n  \r\n  export const permutate = str => {\r\n    //https://medium.com/@lindagmorales94/how-to-solve-a-string-permutation-problem-using-javascript-95ad5c388219\r\n\r\n      let letters = str.split('')\r\n        , results = [[letters.shift()]] \r\n      while (letters.length) {\r\n          const currLetter = letters.shift()\r\n          let tmpResults = []\r\n          results.forEach(result => {\r\n              let rIdx = 0\r\n              while (rIdx <= result.length) {\r\n                  const tmp = [...result]\r\n                  tmp.splice(rIdx, 0, currLetter)\r\n                  tmpResults.push(tmp)\r\n                  rIdx++\r\n              }\r\n          })\r\n          results = tmpResults\r\n      }\r\n      return results\r\n        .map(letterArray => letterArray.join(''))\r\n        .filter((el, idx, self) => (self.indexOf(el) === idx))\r\n        .sort()\r\n  }\r\n  \r\n  const get_lengthed_string = (letter_1, letter_2, n) => letter_1.repeat(n) + letter_2.repeat(n)\r\n\r\n  export const get_permutated_letters_arr = (letter_1, letter_2) => {\r\n    let array = []\r\n    for (let i = 1; i<=3;i++)\r\n    {\r\n      let str = get_lengthed_string(letter_1, letter_2, i)\r\n      let permutations = permutate(str)\r\n      array = array.concat(permutations)\r\n    }\r\n    return array\r\n\r\n  }","\r\nimport {  hotkeyText } from \"./layouts\";\r\n\r\nconst CTRL = 'Control', UP = 'ArrowUp', DOWN = 'ArrowDown', LEFT = \"ArrowLeft\", RIGHT = \"ArrowRight\", HOME = \"Home\", END = \"End\"\r\n\r\nexport const getChunks = (text, n) =>{\r\n    let array = text.split(' ').filter(t => t!=\"\")\r\n    let newArr = []\r\n    var i,j,temparray,chunk = n;\r\n    for (i=0,j=array.length; i<j; i+=chunk) {\r\n        temparray = array.slice(i,i+chunk);\r\n        newArr.push(temparray)\r\n        // do whatever\r\n    }\r\n    return newArr\r\n  }\r\n\r\n  const getChunkedText = (paragraphIndex) => {\r\n    return getChunks(hotkeyText[paragraphIndex] , 9)\r\n}\r\n  const getToBeginningOfWord = (paragraph_index, line_index, word_index) => {\r\n    if (word_index == 0)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    return {paragraph_index, line_index, word_index:word_index - 1}\r\n}\r\nconst getToEndOfWord = (paragraph_index, line_index, word_index) => {\r\n    return  {paragraph_index, line_index, word_index:word_index + 1}\r\n}\r\n\r\nconst getBeginningOfParagraph = (paragraph_index, line_index, word_index) => {\r\n    if (line_index == 0)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    return {paragraph_index, line_index: 0, word_index:0}\r\n}\r\nconst getEndOfParagraph = (paragraph_index, line_index, word_index) => {\r\n    let chunked = getChunkedText(paragraph_index)\r\n    let line_size = chunked[line_index].length\r\n    let last_line_index = chunked.length-1\r\n    if (word_index > line_size-3 || line_index == last_line_index)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    let after_last_word_index = chunked[last_line_index].length\r\n    return {paragraph_index, line_index:last_line_index, word_index: after_last_word_index }\r\n}\r\nconst getBeginningOfCurrentLine = (paragraph_index, line_index, word_index) => {\r\n    if (word_index < 4)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    return {paragraph_index, line_index, word_index:0}\r\n}\r\nconst getEndOfCurrentLine = (paragraph_index, line_index, word_index) => {\r\n    let line_size = getChunkedText(paragraph_index)[line_index].length\r\n    if (word_index > line_size-4)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    return {paragraph_index, line_index, word_index: line_size }\r\n}\r\nconst getTopStart = (paragraph_index, line_index, word_index) => {\r\n    if (word_index == 0 || (paragraph_index==0 && line_index ==0))\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n    return {paragraph_index:0, line_index: 0, word_index:0}\r\n}\r\nconst getBottomEnd = (paragraph_index, line_index, word_index) => {\r\n    if (paragraph_index == hotkeyText.length-1)\r\n        return {paragraph_index:0, line_index: 0, word_index:999}\r\n\r\n    let last_paragraph_index = hotkeyText.length-1\r\n    let chunked = getChunkedText(last_paragraph_index)\r\n    let last_line_index = chunked.length-1\r\n    let after_last_word_index = chunked[last_line_index].length\r\n    \r\n\r\n    return  {paragraph_index: hotkeyText.length-1, line_index: last_line_index, word_index: after_last_word_index}\r\n}\r\n\r\n\r\nexport const shotrcutDict = [\r\n        {description: \"Beginning of word\", text: [\"Ctrl\", \"Left Arrow\"], requiredKeys: [CTRL, LEFT], color: \"#157edf\", function: getToBeginningOfWord}, \r\n        {description: \"End of word\", text: [\"Ctrl\", \"Right Arrow\"], requiredKeys: [CTRL, RIGHT], color: \"#157edf\", function: getToEndOfWord}, \r\n        {description: \"Beginning of line\", text: [\"Home\"], requiredKeys: [HOME], color: \"#9f15df\", function: getBeginningOfCurrentLine}, \r\n        {description: \"End of line\", text: [\"End\"], requiredKeys: [END], color: \"#9f15df\", function: getEndOfCurrentLine}, \r\n        {description: \"Beginning of paragraph\", text: [\"Ctrl\",\"Up Arrow\"], requiredKeys: [CTRL, UP], color: \"#0c7c2a\", function: getBeginningOfParagraph}, \r\n        {description: \"End of paragraph\", text: [\"Ctrl\",\"Down Arrow\"], requiredKeys: [CTRL, DOWN], color: \"#0c7c2a\", function: getEndOfParagraph}, \r\n        {description: \"Top-start\", text: [\"Ctrl\",\"Home\"], requiredKeys: [CTRL, HOME], color: \"#df152d\", function: getTopStart}, \r\n        {description: \"Bottom-end\", text: [\"Ctrl\", \"End\"], requiredKeys: [CTRL, END], color: \"#df152d\", function: getBottomEnd}, \r\n    ]\r\n    \r\n\r\nconst isCorrect = (allKeys, state) => {\r\n\r\n    let requiredKeys = shotrcutDict[state.shortcutSequence[state.requiredShortcut]].requiredKeys\r\n    requiredKeys.sort()\r\n    allKeys.sort()\r\n\r\n    if (requiredKeys.length != allKeys.length)\r\n        return false\r\n    for (let i = 0; i< requiredKeys.length; i++) \r\n        if ( requiredKeys[i] != allKeys[i])\r\n                return false\r\n    return true\r\n}\r\n\r\nconst isPossible = (paragraphIndex, lineIndex, wordIndex) => {\r\n    \r\n    if (hotkeyText[paragraphIndex] == undefined)\r\n        return false\r\n\r\n    let chunked = getChunks(hotkeyText[paragraphIndex] , 9)\r\n\r\n    if (chunked[lineIndex] == undefined)\r\n        return false\r\n\r\n if (chunked[lineIndex][wordIndex] == undefined && chunked[lineIndex].length !=  [wordIndex])\r\n        return false\r\n    return true\r\n}\r\nconst getConsequence = (i, paragraph_index, line_index, word_index) => {\r\n    return shotrcutDict[i].function(paragraph_index, line_index, word_index)\r\n}\r\n\r\nexport const generateShortcutSequence = () => {\r\n    let shortcutN = shotrcutDict.length \r\n    let sequence = []\r\n    let sequenceMaxSize = shortcutN * 6\r\n\r\n\r\n    let word_index = 0\r\n    let paragraph_index = 0\r\n    let line_index = 0\r\n\r\n    let markerPosition = 0\r\n    let marker_paragraph =  1\r\n    let marker_line = 1\r\n    let j = 0\r\n\r\n    while (j < sequenceMaxSize) {\r\n        let i = Math.floor(Math.random() * shortcutN);\r\n        \r\n        let consequence = getConsequence(i, paragraph_index, line_index, word_index) \r\n            \r\n        if (isPossible(consequence.paragraph_index, consequence.line_index, consequence.word_index))\r\n                {\r\n                    word_index = consequence.word_index\r\n                    paragraph_index = consequence.paragraph_index\r\n                    line_index = consequence.line_index\r\n                    if (sequence.length == 0)\r\n                    {  \r\n                        markerPosition = word_index\r\n                        marker_paragraph = paragraph_index\r\n                        marker_line = line_index\r\n                    }\r\n                    sequence.push(i)\r\n\r\n                    j += 1\r\n                }\r\n    }\r\n    \r\n    return { markerPosition, marker_paragraph, marker_line, shortcutSequence: sequence}\r\n}\r\n\r\nexport const handleKeyPress = (keys, state) => {\r\n\r\n    if (state.lesson_type != 'KEYBOARD SHORTCUTS')\r\n        return false\r\n\r\n        let correct = isCorrect(keys, state)\r\n    if (correct && state.shortcutSequence[state.requiredShortcut+1] == undefined)\r\n        return {completed: true}\r\n    if (correct){\r\n        let consequence = getConsequence(state.shortcutSequence[state.requiredShortcut+1], state.marker_paragraph, state.marker_line, state.markerPosition) \r\n        let markerPosition = consequence.word_index\r\n        let marker_paragraph = consequence.paragraph_index\r\n        let marker_line = consequence.line_index\r\n        let newCursorPosition = state.markerPosition\r\n        let newCursorParagraph = state.marker_paragraph\r\n        let newCursorLine = state.marker_line\r\n        console.log(state.requiredShortcut+1)\r\n        return {\r\n            requiredShortcut: state.requiredShortcut+1, \r\n            cursorPosition:newCursorPosition, cursor_paragraph: newCursorParagraph, cursor_line: newCursorLine,  \r\n            markerPosition, marker_paragraph, marker_line }\r\n        }\r\n    return false\r\n}\r\n\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { layouts, shortcuts,modules, race_text } from \"./help-files/layouts\";\r\nimport { get_permutated_letters_arr,shuffle } from \"./help-files/help-functions\";\r\nimport { practice_words } from \"./help-files/layouts\";\r\nimport {generateShortcutSequence} from './help-files/hotkey-panel-handler'\r\n\r\n\r\nexport const StoreContext = createContext({})\r\n\r\nconst initialState = {\r\n\r\n    // User\r\n    userLoggedIn: false,\r\n    userName: \"Guest\",\r\n    loggedInUserName: null,\r\n    prefferedLayout: 'QWERTY',\r\n    email: \"any@anymail.com\",\r\n    registerPassword: null,\r\n    showUserSettings: false,\r\n\r\n    // register panel\r\n    pw:\"\",\r\n    pw_confirmed:\"\",\r\n    email_register: \"\",\r\n    user_name_register: \"\",\r\n    show_pw_error: false,\r\n    show_fill_blank_error: false,\r\n\r\n    // login panel\r\n    email_login: '',\r\n    pw_login: '',\r\n    show_login_error: false,\r\n\r\n    \r\n    // Typing Lessons\r\n    words_typed:0,\r\n    mode: 'LEARN',\r\n    uncompleted_text: [\"a\", \"b\", \"c\", \"d\"],\r\n    completed_text: [],\r\n    current_word: \"Lorem\",\r\n    current_input: \"\",\r\n    timer_started: false,\r\n    seconds: 0,\r\n    start: null,\r\n    wpm: 0,\r\n    accuracy: 100,\r\n    words_typed: 0,\r\n    current_lesson: 3,\r\n    current_shortcut_lesson: 0,\r\n    show_completed_typing: false,\r\n\r\n\r\n    current_module: 2,\r\n    current_goal: 10,\r\n    unlocked_typing_lessons: 3,\r\n    unlocked_shortcut_lessons: 2,\r\n    unlocked_typing_modules: [4,4,4,3,0,0,0,0,0,0,0,0,0,0],\r\n    unlocked_shortcut_modules: [3, 3, 3, 0],\r\n    \r\n    registerOpen: false,\r\n    loginOpen: false,\r\n    lessons_loaded: false,\r\n    lesson_type: 'TYPING',\r\n\r\n    // hotkey states\r\n    markerPosition: 0,\r\n    marker_paragraph: 1,\r\n    marker_line: 1,\r\n    cursorPosition: 1,\r\n    cursor_paragraph: 2,\r\n    cursor_line: 1,\r\n    requiredShortcut: 0,\r\n    currentKeysDown: [],\r\n    shortcutSequence: [0],\r\n    hotkey_timer_started: false,\r\n    hotkeys_completed: 0,\r\n    hotkey_start: null,\r\n    ppm: 0,\r\n    show_completed_hotkey: false,\r\n\r\n    //challenge\r\n    starsUnlocked: [0,2,2,1,1,0,0,0,0],\r\n    current_challenge: 0,\r\n    show_completed_challenge: false,\r\n    \r\n\r\n\r\n    // race\r\n    testSessionStarted: false,\r\n    testSpeed: [0,0,0,0],\r\n    testRaceProgress: 0,\r\n    testUserProgress: [0,0,0,0],\r\n    timer: null,\r\n    timer_2: null,\r\n    timer_3: null,\r\n    count_down: 3\r\n\r\n};\r\n\r\n\r\n\r\n\r\nfunction handle_lesson_change(state, current_layout) {\r\n        let letters = layouts.qwerty[current_layout]\r\n        let letter_1 = letters.charAt(0)\r\n        let letter_2 = letters.charAt(2)\r\n        let new_uncompleted_text = get_permutated_letters_arr(letter_1, letter_2)\r\n        let new_current_word = new_uncompleted_text[0]\r\n        new_uncompleted_text.shift()\r\n        return {...state, uncompleted_text: new_uncompleted_text, current_word: new_current_word, completed_text: [], \r\n            current_input: \"\", words_typed: 0, timer_started: false, seconds: 0, wpm: 0, accuracy: 100, words_typed:0, start: null}\r\n}\r\n\r\nfunction handle_hotkey_change(state){\r\n    let newSequenceState = generateShortcutSequence()\r\n    return {...state, markerPosition:newSequenceState.markerPosition, marker_paragraph: newSequenceState.marker_paragraph, marker_line:newSequenceState.marker_line,\r\n        shortcutSequence: newSequenceState.shortcutSequence, cursorPosition: 0, cursor_paragraph: 0, cursor_line:0 , hotkey_timer_started: false,\r\n        hotkeys_completed: 0, hotkey_start: null, ppm: 0 }\r\n}\r\n\r\n\r\n\r\n\r\nfunction handle_practice_change(state, current_layout){\r\n  let new_uncompleted_text = Array.from(practice_words[current_layout])\r\n  new_uncompleted_text = shuffle(new_uncompleted_text)\r\n  let new_current_word = new_uncompleted_text[0]\r\n  new_uncompleted_text.shift()\r\n  return {...state, uncompleted_text: new_uncompleted_text, current_word: new_current_word, completed_text: [], \r\n    current_input: \"\", words_typed: 0, timer_started: false, seconds: 0, wpm: 0, accuracy: 100, words_typed:0, start: null, testSessionStarted: false}\r\n}\r\nfunction set_race_words(state){\r\n    let new_uncompleted_text = Array.from(race_text)\r\n    new_uncompleted_text = shuffle(new_uncompleted_text)\r\n    let new_current_word = new_uncompleted_text[0]\r\n    new_uncompleted_text.shift()\r\n    return {...state, uncompleted_text: new_uncompleted_text, current_word: new_current_word, completed_text: [], \r\n        current_input: \"\", words_typed: 0, timer_started: false, seconds: 0, wpm: 0, accuracy: 100, words_typed:0, start: null }\r\n}\r\nfunction handle_reset_race(state){\r\n    clearTimeout(state.timer_2)\r\n    clearTimeout(state.timer)\r\n    clearTimeout(state.timer_3)\r\n    return {...state, testSessionStarted: false, testSpeed: 0, testRaceProgress: 0,testUserProgress: [0,0,0,0], timer: null, timer_2: null, timer_3:null, count_down: 3}\r\n}\r\n\r\nfunction reducer(state, action) {\r\n\r\n    if (action.reset_typing_panel)\r\n    {\r\n        return handle_lesson_change(state, state.current_lesson)\r\n    }\r\n    if (action.reset_hotkey_panel)\r\n    {\r\n        return handle_hotkey_change(state)\r\n    }\r\n    if (action.reset_practice_panel)\r\n    {   \r\n        \r\n        return handle_practice_change(state, state.current_challenge)\r\n    }\r\n    if (action.reset_race)\r\n    {\r\n        return handle_reset_race(state)\r\n    }\r\n    if (action.set_race_words)\r\n    {\r\n        return set_race_words(state)\r\n    }\r\n    if (action.name)\r\n        return { ...state, [action.name]: action.value }\r\n    throw new Error('State name must be defined')\r\n}\r\n\r\nconst Store = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    return (\r\n        <StoreContext.Provider value={[state, dispatch]}>{children}</StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Store;","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Header =(props) =>  \r\n      <AppBar position=\"static\" className=\"header\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" style={{ color: 'white' }}>\r\n            Typing Tutor\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../Store';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nexport default function SelectMode() {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { mode, current_lesson, testSessionStarted } = state\r\n\r\n    const set = (name, value) => dispatch({ name, value });\r\n\r\n    const reset_race = () =>{\r\n        if (testSessionStarted)\r\n            dispatch({reset_race: true})            \r\n    }\r\n\r\n    const setRaceWords = () =>{\r\n        if (!testSessionStarted)\r\n            {\r\n                dispatch({set_race_words:true})\r\n            }\r\n    }\r\n\r\n    const setTypingWords = () => { \r\n        dispatch({reset_typing_panel: true})\r\n        reset_race()      \r\n  };\r\n    const setPracticeWords = () => {\r\n        dispatch({reset_practice_panel: true})\r\n        reset_race() \r\n    }\r\n    const getTab = (mode_, icon, text, func) =>\r\n        <div className={mode == mode_ ? 'selected-mode' : ''} onClick={() => {dispatch({ name: 'mode', value: mode_ }); func()}} ><div> {icon} {text} </div></div>\r\n\r\n    return (\r\n        <div className=\"select-mode-table\">\r\n            {getTab('LEARN', <CategoryIcon style={iconStyle} fontSize=\"small\" />, 'LEARN', setTypingWords)}\r\n            {getTab('PRACTICE', <FitnessCenterIcon style={iconStyle} fontSize=\"small\" />, 'PRACTICE', setPracticeWords)}\r\n            {getTab('TYPE_RACING', <MotorcycleIcon style={iconStyle} fontSize=\"small\" />, 'RACE', setRaceWords)}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const LessonTile = props => (\r\n  <div className={props.className} onClick = {props.onClick}>\r\n      {props.text}\r\n  </div>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nexport default function StyleSelect(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <div className=\"lessons-style-select\">\r\n      <FormControl variant=\"outlined\">\r\n\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={props.value}\r\n          onChange={props.handleChange}\r\n        >\r\n          {props.items.map(item => <MenuItem value={item}>{item}</MenuItem>)}\r\n        </Select>\r\n      </FormControl>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../Store';\r\nimport {generateShortcutSequence} from '../help-files/hotkey-panel-handler'\r\n\r\n\r\nexport default function SelectLessonType() {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { lesson_type,\r\n        markerPosition, marker_paragraph, marker_line, shortcutSequence\r\n     } = state\r\n     const set = (name, value) => dispatch({ name, value });\r\n    const getTab = (mode_, text) =>\r\n        <div className={lesson_type == mode_ ? 'selected-lesson-type' : ''} \r\n        onClick={() => {\r\n            if (mode_ == 'KEYBOARD SHORTCUTS' && mode_ != lesson_type)\r\n            {generateNewShortcutSequence()} \r\n            dispatch({ name: 'lesson_type', value: mode_ })\r\n        }\r\n        } ><div> {text} </div></div>\r\n    \r\n    const generateNewShortcutSequence = () => {\r\n        dispatch({reset_hotkey_panel: true})\r\n          }\r\n    return (\r\n        <div className=\"select-lesson-type\">\r\n            {getTab('TYPING', 'Touch Typing')}\r\n            {getTab('KEYBOARD SHORTCUTS', 'Hotkeys')}\r\n        </div>\r\n    );\r\n}","import React, { useContext, useEffect  } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { LessonTile } from \"../components/LessonTile\";\r\nimport { layouts, shortcuts,modules } from \"../help-files/layouts\";\r\nimport StyleSelect from \"../components/StyleSelect\";\r\nimport SelectLessonType from './SelectLessonType';\r\n\r\n\r\nexport default function Lessons(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const handleChange = () => {};\r\n\r\n  const layout_options = [\"QWERTY\", \"Dvorak\", \"Colemak\"]\r\n  const shortcut_options = [\"Text Editor\"]\r\n  const {\r\n    current_module,\r\n    current_lesson,\r\n    unlocked_typing_lessons,\r\n    unlocked_shortcut_lessons,\r\n    unlocked_typing_modules,\r\n    unlocked_shortcut_modules,\r\n    lessons_loaded,\r\n    lesson_type,\r\n    current_shortcut_lesson\r\n    \r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => dispatch({reset_typing_panel: true})\r\n  const setModule = (value) => {set('current_module', value)}\r\n  const setLesson = (value) => {set('current_lesson', value); set('current_module', unlocked_typing_modules[value]); setWords(value)}\r\n  const setShortcutLesson = (value) => {set('current_shortcut_lesson', value); }\r\n  const unlocked_module = unlocked_typing_modules[current_lesson]\r\n\r\n\r\n  useEffect(() => {if (!lessons_loaded){\r\n    setWords(current_lesson); set(\"lessons_loaded\", true)}});\r\n\r\n  const setWords= value => { \r\n    set('current_lesson', value);\r\n    reset_panel()\r\n};\r\n\r\n  return (\r\n      <div className=\"lessons-mode\">\r\n\r\n      <div className=\"lessons-block\">\r\n        <div className=\"lessons-select-header\">\r\n          <h2> Select Layout </h2>\r\n        </div>\r\n        <div className=\"lessons-container\">\r\n          <StyleSelect\r\n            value={layout_options[0]}\r\n            items={layout_options}\r\n            handleChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"lessons-block\">\r\n        <div className=\"\">\r\n        <SelectLessonType/>\r\n        </div>\r\n      </div>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column', justifyContent: 'space-evenly'}}>\r\n      \r\n    {lesson_type == 'TYPING' && \r\n      <div className=\"lessons-block\">\r\n        <div className=\"lessons-select-header\">\r\n          <h2> Select Lesson </h2>\r\n        </div>\r\n        <div className=\"lessons-container\">\r\n          <div className=\"lessons-select\">\r\n            {layouts.qwerty.map((txt,i) => (\r\n              <LessonTile text={txt} className={ i == current_lesson? 'current-lesson': i <= unlocked_typing_lessons ? 'unlocked-lesson' : \"\"}\r\n              onClick ={() => {if (i <= unlocked_typing_lessons) setLesson(i)} }/>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n\r\n{lesson_type == 'TYPING' && \r\n      <div className=\"lessons-block\">\r\n        <div className=\"lessons-select-header\">\r\n          <h2> Select Module: {layouts.qwerty[current_lesson]} </h2>\r\n        </div>\r\n        <div className=\"lessons-container\">\r\n          <div className=\"lessons-select module-select\">\r\n            {Object.keys(modules).map((key, i) => (\r\n              <LessonTile text={modules[key]} className={ i == current_module? 'current-module': i<= unlocked_module? 'unlocked-module': ''}\r\n              onClick ={() => {if (i<= unlocked_module) setModule(i)}}  />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n}\r\n\r\n{lesson_type == 'KEYBOARD SHORTCUTS' && \r\n      <div className=\"lessons-block\" style={{height:'100%'}}>\r\n        <div className=\"lessons-select-header\">\r\n          <h2> Select Lesson </h2>\r\n        </div>\r\n        <div className=\"lessons-container\">\r\n          <div className=\"lessons-select lessons-select-keyboard\">\r\n            {shortcuts.map((key,i) => (\r\n              <LessonTile className={i == current_shortcut_lesson? \"current-shortcut-lesson-tile\":\"shortcut-lesson-tile\"} text={key} onClick ={() => setShortcutLesson(i)} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n            }\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport React from \"react\";\r\nexport default function GuestUserBlock(props) {\r\n  return (\r\n    <div className=\"guest-user-block\">\r\n      <Avatar\r\n        style={{ backgroundColor: props.color, height: \"3em\", width: \"3em\", margin:'auto' }}\r\n      >\r\n        {props.name.charAt(0)}\r\n      </Avatar>\r\n      <div style={{ width: \"100%\", paddingTop: \"8px\" , paddingLeft:'4px', lineHeight: 2, }}>\r\n        <div> \r\n            <b style={{fontSize:'18px'}}>{props.name} </b> <br/>\r\n            Layout: <i><u>Colemak</u> </i> <br/>\r\n            Average Speed: <i><u>30 wpm</u></i> <br/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { testUsers } from \"../help-files/layouts\";\r\nimport GuestUserBlock from \"../components/GuestUserBlock\";\r\n\r\nexport default function HotkeyPanel() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const { testSessionStarted, count_down, testUserProgress, userName, mode, userLoggedIn, loggedInUserName } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n  const startRaceSession = oldTestUserProgress => {\r\n    let timer = setTimeout(function() {\r\n      let newTestSpeed = testUsers.map(obj =>\r\n        Math.round(obj.speedSeed * (Math.floor(Math.random() * 10) + 15))\r\n      );\r\n      set(\"testSpeed\", newTestSpeed);\r\n      let newTestUserProgress = Array.from(oldTestUserProgress);\r\n      newTestUserProgress = newTestUserProgress.map((progress, i) => {\r\n        if (progress >= 100) return 100;\r\n        else return progress + (100 * (newTestSpeed[i] / 350)) / 25;\r\n      });\r\n      set(\"testUserProgress\", newTestUserProgress);\r\n      startRaceSession(newTestUserProgress);\r\n    }, 200);\r\n\r\n    set(\"timer\", timer);\r\n  };\r\n\r\n  const startCountDown = (count) => {\r\n    if (count != 0){\r\n    let timer_3 = setTimeout(function() {\r\n      set(\"count_down\", count-1)\r\n      startCountDown(count-1)\r\n    }, 1000);\r\n\r\n    set(\"timer_3\", timer_3);\r\n  }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!testSessionStarted && mode ==\"TYPE_RACING\") {\r\n      let timer_2 = setTimeout(function() {\r\n        startRaceSession(testUserProgress);\r\n        }, 4000)\r\n        set(\"testSessionStarted\", true);\r\n        set(\"timer_2\", timer_2);\r\n        \r\n        startCountDown(count_down)\r\n      \r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"guest-users-panel\">\r\n      <h2>Current User</h2>\r\n      <GuestUserBlock name={userLoggedIn? loggedInUserName: userName} color='#4141ad' />\r\n      <h2>Participants</h2>\r\n      {testUsers.map((obj, i) => (\r\n        <GuestUserBlock name={obj.name} color={obj.color} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function GoalSlider(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n\r\n  const {\r\n    current_module,\r\n    current_lesson,\r\n    wpm\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n  const goal = (current_module + 1) * 10\r\n  const marks = [\r\n    {\r\n      value: goal,\r\n      label: goal + ' WPM',\r\n    }\r\n  ];\r\n  return (\r\n    <div className=\"goal-slider\">\r\n         <Slider\r\n        step={1}\r\n        marks={marks}\r\n        value={wpm}\r\n        max={90}\r\n        className = {wpm >= goal? \"above-goal\": wpm>goal/2? \"middle-to-goal\":\"low-to-goal\" }\r\n\r\n        classes={makeStyles(\r\n          {\r\n            root: {\r\n              height: 10,\r\n              cursor: 'default'\r\n            },\r\n            track: {\r\n              height: 10,\r\n              borderRadius: 4,\r\n            },\r\n            rail: {\r\n              height: 10,\r\n              borderRadius: 4,\r\n            },\r\n            mark : {\r\n              height: 10\r\n            },\r\n            markLabel : {\r\n              position: 'absolute' ,\r\n              marginTop: '4px'\r\n            },\r\n            marked : {\r\n              marginBottom: 0\r\n            }\r\n          }\r\n        )()}\r\n\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport GoalSlider from \"./GoalSlider\";\r\n\r\n\r\nexport default function TypingResult() {\r\n  const [state] = useContext(StoreContext);\r\n  const {\r\n    wpm,\r\n    accuracy\r\n  } = state;\r\n\r\n\r\n  return (\r\n    <div className=\"result-panel\">\r\n      <div><b>Speed:  </b><i> {wpm} WPM </i> <br/><b>Accuracy: </b><i> {accuracy}%</i></div>\r\n      <div style={{margin:0}}> <GoalSlider/> </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { layouts } from \"../help-files/layouts\";\r\n\r\nexport default function TypingComplete() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    current_lesson,\r\n    current_module,\r\n    current_goal,\r\n    wpm\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => {\r\n      dispatch({reset_typing_panel: true})\r\n      set(\"show_completed_typing\", false)\r\n  }\r\n\r\n  const handleNextButtonClick = () => {\r\n    if (current_module == 7 && current_lesson!= (layouts.length-1) )\r\n        {\r\n            set(\"current_lesson\", current_lesson + 1)\r\n            set(\"current_module\", 0)\r\n        }\r\n    if (current_module != 7 && current_lesson!= (layouts.length-1))\r\n        set(\"current_module\", current_module+1)\r\n    \r\n    reset_panel()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"typing-complete\">\r\n        <div>\r\n        <b>Goal Speed:</b> {current_goal} wpm\r\n        </div>\r\n        <div>\r\n        <b>Completion Speed:</b> {wpm} wpm\r\n        </div>\r\n        \r\n        <div>\r\n            <Button onClick={reset_panel} variant=\"contained\" style={{marginRight:'24px'}}> <CachedIcon style={{marginRight: '12px'}}/> Retry</Button>\r\n            {wpm >= current_goal && \r\n                <Button \r\n                    onClick = {handleNextButtonClick}\r\n                    variant=\"contained\" style={{background:'#ebf792'}}> <NavigateNextIcon style={{marginRight: '12px'}}/> Next Module</Button>}\r\n        </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TypingResult from \"./TypingResult\";\r\nimport { layouts, shortcuts,modules } from \"../help-files/layouts\";\r\nimport TypingComplete from \"./TypingComplete\";\r\n\r\nexport default function TypingPanel() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    completed_text,\r\n    uncompleted_text,\r\n    current_word,\r\n    current_input, \r\n    start,\r\n    timer_started,\r\n    words_typed,\r\n    current_lesson,\r\n    current_module,\r\n    unlocked_typing_lessons,\r\n    unlocked_typing_modules,\r\n    current_goal,\r\n    wpm,\r\n    show_completed_typing\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => dispatch({reset_typing_panel: true})\r\n\r\n  const showNextLessonButton = () => {\r\n    \r\n  }\r\n  const showResults = () => {\r\n    set(\"show_completed_typing\", true)\r\n  }\r\n\r\n  const setUnlockedLessons = () => {set('unlocked_typing_lessons', unlocked_typing_lessons + 1)}\r\n  const setUnlockedModules = () => {\r\n    if (current_module == 7)\r\n      {\r\n        showNextLessonButton()\r\n        return\r\n    }\r\n    const modules = unlocked_typing_modules \r\n    if(current_module == 3 && modules[current_lesson + 1] == 0)\r\n      {\r\n        setUnlockedLessons()\r\n      }\r\n      \r\n      modules[current_lesson] = modules[current_lesson] + 1\r\n    set('unlocked_typing_modules', modules)\r\n  }\r\n  const unlock_next_module = () => {\r\n    const last_unlocked = current_lesson == 13 && current_module == 7\r\n    const current_lesson_old = current_module < unlocked_typing_modules[current_lesson]\r\n    if (!last_unlocked && !current_lesson_old)\r\n      setUnlockedModules()\r\n    else if (current_module == 7)\r\n      showNextLessonButton()\r\n\r\n  }\r\n\r\n  const reset = event => {\r\n    let new_completed_text = [];\r\n    let new_uncompleted_text = [];\r\n    for (let i = 0; i < completed_text.length; i++)\r\n      new_uncompleted_text.push(completed_text[i]);\r\n    if (current_word != null) {\r\n      let word = \"\" + current_word;\r\n      new_uncompleted_text.push(word);\r\n    }\r\n    for (let i = 0; i < uncompleted_text.length; i++)\r\n      new_uncompleted_text.push(uncompleted_text[i]);\r\n\r\n    let new_word = new_uncompleted_text[0];\r\n    new_uncompleted_text.shift();\r\n\r\n    set(\"completed_text\", new_completed_text);\r\n    set(\"uncompleted_text\", new_uncompleted_text);\r\n    set(\"current_word\", new_word);\r\n    reset_panel()\r\n  };\r\n\r\n  const set_result = () => {\r\n    const millis = Date.now() - start;\r\n    const seconds = millis / 1000\r\n    const words_typed_new = words_typed + 1\r\n    set(\"words_typed\", words_typed_new)\r\n    let new_wpm = 60/ ( seconds / words_typed_new )\r\n    set(\"wpm\", Math.round(new_wpm))\r\n  }\r\n  const start_word_count = () => {\r\n    const start_new = Date.now();\r\n    set(\"start\", start_new)\r\n    set(\"timer_started\", true)\r\n  }\r\n\r\n  const handleWordTyped = event => {\r\n\r\n    if (!timer_started)\r\n      start_word_count()\r\n\r\n    let word = event.target.value;\r\n\r\n    if (word === current_word + \" \") {\r\n      let new_completed_text = completed_text;\r\n      new_completed_text.push(current_word);\r\n      let new_word = uncompleted_text[0];\r\n      let new_uncompleted_text = uncompleted_text;\r\n      new_uncompleted_text.shift();\r\n\r\n      set(\"completed_text\", new_completed_text);\r\n      set(\"uncompleted_text\", new_uncompleted_text);\r\n      set(\"current_word\", new_word);\r\n      set(\"current_input\", \"\");\r\n      set_result()\r\n      if (new_uncompleted_text.length == 0 && new_word == null )\r\n        {\r\n\r\n          if(current_goal <= wpm)\r\n            unlock_next_module()\r\n          showResults()\r\n\r\n        }\r\n    } else {\r\n      set(\"current_input\", word);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='lesson-header'>Lesson {current_lesson+1}: <i > {layouts.qwerty[current_lesson]}</i> </h2>\r\n      <h1 className='module-header'>Module {current_module+1}: Reach <span > {(current_module + 1)*10} Words Per Minute</span></h1>\r\n      <div className=\"typing-panel\">\r\n       {show_completed_typing && <TypingComplete/>}\r\n        <TypingResult />\r\n        <div className=\"typing-part\">\r\n          <p className=\"typing-text\">\r\n            {completed_text.map((word, j) => (\r\n              <span key={\"completed\" + j} className=\"completed-word \">{word}</span>\r\n            ))}\r\n            {current_word != null && <span className=\"current_word\">{current_word}</span>} \r\n            {uncompleted_text.map((word, i) => (\r\n              <span className=\"uncompleted-word\" key={\"uncompleted\" + i}>{word}</span>\r\n            ))}\r\n          </p>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"typing-text-field\"\r\n            onChange={handleWordTyped}\r\n            value={current_input}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label= \"reset\"\r\n                    onClick={reset}\r\n                  >\r\n                    <CachedIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport default function ChallengeComplete() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    wpm,\r\n    current_challenge\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => {\r\n        dispatch({reset_practice_panel: true})\r\n        set(\"show_completed_challenge\", false)\r\n  }\r\n\r\n  const handleNextButtonClick = () => {\r\n        set(\"current_challenge\", current_challenge+1)\r\n        reset_panel()\r\n  }\r\n  \r\n  let completed = wpm>=85? 3 : wpm >= 60 ? 2 : wpm >= 30 ? 1 : 0\r\n  let uncompleted = wpm>=85? 0 : wpm >= 60 ? 1 : wpm >= 30 ? 2 : 3\r\n\r\n  return (\r\n    <div className=\"typing-complete\">\r\n        <div>\r\n        <b>Completion Speed:</b> {wpm} wpm\r\n        </div>\r\n        <div style={{padding:0}}>\r\n            {[...Array(completed).keys()].map(el => \r\n                <StarIcon className=\"challenge-star\" style={{fontSize:'66px'}}/>\r\n            )}\r\n            {[...Array(uncompleted).keys()].map(el => \r\n                <StarIcon className=\"challenge-star-locked\" style={{fontSize:'66px'}}/>\r\n            )}\r\n        </div>\r\n    <div>\r\n\r\n    <Button onClick={reset_panel} variant=\"contained\" style={{marginRight:'24px'}}> <CachedIcon style={{marginRight: '12px'}}/> Retry</Button>\r\n     {current_challenge < 9 && \r\n     <Button \r\n     onClick = {handleNextButtonClick}\r\n     variant=\"contained\" style={{background:'#5b6a48', color:'white'}}> <NavigateNextIcon style={{marginRight: '12px'}}/> Next Challenge</Button>}\r\n     </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TypingResult from \"./TypingResult\";\r\nimport { practice_datasets } from \"../help-files/layouts\";\r\nimport ChallengeComplete from \"./ChallengeComplete\";\r\n\r\nexport default function ChallengePanel() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    completed_text,\r\n    uncompleted_text,\r\n    current_word,\r\n    current_input, \r\n    start,\r\n    timer_started,\r\n    words_typed,\r\n    current_challenge,\r\n    show_completed_challenge,\r\n    starsUnlocked,\r\n    wpm\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n\r\n  const showResults = () => {\r\n    unlockStars()\r\n    set(\"show_completed_challenge\", true)\r\n    \r\n  }\r\n  const unlockStars = () => {\r\n    \r\n    let stars = wpm >=85? 3 : wpm >= 60 ? 2 : wpm >= 30 ? 1 : 0\r\n    if (stars > starsUnlocked[current_challenge])\r\n    {\r\n      let newStarsUnlocked = Array.from(starsUnlocked)\r\n      newStarsUnlocked[current_challenge] = stars\r\n      set(\"starsUnlocked\", newStarsUnlocked)\r\n    }\r\n  }\r\n\r\n  const reset = event => {\r\n    dispatch({reset_practice_panel: true})\r\n  };\r\n\r\n  const set_result = () => {\r\n    const millis = Date.now() - start;\r\n    const seconds = millis / 1000\r\n    const words_typed_new = words_typed + 1\r\n    set(\"words_typed\", words_typed_new)\r\n    let new_wpm = 60/ ( seconds / words_typed_new )\r\n    set(\"wpm\", Math.round(new_wpm))\r\n  }\r\n  const start_word_count = () => {\r\n    const start_new = Date.now();\r\n    set(\"start\", start_new)\r\n    set(\"timer_started\", true)\r\n  }\r\n\r\n  const handleWordTyped = event => {\r\n\r\n    if (!timer_started)\r\n      start_word_count()\r\n\r\n    let word = event.target.value;\r\n\r\n    if (word === current_word + \" \") {\r\n      let new_completed_text = completed_text;\r\n      new_completed_text.push(current_word);\r\n      let new_word = uncompleted_text[0];\r\n      let new_uncompleted_text = uncompleted_text;\r\n      new_uncompleted_text.shift();\r\n\r\n      set(\"completed_text\", new_completed_text);\r\n      set(\"uncompleted_text\", new_uncompleted_text);\r\n      set(\"current_word\", new_word);\r\n      set(\"current_input\", \"\");\r\n      set_result()\r\n      if (new_uncompleted_text.length ==0 && new_word == null )\r\n        showResults()\r\n    } else {\r\n      set(\"current_input\", word);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h1 className='challenge-header'>Challenge: {practice_datasets[current_challenge]} Words</h1>\r\n      <div className=\"typing-panel\">\r\n      {show_completed_challenge && <ChallengeComplete/>}\r\n      <TypingResult />\r\n      <div className=\"typing-part\">\r\n        <p className=\"typing-text\">\r\n          {completed_text.map(word => (\r\n            <span className=\"completed-word \">{word}</span>\r\n          ))}\r\n          {current_word != null && <span className=\"current_word\">{current_word}</span>} \r\n          {uncompleted_text.map(word => (\r\n            <span className=\"uncompleted-word\">{word}</span>\r\n          ))}\r\n        </p>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className=\"typing-text-field\"\r\n          onChange={handleWordTyped}\r\n          value={current_input}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={reset}\r\n                >\r\n                  <CachedIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport const ChallengeTile = props => (\r\n\r\n  <div className={props.className} onClick = {props.onClick}>\r\n     <div>{props.text}</div> \r\n     <div>\r\n      {props.solved.map(el => \r\n        <StarIcon className=\"challenge-star\"/>\r\n        )}\r\n        {props.unsolved.map(el => \r\n        <StarIcon className=\"challenge-star-locked\"/>\r\n        )}\r\n        </div>\r\n  </div>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { practice_datasets, practice_words } from \"../help-files/layouts\";\r\nimport { ChallengeTile } from \"../components/ChallengeTile\";\r\n\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\n\r\nexport default function Practice(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  const { current_challenge, uncompleted_text, current_word, starsUnlocked } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => dispatch({reset_practice_panel: true})\r\n  \r\n  const setChallenge = value => { \r\n    set(\"current_challenge\", value);\r\n    reset_panel()\r\n};\r\n  const getStar = () => <StarIcon className=\"challenge-star\" style={{fontSize:'18px'}}/>\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"lessons-block\">\r\n        <div className=\"lessons-select-header\">\r\n          <h2 className=\"challenge-select-header\"> Select Word Category </h2>\r\n\r\n\r\n          \r\n        </div>\r\n        <div className=\"challenge-container\">\r\n          <div className=\"challenge-select\">\r\n            {practice_datasets.map((name, i) => (\r\n              <ChallengeTile\r\n                text={name}\r\n                className={\r\n                  i == current_challenge ? \"current-challenge\" : \"challenge\"\r\n                }\r\n                solved = {[...Array(starsUnlocked[i]).keys()]}\r\n                unsolved = {[...Array(3-starsUnlocked[i]).keys()]}\r\n                onClick={() => setChallenge(i)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='challenge-star-description'> \r\n                {getStar()} - 30 wpm\r\n          </div>\r\n          <div className='challenge-star-description'> \r\n                {getStar()}{getStar()} - 60 wpm\r\n          </div>\r\n          <div className='challenge-star-description'> \r\n                {getStar()}{getStar()}{getStar()} - 85 wpm\r\n          </div>\r\n          \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Register(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  const { registerOpen, show_pw_error, show_fill_blank_error,\r\n    pw,\r\n    pw_confirmed,\r\n    email_register,\r\n    user_name_register, } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const handleClick = () => {\r\n    set(\"registerOpen\", !registerOpen);\r\n  };\r\n  const handleRegisterClick = () => {\r\n    if (pw_confirmed != pw)\r\n      {\r\n        set(\"show_pw_error\", true)\r\n      }\r\n    else if (pw == \"\" || pw_confirmed == \"\" || email_register==\"\" || user_name_register ==\"\")\r\n    {\r\n      set(\"show_fill_blank_error\", true)\r\n    }\r\n    \r\n    else\r\n      {\r\n        set(\"loggedInUserName\", user_name_register)\r\n        set(\"email\", email_register)\r\n        set(\"registerPassword\", pw)\r\n        handleClick()\r\n      }\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={registerOpen} onClose={handleClick} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth = {'xs'} >\r\n        <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\r\n        <DialogContent  style={{padding:'32px'}}>\r\n        \r\n        <h3 style={{margin:0, marginBottom:'8px'}}>User Name <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            style={{width:'40%'}}\r\n            onChange={(evt)=> set(\"user_name_register\", evt.target.value)}\r\n          />\r\n          <h3 style={{margin:0, marginBottom:'8px', marginTop:'16px'}}>Email Address <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            onChange={(evt)=> set(\"email_register\", evt.target.value)}\r\n          />\r\n          \r\n          <h3 style={{margin:0, marginBottom:'8px', marginTop:'16px'}}>Password <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type='password'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(evt)=> set(\"pw\", evt.target.value)}\r\n          />\r\n          <h3 style={{margin:0, marginBottom:'8px', marginTop:'16px'}}>Confirm Password <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type='password'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(evt)=> set(\"pw_confirmed\", evt.target.value)}\r\n          />\r\n         {show_pw_error &&  <p style={{color:'red'}}>Passowrds do not match</p> }\r\n         {show_fill_blank_error && <p style={{color:'red'}}>Please fill all required fields</p> }\r\n        </DialogContent>\r\n        <DialogActions style={{padding:'32px'}}>\r\n          <Button onClick={handleClick} color=\"secondary\" variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleRegisterClick} color=\"primary\" variant=\"contained\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Login(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  const { loginOpen, email, registerPassword, show_login_error,pw_login , email_login} = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const handleClick = () => {\r\n    set(\"loginOpen\", !loginOpen);\r\n  };\r\n\r\n  const handleLoginClick = ()=>{\r\n\r\n    if (email == email_login && registerPassword == pw_login)\r\n      {\r\n        set(\"userLoggedIn\", true)\r\n        handleClick()\r\n      }\r\n    else\r\n      set(\"show_login_error\", true)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={loginOpen} onClose={handleClick} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth = {'xs'} >\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent  style={{padding:'32px'}}>\r\n        \r\n          <h3 style={{margin:0, marginBottom:'8px'}}>Email Address <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n          autoFocus\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            onChange={(evt)=> set(\"email_login\", evt.target.value)}\r\n          />\r\n          \r\n          <h3 style={{margin:0, marginBottom:'8px', marginTop:'16px'}}>Password <span style={{color:'red'}}>*</span></h3>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type='password'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(evt)=> set(\"pw_login\", evt.target.value)}\r\n          />\r\n         {show_login_error &&  <p style={{color:'red'}}>The email/passowrd combination is not valid</p> }\r\n        </DialogContent>\r\n        <DialogActions style={{padding:'32px'}}>\r\n          <Button onClick={handleClick} color=\"secondary\" variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleLoginClick} color=\"primary\" variant=\"contained\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../Store';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nexport default function UserSettings() {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { loggedInUserName , prefferedLayout} = state\r\n\r\n    const set = (name, value) => dispatch({ name, value });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ExpansionPanel style={{background:'white', border:'none', borderRadius:0, boxShadow:'none', height:'100%'}}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          style={{background:'#e0e0e0',  borderRadius:0}}\r\n        >\r\n          <Typography align=\"center\" \r\n          style={{ width:'100%', fontWeight:600, fontSize: '1.1em', color: '#464646'}}>SETTINGS</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails style={{background:'white', border:'none', borderRadius:0, boxShadow:'none', height:'100%'}}>\r\n              <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between'}}>\r\n                <div style={{margin: 0, marginBottom:'16px', marginTop:'8px'}}>\r\n                    <h4 style={{margin: 0, marginBottom:'8px'}}>User Name</h4>\r\n                        <TextField\r\n                        defaultValue={loggedInUserName}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        />\r\n                </div>\r\n                <div style={{margin: 0, marginBottom:'16px'}}>\r\n                        <h4 style={{margin: 0, marginBottom:'8px'}}>Preffered Layout</h4>\r\n                        <FormControl variant=\"outlined\" size=\"small\">\r\n                            <Select\r\n                            value={prefferedLayout}\r\n                            onChange={()=>{}}\r\n                            >\r\n                            {['QWERTY', 'Dvorak', 'Colemak'].map(item => <MenuItem value={item}>{item}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n                </div>\r\n                <Button size='small' style={{marginBottom:'16px'}} variant=\"outlined\" startIcon={<ImageIcon />}>Change Image</Button>\r\n                <Button size='small' color=\"primary\" style={{marginBottom:'16px'}} variant=\"contained\" startIcon={<SaveIcon />}>Save</Button>\r\n                <Link>Reset Passowrd</Link>\r\n                </div>\r\n\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../Store';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nexport default function UserStatistics() {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { mode, current_lesson, testSessionStarted } = state\r\n\r\n    const set = (name, value) => dispatch({ name, value });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ExpansionPanel style={{background:'white', border:'none', borderRadius:0, boxShadow:'none'}}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          style={{background:'#e0e0e0',  borderRadius:0}}\r\n        >\r\n          <Typography align=\"center\" \r\n          style={{ width:'100%', fontWeight:600, fontSize: '1.1em', color: '#464646'}}>STATISTICS</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails style={{background:'white', border:'none', borderRadius:0, boxShadow:'none'}}>\r\n          <Typography>\r\n          <div style={{ width: \"100%\", paddingTop: \"8px\" , paddingLeft:'4px', lineHeight: 2, }}>\r\n            <div> \r\n                <b> User Rank: </b> <i>78 </i> <br/>\r\n                <b> Average Speed: </b>  <i>47 wpm </i> <br/>\r\n                <b> Average Accuracy: </b>  <i>99.53%</i> <br/>\r\n                <b> Highest Accuracy Keys: </b>  <i>d, s, j, k, h </i> <br/>\r\n                <b> Worst Accuracy Keys: </b>  <i>z, m, o, p, b, v</i> <br/>\r\n            </div>\r\n        </div>\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport UserSettings from \"../components/UserSettings\";\r\nimport UserStatistics from \"../components/UserStatistics\";\r\n\r\n\r\nexport default function UserLoggedIn(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  const { loggedInUserName } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n  const handleClickLogout = () => {\r\n    set(\"userLoggedIn\", false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"right-panel\">\r\n      <div className=\"user-account\">\r\n        <div className=\"avatar\">\r\n        <Avatar style={{width: '4.5em', height: '4.5em', margin: 'auto'}} >\r\n            <span style={{fontSize:'2.2em'}}>{loggedInUserName.charAt(0)}</span>\r\n        </Avatar>\r\n        <div style={{fontSize:'1.5em', margin: '8px', textAlign:'center'}}>{loggedInUserName}</div>\r\n        <div style={{textAlign:'center'}}>\r\n            <Link href=\"#\" onClick={handleClickLogout} style={{fontSize: '1em', textAlign:'center'}}>\r\n              Logout\r\n            </Link>\r\n        </div>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n      <UserSettings/>\r\n      <UserStatistics/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Register  from \"./Register\";\r\nimport Login  from \"./Login\";\r\nimport UserLoggedIn from \"./UserLoggedIn\";\r\n\r\nexport default function RightPanel(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n  const { current_challenge, loginOpen, registerOpen, userLoggedIn } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const handleClickLogin = () => {\r\n    set(\"loginOpen\", !loginOpen);\r\n  };\r\n  const handleClickRegister = () => {\r\n    set(\"registerOpen\", !registerOpen);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      {userLoggedIn && <UserLoggedIn/>}\r\n      {!userLoggedIn && \r\n        <div className=\"right-panel\">\r\n          <div className=\"user-account\">\r\n          <div className=\"avatar\">\r\n          <Avatar style={{width: '4.5em', height: '4.5em', margin: 'auto'}} >\r\n            <PersonIcon style={{fontSize: 62}}/>\r\n          </Avatar>\r\n          </div>\r\n\r\n          <Typography>\r\n            <Breadcrumbs>\r\n              <Link href=\"#\" onClick={handleClickLogin}>\r\n                Login\r\n              </Link>\r\n              <Link href=\"#\" onClick={handleClickRegister}>\r\n                Register\r\n              </Link>\r\n            </Breadcrumbs>\r\n          </Typography>\r\n          <Register/>\r\n          <Login/>\r\n        </div>\r\n        </div>\r\n      }\r\n   </div>\r\n  );\r\n}\r\n","import React, { useContext  } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\n\r\n\r\nexport default function Cursor(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    cursorVisible\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n\r\n  return (\r\n      <span className=\"cursor\">\r\n          \r\n\r\n      </span>\r\n\r\n  );\r\n}\r\n","import React, { useContext, useEffect  } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { shotrcutDict } from \"../help-files/hotkey-panel-handler\";\r\n\r\n\r\nexport default function Marker(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    requiredShortcut,\r\n    shortcutSequence\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n\r\n\r\n  return (\r\n      <span className=\"marker\" style={{background: shotrcutDict[ shortcutSequence[requiredShortcut]].color}}>\r\n          \r\n      </span>\r\n\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function GoalSliderHotkey(props) {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n\r\n\r\n  const {\r\n    ppm\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const goal = 60\r\n  const marks = [\r\n    {\r\n      value: goal,\r\n      label: goal + ' PPM',\r\n    }\r\n  ];\r\n  return (\r\n    <div className=\"goal-slider\">\r\n         <Slider\r\n        step={1}\r\n        marks={marks}\r\n        value={ppm}\r\n        max={150}\r\n        className = {ppm >= goal? \"above-goal\": ppm>goal/2? \"middle-to-goal\":\"low-to-goal\" }\r\n\r\n        classes={makeStyles(\r\n          {\r\n            root: {\r\n              height: 10,\r\n              cursor: 'default'\r\n            },\r\n            track: {\r\n              height: 10,\r\n              borderRadius: 4,\r\n            },\r\n            rail: {\r\n              height: 10,\r\n              borderRadius: 4,\r\n            },\r\n            mark : {\r\n              height: 10\r\n            },\r\n            markLabel : {\r\n              position: 'absolute' ,\r\n              marginTop: '4px'\r\n            },\r\n            marked : {\r\n              marginBottom: 0\r\n            }\r\n          }\r\n        )()}\r\n\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport GoalSliderHotkey from \"./GoalSliderHotkey\";\r\n\r\nexport default function HotkeyResult() {\r\n  const [state] = useContext(StoreContext);\r\n  const {\r\n    ppm,\r\n    accuracy\r\n  } = state;\r\n\r\n  return (\r\n    <div className=\"result-panel\">\r\n      <div><b>Speed:  </b><i> {ppm} PPM </i> <br/><b>Accuracy: </b><i> {accuracy}%</i></div>\r\n      <div style={{margin:0}}> <GoalSliderHotkey/> </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { layouts } from \"../help-files/layouts\";\r\n\r\nexport default function HotkeyComplete() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    current_shortcut_lesson,\r\n    ppm\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => {\r\n      dispatch({reset_hotkey_panel: true})\r\n      set(\"show_completed_hotkey\", false)\r\n  }\r\n\r\n  const handleNextButtonClick = () => {\r\n        set(\"current_shortcut_lesson\", current_shortcut_lesson+1)\r\n        dispatch({reset_hotkey_panel: true})\r\n    reset_panel()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"typing-complete\">\r\n        <div>\r\n        <b>Goal Speed:</b> {60} ppm\r\n        </div>\r\n        <div>\r\n        <b>Completion Speed:</b> {ppm} ppm\r\n        </div>\r\n        \r\n        <div>\r\n            <Button onClick={reset_panel} variant=\"contained\" style={{marginRight:'24px'}}> <CachedIcon style={{marginRight: '12px'}}/> Retry</Button>\r\n            {ppm >= 10 && current_shortcut_lesson != 3 &&\r\n                <Button \r\n                    onClick = {handleNextButtonClick}\r\n                    variant=\"contained\" style={{background:'#54a58c', color:'white'}}> <NavigateNextIcon style={{marginRight: '12px'}}/> Next Lesson</Button>}\r\n        </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { shortcuts, hotkeyText } from \"../help-files/layouts\";\r\nimport { shotrcutDict, getChunks } from \"../help-files/hotkey-panel-handler\";\r\nimport Cursor from \"./Cursor\";\r\nimport Marker from \"./Marker\";\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport HotkeyResult from \"./HotkeyResult\";\r\nimport HotkeyComplete from \"./HotkeyComplete\";\r\n\r\n\r\nexport default function HotkeyPanel() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    current_shortcut_lesson,\r\n    markerPosition,\r\n    cursorPosition, \r\n    marker_paragraph,\r\n    marker_line,\r\n    cursor_paragraph,\r\n    cursor_line,\r\n    requiredShortcut,\r\n    shortcutSequence,\r\n    show_completed_hotkey\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => dispatch({reset_hotkey_panel: true})\r\n\r\n\r\n  const reset = event => {\r\n\r\n    reset_panel()\r\n  };\r\n\r\n  const getHintButton = (text) => {\r\n    let inside = text\r\n    if (text == 'Up Arrow')\r\n      inside =  <ArrowRightAltIcon style={{transform: 'rotate(270deg)', fontSize:'12px'}}/>\r\n    if (text == 'Down Arrow')\r\n      inside =  <ArrowRightAltIcon style={{transform: 'rotate(90deg)', fontSize:'12px'}}/>\r\n    if (text == 'Left Arrow')\r\n      inside =  <ArrowRightAltIcon style={{transform: 'rotate(180deg)', fontSize:'12px'}}/>\r\n    if (text == 'Right Arrow')\r\n      inside = <ArrowRightAltIcon style={{ fontSize:'12px'}}/>\r\n    return <div className='hotkey-combination-button' style={{ fontSize:'12px'}}> {inside} </div>\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <h2 className='hotkey-lesson-header'>Lesson {current_shortcut_lesson+1}: <span > {shortcuts[current_shortcut_lesson]}</span> </h2>\r\n      <h1 className='hotkey-lesson-header'>Goal: <span > Reach 60 Presses Per Minute</span> </h1>\r\n      \r\n      <div className=\"typing-panel\">\r\n\r\n      {show_completed_hotkey && <HotkeyComplete/>}\r\n        <HotkeyResult /> \r\n\r\n\r\n        <div className=\"hotkey-text-field\"> \r\n                  <IconButton\r\n                    style={{float:'right'}}\r\n                    aria-label= \"reset\"\r\n                    onClick={reset}\r\n                  >\r\n                    <CachedIcon />\r\n                  </IconButton>\r\n          <Chip size=\"large\" \r\n          label={shotrcutDict[shortcutSequence[requiredShortcut]].description} \r\n          style={{background:shotrcutDict[shortcutSequence[requiredShortcut]].color, color: 'white', fontWeight: 'bold',\r\n         borderRadius:'4px'}}/>\r\n          </div>\r\n\r\n\r\n        <div className=\"typing-part\" >\r\n            {hotkeyText.map((text, k) => {\r\n                let splitted = getChunks(text, 9)\r\n                \r\n                return <p className=\"hotkey-text\" key = {\"paragraph-\" + k}> {splitted.map((words, j) => \r\n                          <span key = {\"line-\" + j} style={{display: 'block', width: '100%'}}> \r\n                              {words.map((word, i)=> \r\n                                  {\r\n                                    let isCursorPosition = i==cursorPosition && j == cursor_line && k == cursor_paragraph\r\n                                    let isMarkerPosition = i == markerPosition && j == marker_line && k == marker_paragraph\r\n                                    let isBeforeMarkerPosition = i == markerPosition-1 && j == marker_line && k == marker_paragraph\r\n                                    let markerAtEnd = shotrcutDict[shortcutSequence[requiredShortcut]].description.toLowerCase().includes('end')\r\n                                    let markerAtBeginning = !markerAtEnd \r\n                                    let markerLast = i == words.length - 1 && markerPosition == words.length && j == marker_line && k == marker_paragraph\r\n                                    let cursorLast = i == words.length - 1 && cursorPosition == words.length && j == cursor_line && k == cursor_paragraph\r\n                                          return (<span key = {\"word-\" + i}>\r\n                                              {isCursorPosition && <Cursor/>}\r\n                                              {isMarkerPosition &&<Marker/>}\r\n                                              {isMarkerPosition && markerAtEnd && <span>&nbsp;</span> }\r\n                                              {word}\r\n                                              { ( markerAtBeginning || (!isMarkerPosition && !isBeforeMarkerPosition)) && <span>&nbsp;</span> }\r\n                                              {markerLast &&<Marker/>}\r\n                                              {cursorLast &&<Cursor/>}\r\n\r\n                                              \r\n                                          </span>)})\r\n                              }\r\n                            \r\n                          </span>\r\n                              \r\n                      )}\r\n                      </p>\r\n          \r\n            })}\r\n\r\n          \r\n        </div>\r\n        \r\n\r\n        <div className=\"hotkey-instructions\">\r\n          {shotrcutDict.map((obj,i) => \r\n          <div className=\"hotkey-description\" key={\"desription\"+i}>\r\n          \r\n          <span style={{display: 'flex', alignItems: 'center'}} \r\n          style={{color: obj == shotrcutDict[shortcutSequence[requiredShortcut]]? obj.color: 'inherit',\r\n          fontWeight: obj == shotrcutDict[shortcutSequence[requiredShortcut]]? 900: 'inherit'}}\r\n          > \r\n          {/*<FiberManualRecordIcon className=\"hotkey-circle\" style={{color:obj.color, verticalAlign: 'middle', fontSize: '12px'}} size =\"small\"/>*/}\r\n            {obj.description} \r\n            </span> \r\n            <span style={{display: 'flex', alignItems: 'center'}}>\r\n              {obj.text.length==1 && getHintButton(obj.text[0]) }\r\n              {obj.text.length!=1 &&  getHintButton(obj.text[0])} \r\n              {obj.text.length!=1 && <span style={{marginLeft:'4px', marginRight:'4px', \r\n                color: obj == shotrcutDict[shortcutSequence[requiredShortcut]]? obj.color: 'inherit'}}>+</span>} \r\n              {obj.text.length!=1 &&  getHintButton(obj.text[1])}\r\n            </span>\r\n            \r\n            </div> )}\r\n        </div>        \r\n\r\n\r\n      </div>\r\n      \r\n          \r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport MotorcycleIcon from \"@material-ui/icons/Motorcycle\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function UserProgressBar(props) {\r\n  return (\r\n    <div>\r\n        <MotorcycleIcon \r\n        style={{\r\n            marginLeft: ( props.progress <= 2 ? props.progress - 1: props.progress - 3) + '%', \r\n            transitionTimingFunction: 'linear', \r\n            transition:'margin-left 1s',\r\n            color: props.color,\r\n            fontSize: '36px'\r\n        }}\r\n            />\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={props.progress}\r\n        style={{ width: \"100%\", marginBottom: \"8px\"}}\r\n        classes={makeStyles({\r\n            colorPrimary: {\r\n              backgroundColor:  'rgb(224, 224, 224)',\r\n            },\r\n            barColorPrimary: {\r\n              backgroundColor: props.color, \r\n            },\r\n            root: {\r\n                height: 7\r\n              },\r\n              bar: {\r\n                borderRadius: 20,\r\n               \r\n              }\r\n          })()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\n\r\nexport default function RaceStarter() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    count_down\r\n  } = state;\r\n\r\n  return (\r\n    <div className=\"typing-complete\">\r\n        <div>{count_down}</div>\r\n \r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StoreContext } from \"../Store\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TypingResult from \"./TypingResult\";\r\nimport { layouts, testUsers } from \"../help-files/layouts\";\r\nimport UserProgressBar from \"../components/UserProgressBar\"\r\nimport RaceStarter from \"./RaceStarter\";\r\n\r\n\r\nexport default function RacePanel() {\r\n  const [state, dispatch] = useContext(StoreContext);\r\n  const {\r\n    completed_text,\r\n    uncompleted_text,\r\n    current_word,\r\n    current_input, \r\n    start,\r\n    timer_started,\r\n    words_typed,\r\n    count_down,\r\n    testUserProgress\r\n  } = state;\r\n  const set = (name, value) => dispatch({ name, value });\r\n  const reset_panel = () => dispatch({reset: true})\r\n\r\n\r\n  const reset = event => {\r\n    let new_completed_text = [];\r\n    let new_uncompleted_text = [];\r\n    for (let i = 0; i < completed_text.length; i++)\r\n      new_uncompleted_text.push(completed_text[i]);\r\n    if (current_word != null) {\r\n      let word = \"\" + current_word;\r\n      new_uncompleted_text.push(word);\r\n    }\r\n    for (let i = 0; i < uncompleted_text.length; i++)\r\n      new_uncompleted_text.push(uncompleted_text[i]);\r\n\r\n    let new_word = new_uncompleted_text[0];\r\n    new_uncompleted_text.shift();\r\n\r\n    set(\"completed_text\", new_completed_text);\r\n    set(\"uncompleted_text\", new_uncompleted_text);\r\n    set(\"current_word\", new_word);\r\n    reset_panel()\r\n  };\r\n\r\n  const set_result = () => {\r\n    const millis = Date.now() - start;\r\n    const seconds = millis / 1000\r\n    const words_typed_new = words_typed + 1\r\n    set(\"words_typed\", words_typed_new)\r\n    let new_wpm = 60/ ( seconds / words_typed_new )\r\n    set(\"wpm\", Math.round(new_wpm))\r\n  }\r\n  const start_word_count = () => {\r\n    const start_new = Date.now();\r\n    set(\"start\", start_new)\r\n    set(\"timer_started\", true)\r\n  }\r\n\r\n  const handleWordTyped = event => {\r\n\r\n    if (!timer_started)\r\n      start_word_count()\r\n\r\n    let word = event.target.value;\r\n\r\n    if (word === current_word + \" \") {\r\n      let new_completed_text = completed_text;\r\n      new_completed_text.push(current_word);\r\n      let new_word = uncompleted_text[0];\r\n      let new_uncompleted_text = uncompleted_text;\r\n      new_uncompleted_text.shift();\r\n\r\n      set(\"completed_text\", new_completed_text);\r\n      set(\"uncompleted_text\", new_uncompleted_text);\r\n      set(\"current_word\", new_word);\r\n      set(\"current_input\", \"\");\r\n      set_result()\r\n    } else {\r\n      set(\"current_input\", word);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop: '11.4%'}}>\r\n        {count_down!=0 && <h2>Race starts in {count_down} seconds...</h2>}\r\n        {count_down==0 && <h2>Go!</h2>}\r\n\r\n        <div className=\"typing-panel\">\r\n          \r\n          <div className=\"race-cars\"> \r\n              {testUserProgress.map((progress,i) => <UserProgressBar progress={progress} key={\"cars\" + i} color={testUsers[i].color}/> )}\r\n          </div>\r\n          <div className=\"user-track\"> <UserProgressBar progress={completed_text.length*100/25} key={\"cars-user\"} color=\"#4141ad\"/>  </div>\r\n        <div className=\"typing-part\" style={{position:'relative'}}>\r\n          {count_down!=0 && <RaceStarter/>}\r\n          <p className=\"typing-text\">\r\n            {completed_text.map(word => (\r\n              <span className= \"completed-word \">{word}</span>\r\n            ))}\r\n            {current_word != null && <span className=\"current_word\" style={{background:'#e2e2f4'}}>{current_word}</span>} \r\n            {uncompleted_text.map(word => (\r\n              <span className=\"uncompleted-word\">{word}</span>\r\n            ))}\r\n          </p>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"typing-text-field\"\r\n            onChange={handleWordTyped}\r\n            value={current_input}\r\n          />\r\n         </div>\r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","  \r\nimport React, { useContext, useEffect } from \"react\";\r\nimport SelectMode from \"../sections/SelectMode\"\r\nimport { StoreContext } from '../Store';\r\nimport Lessons from \"../sections/Lessons\";\r\nimport Race from \"../sections/Race\";\r\nimport TypingPanel from \"../components/TypingPanel\";\r\nimport ChallengePanel from \"../components/ChallengePanel\"\r\nimport Practice from \"../sections/Practice\";\r\nimport RightPanel from \"../sections/RightPanel\";\r\nimport HotkeyPanel from \"../components/HotkeyPanel\";\r\nimport {handleKeyPress} from \"../help-files/hotkey-panel-handler\"\r\nimport RacePanel from \"../components/RacePanel\";\r\n\r\nexport default function MainPage() {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { mode, lesson_type, windowLoaded, currentKeysDown,  hotkey_timer_started,\r\n        hotkeys_completed, ppm,\r\n        hotkey_start} = state\r\n\r\n    const getDisplayOption = (show) => ({ display: show ? 'block' : 'none', height: '100%' })\r\n    const getDisplayOption2 = (show) => ({ display: show ? 'block' : 'none', width: '100%' })\r\n    const set = (name, value) => dispatch({ name, value });\r\n    const setTypingCursorClassChange = () => {\r\n        setInterval(function(){ \r\n        const cursor =  document.getElementsByClassName(\"cursor\")[0]\r\n        if (cursor != undefined)\r\n            cursor.setAttribute('style', 'background: white');\r\n    }, 1000);\r\n\r\n        setTimeout(function(){\r\n            setInterval(function(){ \r\n                const cursor =  document.getElementsByClassName(\"cursor\")[0]\r\n                if (cursor != undefined)\r\n                    cursor.setAttribute('style', 'background: black')\r\n            }, 1000);\r\n\r\n        }, 500)\r\n    }\r\n    const set_presses_per_minute = () => {\r\n            const millis = Date.now() - hotkey_start;\r\n            const seconds = millis / 1000\r\n            const new_hotkeys_completed = hotkeys_completed + 1\r\n            set(\"hotkeys_completed\", new_hotkeys_completed)\r\n            let new_ppm = 60/ ( seconds / new_hotkeys_completed )\r\n            set(\"ppm\", Math.round(new_ppm))\r\n    }\r\n    const start_press_count = ()=>{\r\n        const start_new = Date.now();\r\n        set(\"hotkey_start\", start_new)\r\n        set(\"hotkey_timer_started\", true)\r\n    }\r\n    const handleKeyDown = (evt) => {\r\n        if (currentKeysDown.includes(evt.key))\r\n            return\r\n        if (evt.key.charAt(0)=='F')\r\n            return\r\n        let newArr = currentKeysDown.concat([evt.key])\r\n        set(\"currentKeysDown\",newArr)\r\n        let newState = handleKeyPress(newArr, state)\r\n        if (newState != false){\r\n            if (!hotkey_timer_started)\r\n             start_press_count()\r\n            set_presses_per_minute()\r\n            if (newState.completed)\r\n                set(\"show_completed_hotkey\", true)\r\n            else {\r\n            set('markerPosition', newState.markerPosition)\r\n            set('marker_paragraph', newState.marker_paragraph)\r\n            set('marker_line', newState.marker_line)\r\n            set('cursorPosition',newState.cursorPosition)\r\n            set('cursor_paragraph',newState.cursor_paragraph)\r\n            set('cursor_line',newState.cursor_line)\r\n            set('requiredShortcut',newState.requiredShortcut)\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    const handleKeyUp = (evt) => {\r\n        let newArr = Array.from(currentKeysDown.filter(key => key!=evt.key))\r\n        set(\"currentKeysDown\", newArr);\r\n    }\r\n\r\n\r\n    useEffect(() => {if (!windowLoaded){\r\n        setTypingCursorClassChange(); \r\n        set(\"windowLoaded\", true)\r\n    }});\r\n\r\n    // by hiding components instead of unmounting we will keep thes states saved\r\n    let showLessons = mode == 'LEARN'\r\n    let showChallenge = mode == 'PRACTICE'\r\n    let showTypeRacing = mode == 'TYPE_RACING'\r\n\r\n    return (\r\n        <div className='horizontal-holder-sl' style={{'grid-template-columns': \"19% 62% 19%\"}} onKeyDown={handleKeyDown} onKeyUp={handleKeyUp} tabIndex=\"0\">\r\n\r\n\r\n            <div className='left-panel'>\r\n                <div className='' style={{height:'95%'}} >\r\n                <SelectMode/>\r\n                    <div style={getDisplayOption(showLessons)} >  <Lessons /></div>\r\n                     <div style={getDisplayOption(showChallenge)} > <Practice /></div>\r\n                     <div style={getDisplayOption(showTypeRacing)} >  <Race /> </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div id='panel-container' >\r\n                <div/>\r\n\r\n                <div className='tiles-section' style={{alignItems: showTypeRacing? 'baseline': 'center',}}>\r\n                    <div style={getDisplayOption2(showLessons)} > {lesson_type == \"TYPING\"?  <TypingPanel /> : <HotkeyPanel/> }</div>\r\n                    <div style={getDisplayOption2(showChallenge)} > <ChallengePanel /></div>\r\n            \r\n                    <div style={getDisplayOption(showTypeRacing)} > <RacePanel /></div>\r\n                </div>\r\n                <div/>\r\n            </div>\r\n\r\n               <RightPanel/>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./scss/styles.scss\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.scss';\nimport Store from \"./Store\";\nimport { Header } from \"./components/Header\";\nimport MainPage from \"./pages/MainPage\";\n\nexport const App = (props) =>\n  <Store>\n    <div className=\"App\" >\n      <Header />\n      <MainPage />\n    </div>\n  </Store>"],"sourceRoot":""}