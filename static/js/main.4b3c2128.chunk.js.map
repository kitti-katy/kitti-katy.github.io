{"version":3,"sources":["components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","utilities/HSLPaletteGenerator.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","components/ExportJSONButton.js","components/ResetColorsButton.js","components/ClipboardCopier.js","components/SelectedColorPanel.js","redux/HSLModeReducer.js","pages/color-generation/HSL/components/SelectMode/SelectMode.js","pages/color-generation/HSL/components/HSLFilters.js","redux/HSLBasicReducer.js","pages/color-generation/HSL/components/HSLBasic/Filters.js","pages/color-generation/HSL/components/HSLBasic/Tiles.js","pages/color-generation/HSL/components/HSLBasic/DisplayOrderButtons.js","components/GoldenRatio.js","styles.js","components/TryIt/TryIt.js","pages/color-generation/HSL/components/HSLBasic/HSLBasicContainer.js","pages/color-generation/HSL/components/HSLFiltersAlternative.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","firebase/context.js","firebase/Firebase.js","firebase/index.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","style","padding","margin","color","fontWeight","Component","withRouter","Color","v1","v2","v3","colorFormat","this","Object","classCallCheck","createChangedHSLColor","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","type","initial_state","baseColor","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","canvas","document","getElementById","ctx","getContext","scaledWidth","scaledHeight","setAttribute","i","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","hexValue","componentDidMount","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","onChange","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","_baseColor$hsl","id","borderColor","backgroundColor","lib","time","handler","height","width","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","size","value","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","e","target","test","_baseColor$rgb","color_picker_ColorPickerCanvas","className","html","display","verticalAlign","marginBottom","whiteSpace","class","connect","BaseColorReducer","dispatch","bindActionCreators","utilities_HSLPaletteGenerator","HSLPaletteGenerator","hueStep","satStep","lightStep","numberOfColors","_palette","Array","apply","map","el","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","l1","l2","l3","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","forEach","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","click","ExportJSONButton","tooltip","placement","title","icon","onClick","ResetColorsButton","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","text","onCopy","success","cursor","SelectedColorPanel","selectedColorFont","border","ClipboardCopier_ClipboardCopier","changeHSLMode","isAdvanced","iconStyle","marginRight","SelectMode","_this2","Palette_default","fontSize","Brush_default","Star_default","Image_default","HSLModeReducer","HSLFilters","clickedColor","componentDidUpdate","setFilters","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","handleResetButtonClick","handleExportJSON_ButtonClick","colorElements","getElementsByTagName","getSliderInput","label","slider","getSliderInputRight","textAlign","handleSelectColor","getTilesRow","rowNumber","key","getTiles","_this$state","palette","_this$state2","card","components_SelectMode_SelectMode","justifyContent","ExportJSONButton_ExportJSONButton","ResetColorsButton_ResetColorsButton","SelectedColorPanel_SelectedColorPanel","setHueSplit","SelectedColorReducer","hueSplit","setSatSplit","satSplit","setLightSplit","lightSplit","setDisplayOrder","hueDivisors","1","2","3","4","5","6","8","9","10","12","15","lightDivisors","20","satDivisors","Filters","handleHueSliderChange","handleSatSliderChange","handleLightSliderChange","_this$props","marks","step","defaultValue","HSLBasicReducer","Tiles","containerWidth","clientWidth","getPadding","getRowHolderWidth","tilesHorizontal","getPalette","selectedColorId","tilePadding","l1Width","alignItems","flexWrap","satArr","i1","lightArr","i2","lightColor","i3","isSelected","background","minWidth","minHeight","displayOrder","displayOptions","DisplayOrderButtons","selectedDisplayOption","setLevels","handleChangeOrderUpClick","next","handleChangeOrderDownClick","GoldenRatio","direction","longFirst","longChild","shortChild","isVertical","measure","maxMeasure","firstStyle","secondStyle","long","short","objectSpread","borderStyle","tryIds","texts","backgrounds","TryIt","initialState","setHoverEffects","allTryElements","getAllTryElements","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","setColor","compName","newColors","components","getTryButton","component","font","borderRadius","appBar","header","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","GoldenRatio_GoldenRatio","headStyle","lineHeight","borderRight","HSLBasicContainer","getElementsByClassName","console","log","baseColorFont","borderTop","HSLBasic_DisplayOrderButtons","HSLBasic_Tiles","components_TryIt_TryIt","HSLBasic_Filters","popover","content","components_color_picker_ColorPicker","paddingTop","paddingBottom","satLightDivisors","HSLFiltersAlternative","levels","float","HSL","handleSelectMode","bool","HSLBasic_HSLBasicContainer","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","selectedColorIndex","defineProperty","es_icon","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","generated","handleSubmit","preventDefault","img","Image","src","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","palettePieces","c","$imagePreview","onSubmit","Picture","Picture_components_PictureUpload","Community","palettes","Grid_default","container","spacing","item","xs","Card_default","Main","Switch","Route","exact","path","FirebaseContext","React","createContext","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","App","context","Consumer","firebase","href","rel","components_Header","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","render","es","BrowserRouter","Provider","src_App_0","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b3c2128.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ padding: '16px 12px 16px 24px' }}>\r\n        <h2 style={{ margin: '0', color: 'rgb(33, 33, 33)', fontWeight: '600' }}>Awesome Color Palette Generator</h2>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#edb407', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", drawHueCanvas);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Card, Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div id=\"color-picker\">\r\n        <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n        <div id=\"color-inputs-container\">\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n            <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n            <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n          </div>\r\n\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n            <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n            <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n            <div className=\"input-boxes\" >\r\n              <div>\r\n                <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                <input id='hex-intput-txt-box' class=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL').HEXString\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#edb407', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\n\r\nexport const  ExportJSONButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Export JSON\"}>\r\n        <Icon icon=\"export\" className=\"export-json-btn\" onClick={props.onClick} />\r\n    </Tooltip>","import React from \"react\";\r\nimport { Tooltip } from 'antd'\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const ResetColorsButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Reset\"}>\r\n        <Icon icon=\"repeat\" className=\"reset-btn\" onClick={props.onClick} />\r\n    </Tooltip>\r\n","import React from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {message,   } from 'antd';\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n   <Icon id=\"copy-to-clipboard-icon\" icon=\"duplicate\" style={{cursor:'pointer', verticalAlign: 'bottom'}} />\r\n  </CopyToClipboard>\r\n \r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from './ClipboardCopier'\r\nimport Color from \"../utilities/Color\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    let selectedColor = props.selectedColor\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 30 ? '#182026' : '#D8E1E8'\r\n\r\n    return (\r\n        <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont, border: '1px solid ' + selectedColorFont }}>\r\n            <label>{selectedColor} <ClipboardCopier value={selectedColor} /> </label>\r\n        </div>)\r\n}\r\n","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeHSLMode } from '../../../../../redux/HSLModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport './SelectMode.css'\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAdvanced: state.HSLModeReducer.isAdvanced\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeHSLMode: changeHSLMode }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    navigateTo = (link) => this.props.history.push(link);\r\n    render() {\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} ><PaletteIcon style={iconStyle} fontSize=\"small\"/> BASIC </div>\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} ><BrushIcon style={iconStyle} fontSize=\"small\"/> ADVANCED </div>\r\n                <div onClick={() => this.navigateTo('/generate/custom')}><StarIcon style={iconStyle} fontSize=\"small\"/> CUSTOM </div>\r\n                <div onClick={() => this.navigateTo('/generate/picture')}><ImageIcon style={iconStyle} fontSize=\"small\"/> FROM PICTURE </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport HSLPaletteGenerator from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { getChunks } from \"../../../../utilities/ArrayMethods\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Icon, Slider, Select, Tooltip } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport './HSLFilters.css'\r\nimport './HSLFiltersCommon.css'\r\nimport SelectMode from \"./SelectMode/SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{textAlign:'right'}}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\" >\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* HSL FILTERS */}\r\n          <div className='bottom-bordered hsl-advanced-filters'>\r\n            {/* Changes */}\r\n            <div >\r\n              {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n              {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n              {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div>\r\n              {this.getSliderInput(hueStep, this.handleHueStepChange, 1, 100, 'Hue Step')}\r\n              {this.getSliderInput(satStep, this.handleSatStepChange, 1, 100, 'Saturation Step')}\r\n              {this.getSliderInput(lightStep, this.handleLightStepChange, 1, 100, 'Light Step')}\r\n            </div>\r\n          </div>\r\n\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div className=\"vertical-padding bottom-bordered\" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: \"12px\" }}>\r\n            {/* Number Of Colors */}\r\n            <div id='number-of-colors-input'> {this.getSliderInput(numberOfColors, this.handleNumberOfColorsChange, 6, 181, 'Number of Colors')} </div>\r\n\r\n            <div className=\" hsl-container-2\" style={{ marginBottom: \"0\", padding: \"0\" }}>\r\n              {/* ExportJSON */}\r\n              < ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n              {/* Reset */}\r\n              <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n              {/* Selected Color Panel */}\r\n              <SelectedColorPanel selectedColor={selectedColor} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 8, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action. hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Slider } from 'antd';\r\nimport '../HSLFiltersAlternative.css'\r\nimport '../HSLFiltersCommon.css'\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\nimport { setHueSplit, setSatSplit, setLightSplit } from '../../../../../redux/HSLBasicReducer'\r\n\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setHueSplit: setHueSplit, setSatSplit: setSatSplit, setLightSplit: setLightSplit }, dispatch) }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit\r\n    }\r\n}\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15' } //, 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst lightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\nconst satDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10' }\r\nconst hueMax = 15\r\nconst satMax = 10\r\nconst lightMax = 20\r\n\r\nclass Filters extends Component {\r\n    // FILTER HANDLERS\r\n    handleHueSliderChange = value => this.props.setHueSplit(value)\r\n    handleSatSliderChange = value => this.props.setSatSplit(value)\r\n    handleLightSliderChange = value => this.props.setLightSplit(value)\r\n\r\n    render() {\r\n        const { hueSplit, satSplit, lightSplit } = this.props\r\n        return (\r\n            <div id='hsl-container-1' style={{ margin: 'auto', width: '62%' }}>\r\n                <div>\r\n                    <Label className=\"slider-label\">Hues</Label>\r\n                    <Slider marks={hueDivisors} step={null} defaultValue={hueSplit} max={hueMax} min={1} onChange={this.handleHueSliderChange} />\r\n                </div>\r\n                {/* Light */}\r\n                <div>\r\n                    <Label className=\"slider-label\">Lights</Label>\r\n                    <Slider marks={lightDivisors} step={null} defaultValue={satSplit} max={lightMax} min={1} onChange={this.handleLightSliderChange} />\r\n                </div>\r\n                {/* Saturation */}\r\n                <div>\r\n                    <Label className=\"slider-label\" >Saturations</Label>\r\n                    <Slider marks={satDivisors} step={null} defaultValue={lightSplit} max={satMax} min={1} onChange={this.handleSatSliderChange} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../../../../redux/SelectedColorReducer'\r\nimport { Card, Icon } from \"@blueprintjs/core\";\r\nimport { getAdvancedPalette } from \"../../../../../utilities/HSLPaletteGenerator\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit,\r\n        displayOrder: state.HSLBasicReducer.displayOrder,\r\n        l1: state.HSLBasicReducer.l1,\r\n        l2: state.HSLBasicReducer.l2,\r\n        l3: state.HSLBasicReducer.l3\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass Tiles extends Component {\r\n    state = { containerWidth: 0 }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ containerWidth: document.getElementById('palette-container').clientWidth })\r\n    }\r\n    getPadding = (palette) => {\r\n        let width = palette.length\r\n        let innerWidth = palette[0][0].length\r\n        let containerWidth = this.state.containerWidth\r\n        let padding = 95 / (innerWidth * 2)\r\n        return Math.floor(padding) - 0.1\r\n    }\r\n    getRowHolderWidth = (palette) => {\r\n        let width = palette.length\r\n        let innerWidth = palette[0][0].length\r\n        let tilesHorizontal = innerWidth * width\r\n        let scaler = tilesHorizontal <= 1 ? 0.125 :\r\n            tilesHorizontal <= 2 ? 0.25 :\r\n                tilesHorizontal <= 4 ? 0.5 :\r\n                    tilesHorizontal < 40 ? 1 :\r\n                        tilesHorizontal < 100 ? 2 :\r\n                            tilesHorizontal < 120 ? 3 :\r\n                                tilesHorizontal < 140 ? 4 : 5\r\n        return (100 / width) * scaler + '%'\r\n    }\r\n    getPalette = () => {\r\n        let { baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3 } = this.props\r\n        let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3, 0, 0)\r\n        return palette\r\n    }\r\n\r\n    // TILES PART\r\n    handleSelectColor = (hex, selectedColorId) => {\r\n        this.setState({ selectedColorId })\r\n        this.props.selectColor(hex)\r\n    }\r\n\r\n\r\n    render() {\r\n        let palette = this.getPalette()\r\n        let selectedColor = this.props.selected\r\n\r\n        let tilePadding = this.getPadding(palette)\r\n        let l1Width = this.getRowHolderWidth(palette)\r\n        //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div class=\"tiles-holder generated-tiles\" style={{ width: '62%', margin: 'auto' }} >\r\n                <div style={{ height: '100%', width: '100%', alignItems: 'center', display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                    {palette.map((satArr, i1) =>\r\n                        <table className=\"level-1-holder\" key={i1 + \"l1\"} style={{ width: l1Width }}>\r\n\r\n                            {satArr.map((lightArr, i2) =>\r\n                                <tr key={i2 + \"l2\"}>\r\n                                    {lightArr.map((lightColor, i3) => {\r\n                                        let color = lightColor.HEXString\r\n                                        let isSelected = selectedColor == color\r\n                                        return <td key={i1 + '' + i2 + '' + i3 + color} id={color}\r\n                                            className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                            style={{\r\n                                                background: color, padding: tilePadding + '%', minWidth: tilePadding + '%', minHeight: tilePadding + '%',\r\n                                                border: 'none'\r\n                                            }}\r\n                                            onClick={() => this.handleSelectColor(color, color)} />\r\n                                    }\r\n                                    )}\r\n                                </tr>\r\n                            )}\r\n                        </table >)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tiles);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayOrder } from '../../../../../redux/HSLBasicReducer'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setDisplayOrder: setDisplayOrder }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\n\r\nclass DisplayOrderButtons extends Component {\r\n    state = { selectedDisplayOption: 0 };\r\n\r\n    setLevels = (i) => this.props.setDisplayOrder(displayOptions[i][0], displayOptions[i][1], displayOptions[i][2])\r\n\r\n    handleChangeOrderUpClick = () => {\r\n        let next = this.state.selectedDisplayOption + 1\r\n        next = next == displayOptions.length ? 0 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n    handleChangeOrderDownClick = () => {\r\n        let next = this.state.selectedDisplayOption - 1\r\n        next = next == -1 ? displayOptions.length - 1 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Change Order Up */}\r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    <Icon icon=\"arrow-up\" className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n                </Tooltip>\r\n                {/* Change Order Down*/}\r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    <Icon icon=\"arrow-down\" className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n                </Tooltip>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DisplayOrderButtons);\r\n","\r\nimport React from \"react\";\r\n\r\nexport const GoldenRatio = (props) => {\r\n    // direction: vertical or horizontal\r\n    // longFirst : true\r\n    // long\r\n    // short\r\n    const { direction, longFirst, longChild, shortChild } = props\r\n\r\n    // styling\r\n    let isVertical = direction == 'vertical'\r\n    let measure = isVertical ? 'height' : 'width'\r\n    let maxMeasure = !isVertical ? 'height' : 'width'\r\n    let firstStyle = {}, secondStyle = {}\r\n    firstStyle[measure] = longFirst ? '62%' : '38%'\r\n    secondStyle[measure] = longFirst ? '38%' : '62%'\r\n    firstStyle[maxMeasure] = '-webkit-fill-available'\r\n    secondStyle[maxMeasure] = '-webkit-fill-available'\r\n    if (!isVertical) {\r\n        firstStyle.display = 'inline-block'\r\n        secondStyle.display = 'inline-block'\r\n        firstStyle.verticalAlign = 'top'\r\n        secondStyle.verticalAlign = 'top'\r\n    }\r\n\r\n\r\n    // apply styling\r\n    let long = <div style={longFirst ? firstStyle : secondStyle}>{longChild}</div>\r\n    let short = <div style={longFirst ? secondStyle : firstStyle}>{shortChild}</div>\r\n\r\n    return (\r\n        <div style={{ display: direction == 'vertical' ? 'inline-table' : 'inherit', height: '-webkit-fill-available', width: '100%', ...props.style }}>\r\n            {longFirst ? long : short}\r\n            {longFirst ? short : long}\r\n        </div>\r\n    )\r\n}","export const borderStyle = '1px solid rgb(224, 224, 224)'","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport \"./TryIt.css\"\r\nimport { GoldenRatio } from \"../GoldenRatio\";\r\nimport { borderStyle } from '../../styles'\r\nimport { Tooltip } from 'antd'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                background: '#f9fafb',\r\n                primaryButton: '#ffffff',\r\n                secondaryButton: '#ffffff',\r\n                successButton: '#ffffff',\r\n                warningButton: '#ffffff',\r\n                dangerButton: '#ffffff',\r\n                infoButton: '#ffffff',\r\n\r\n                title: '#8c9db5',\r\n                header: '#8c9db5',\r\n                primaryButtonFont: '#8c9db5',\r\n                secondaryButtonFont: '#8c9db5',\r\n                successButtonFont: '#8c9db5',\r\n                dangerButtonFont: '#8c9db5',\r\n                warningButtonFont: '#8c9db5',\r\n                infoButtonFont: '#8c9db5',\r\n                paragraph: '#8c9db5',\r\n            }\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) => {\r\n\r\n        return (\r\n            <button\r\n                onClick={(e) => this.setColor(e, component)} id={id} style={{\r\n                    backgroundColor: background, color: font, marginRight: '16px', border: '1px solid ' + font + '80', fontSize: '0.8em',\r\n                    padding: '8px', borderRadius: '4px'\r\n                }}>\r\n                <div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div></button>)\r\n    }\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n\r\n        return (\r\n            <div style={{ width: '100%', background: 'white', height: '100%', border: borderStyle }} >\r\n                <GoldenRatio\r\n                    direction=\"horizontal\"\r\n                    longFirst={true}\r\n                    shortChild={\r\n                        <div className=\"try-colors-container\">\r\n                            <div className=\"try-card-holder\">\r\n\r\n                                <div id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                                    style={{ backgroundColor: background }} headStyle={{ backgroundColor: appBar }} >\r\n                                    <h3 className=\"try-title-holder\" style={{ color: title }}>\r\n                                        <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Apply Selected Color Here </span>\r\n                                    </h3>\r\n\r\n                                    <h4 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h4>\r\n                                    <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, lineHeight: '1.7' }}>\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                                         Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                    </p>\r\n                                    <br />\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                                        {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                                    </div>\r\n                                    <br />\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                                        {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                                        {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                                        {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                                    </div>\r\n                                </div >\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    }\r\n                    longChild={\r\n                        <div style={{ direction: 'rtl', padding: '24px', borderRight: '2px dashed rgb(202, 210, 221)', height: '100%' }}>\r\n                            <h3 style={{ color: 'rgb(97, 97, 97)' }}>\r\n                                <Tooltip placement=\"top\" title={\"Reset Applied Colors\"}>\r\n                                    <Icon icon=\"repeat\" onClick={this.reset} style={{ cursor: 'pointer' }} />\r\n                                </Tooltip>\r\n                                <ExportJSONButton onClick={() => exportJSON(components)} /></h3>\r\n                            <br /> <br />\r\n                            <h4> Backgrounds </h4>\r\n\r\n                            <div className=\"applied-colors-container\">\r\n                                {backgrounds.map(key =>\r\n                                    <div className=\"applied-color\"\r\n                                        style={{\r\n                                            backgroundColor: components[key],\r\n                                            color: new Color(components[key], 0, 0, 'Hex').hsl.light > 50 ? 'rgb(36, 44, 56)' : 'white',\r\n                                            border: new Color(components[key], 0, 0, 'Hex').hsl.light > 50 ? '1px solid rgb(202, 210, 221)' : ''\r\n                                        }}>\r\n                                        {components[key]}\r\n                                    </div>)}\r\n                            </div>\r\n                            <br /><br />\r\n                            <h4> Texts </h4>\r\n\r\n                            <div className=\"applied-colors-container\">\r\n                                {texts.map(key =>\r\n                                    <div className=\"applied-color\"\r\n                                        style={{ backgroundColor: components[key], color: new Color(components[key], 0, 0, 'Hex').hsl.light > 50 ? 'rgb(36, 44, 56)' : 'white' }}>\r\n                                        {components[key]}\r\n                                    </div>)}\r\n                            </div>\r\n\r\n                        </div>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filters from './Filters'\r\nimport Tiles from './Tiles'\r\nimport DisplayOrderButtons from './DisplayOrderButtons'\r\nimport { ExportJSONButton } from '../../../../../components/ExportJSONButton'\r\nimport { exportJSON } from '../../../../../utilities/ExportJSON'\r\nimport { SelectedColorPanel } from '../../../../../components/SelectedColorPanel'\r\nimport '../HSLFiltersAlternative.css'\r\nimport '../HSLFiltersCommon.css'\r\nimport SelectMode from \"../SelectMode/SelectMode\"\r\nimport ColorPicker from \"../../../../../components/color-picker/ColorPicker\";\r\nimport TryIt from \"../../../../../components/TryIt/TryIt\";\r\nimport { GoldenRatio } from \"../../../../../components/GoldenRatio\";\r\nimport { borderStyle } from '../../../../../styles'\r\nimport { Popover } from 'antd';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass HSLBasicContainer extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    render() {\r\n        console.log(this.props.baseColor)\r\n        let baseColorFont = this.props.baseColor.hsl.light > 60 ? 'rgb(33,33,33)' : 'white'\r\n        console.log(baseColorFont)\r\n        return (\r\n            <GoldenRatio\r\n                direction=\"horizontal\"\r\n                longFirst={true}\r\n                longChild={\r\n                    <GoldenRatio direction=\"vertical\" longFirst={true}\r\n                        longChild={\r\n                            <div style={{\r\n                                background: 'white', borderRight: borderStyle,\r\n                                borderTop: borderStyle, height: '100%'\r\n                            }} id='palette-container'>\r\n                                <div className=\" hsl-container-2 \" >\r\n                                    <DisplayOrderButtons />\r\n                                    <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n                                    <SelectedColorPanel selectedColor={this.props.selected} />\r\n                                </div>\r\n                                <Tiles />\r\n                            </div>}\r\n                        shortChild={<TryIt />}\r\n                    />\r\n                }\r\n\r\n                shortChild={\r\n                    <div style={{ background: 'white', borderTop: borderStyle, height: 'inherit' }}>\r\n                        <SelectMode />\r\n                        <div style={{height: '100%'}}>\r\n                            <GoldenRatio direction=\"vertical\" longFirst={false}\r\n                                shortChild={<Filters />}\r\n                                longChild={\r\n                                    <div>\r\n                                        <br />\r\n\r\n                                        <br />\r\n                                        <Popover content={<ColorPicker />} placement=\"bottom\">\r\n                                            <div style={{ background: this.props.baseColor.HEXString, width: '62%', margin: 'auto' }} id='base-color-select-container'>\r\n                                                <h3 style={{ textAlign: 'center', margin: 'auto', paddingTop: '1em', paddingBottom: '1em', color: baseColorFont }}>SELECT BASE COLOR</h3>\r\n                                            </div>\r\n                                        </Popover>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </ div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSLBasicContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { getAdvancedPalette } from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Slider, Tooltip } from 'antd';\r\nimport './HSLFiltersAlternative.css'\r\nimport './HSLFiltersCommon.css'\r\nimport SelectMode from \"./SelectMode/SelectMode\"\r\nimport { Card, Label, Icon } from \"@blueprintjs/core\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15'} //, 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst satLightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\nconst hueMax = 15\r\n\r\nclass HSLFiltersAlternative extends Component {\r\n  state = {\r\n    hueSplitter: 8, satSplitter: 1, lightSplitter: 5,\r\n    selectedDisplayOption: 0,\r\n    selectedColorId: ''\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  getPalette = () => {\r\n    let { hueSplitter, satSplitter, lightSplitter, selectedDisplayOption } = this.state\r\n    let levels = displayOptions[selectedDisplayOption]\r\n    let palette = getAdvancedPalette(this.props.baseColor, hueSplitter, satSplitter, lightSplitter, levels[0], levels[1], levels[2], 0, 0)\r\n    return palette\r\n  }\r\n\r\n  // FILTER HANDLERS\r\n  handleHueSliderChange = value => this.setState({ hueSplitter: value })\r\n  handleSatSliderChange = value => this.setState({ satSplitter: value })\r\n  handleLightSliderChange = value => this.setState({ lightSplitter: value })\r\n\r\n  // EXPORT JSON HANDLER\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, selectedColorId) => {\r\n    this.setState({ selectedColorId })\r\n    this.props.selectColor(hex)\r\n  }\r\n\r\n  handleChangeOrderUpClick = () => {\r\n    let next = this.state.selectedDisplayOption + 1\r\n    next = next == displayOptions.length ? 0 : next\r\n    this.setState({ selectedDisplayOption: next })\r\n  }\r\n  handleChangeOrderDownClick = () => {\r\n    let next = this.state.selectedDisplayOption - 1\r\n    next = next == -1 ? displayOptions.length-1 : next\r\n    this.setState({ selectedDisplayOption: next })\r\n  }\r\n\r\n  render() {\r\n    let palette = this.getPalette()\r\n\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    \r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\">\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* CHANGE FILTERS */}\r\n          {/* Hue */}\r\n          <div id='hsl-container-1'>\r\n            <Label className=\"slider-label\">Number Of Hues</Label>\r\n            <Slider marks={hueDivisors} step={null} defaultValue={12} max={hueMax} min={1} onChange={this.handleHueSliderChange} />\r\n\r\n            <div style={{ marginTop: '44px' }}>\r\n              {/* Light */}\r\n              <div style={{ float: 'right', width: '45%' }}>\r\n                <Label className=\"slider-label\">Number Of Lights</Label>\r\n                <Slider marks={satLightDivisors} step={null} defaultValue={5} max={20} min={1} onChange={this.handleLightSliderChange} />\r\n              </div>\r\n              {/* Saturation */}\r\n              <div style={{ width: '45%' }}>\r\n                <Label className=\"slider-label\" >Number Of Saturations</Label>\r\n                <Slider marks={satLightDivisors} step={null} defaultValue={1} max={20} min={1} onChange={this.handleSatSliderChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/*} <div className=\"vertical-padding bottom-bordered\"></div>*/}\r\n\r\n          {/* SELECTED COLOR VALUE, EXPORT JSON */}\r\n          <div className=\" hsl-container-2 bottom-bordered top-bordered\">\r\n            {/* Change Order Up */}\r\n            <Icon icon=\"arrow-up\" className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n            {/* Change Order Down*/}\r\n            <Icon icon=\"arrow-down\" className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n            {/* ExportJSON */}\r\n            <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n            {/* Selected Color Panel */}\r\n            <SelectedColorPanel selectedColor={selectedColor} />\r\n          </div>\r\n\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"bottom-bordered tiles-holder generated-tiles\">\r\n            {palette.map((satArr, i1) =>\r\n              <div className=\"level-1-holder\" key={i1 + \"l1\"}>\r\n                {satArr.map((lightArr, i2) =>\r\n                  <div style={{ display: 'block' }} key={i2 + \"l2\"}>\r\n                    {lightArr.map((lightColor, i3) => {\r\n                      let color = lightColor.HEXString\r\n                      let isSelected = this.state.selectedColorId == color\r\n                      return <div key={i3 + color} id={color}\r\n                        className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')} style={{ background: color }}\r\n                        onClick={() => this.handleSelectColor(color, color)} />\r\n                    }\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>)}\r\n          </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFiltersAlternative);\r\n\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport HSLBasicContainer from \"./components/HSLBasic/HSLBasicContainer\";\r\nimport HSLFiltersAlternative from \"./components/HSLFiltersAlternative\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { Select } from 'antd';\r\nimport { TabMenu } from 'primereact/tabmenu';\r\nimport \"./HSL.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAdvanced: state.HSLModeReducer.isAdvanced\r\n  }\r\n}\r\nclass HSL extends Component {\r\n  state = {\r\n    isAdvanced: false\r\n  }\r\n  handleSelectMode = (bool) => { this.setState({ isAdvanced: bool }) }\r\n  render() {\r\n    return (<HSLBasicContainer />);\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSL);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Icon, Tooltip } from 'antd'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\n\r\nimport '../../../../Common.css'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0 };\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    handleExportJSON_ButtonClick = () => exportJSON(this.state.colors)\r\n    handleResetButtonClick = () => { this.setState({ colors: [this.props.baseColor.HEXString], clickedColor: 0 }) }\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        let selectedColorFont = new Color(baseColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div style={{ width: '400px', width: '41vw' }} className=\"element-holder\">\r\n\r\n                <div className=\" hsl-container-2 bottom-bordered top-bordered\" style={{}}>\r\n                    {/* ExportJSON */}\r\n                    < ExportJSONButton onClick={this.exportJSON} />\r\n                    {/* Reset */}\r\n                    <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n                    {/* Selected Color Panel */}\r\n                    <SelectedColorPanel selectedColor={baseColor} />\r\n                </div>\r\n\r\n                <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.colors.map((color, index) =>\r\n                        <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                        className={\"single-tile \" + (selectedColorIndex == index ? 'selected-tile' : '')}\r\n                            style={{\r\n                                backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                padding: '30px', display: 'block'\r\n                            }} />)\r\n                    }\r\n                    <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)}\r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign: 'center', borderRadius: '50%' }} >\r\n                        <Icon type=\"plus\" style={{ fontSize: '24px', padding: '20px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ColorPicker />\r\n        <GeneratedColors />\r\n        <TryIt selectedColor={this.props.baseColor.HEXString} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from \"../../../../redux/SelectedColorReducer\";\r\nimport { changeBaseColor } from \"../../../../redux/BaseColorReducer\";\r\nimport { exportJSON } from \"../../../../utilities/ExportJSON\";\r\nimport \"./PictureUpload.css\"\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch);\r\n};\r\n\r\nclass PictureUpload extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n    let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n    // By Hue Version\r\n    let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n    let arr12Colors = [];\r\n    let arr24Colors1 = [];\r\n    let arr48Colors1 = [];\r\n    let arr72Colors1 = [];\r\n    pushVersion1Function(arr12Colors, 12);\r\n    pushVersion1Function(arr24Colors1, 24);\r\n    pushVersion1Function(arr48Colors1, 48);\r\n    pushVersion1Function(arr72Colors1, 72);\r\n    let version1Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      arr[bucketNumber].totalHue += hsl.hue;\r\n      arr[bucketNumber].totalSat += hsl.sat;\r\n      arr[bucketNumber].totalLight += hsl.light;\r\n      arr[bucketNumber].number += 1;\r\n    };\r\n\r\n    // By Hue and Light Version\r\n    let pushVersion2Function = (arr, n) => {\r\n      for (var i = 0; i < n; i++) {\r\n        arr.push({\r\n          light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n          dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n        });\r\n      }\r\n    };\r\n    let arr12Colors2 = [];\r\n    let arr24Colors2 = [];\r\n    let arr48Colors2 = [];\r\n    let arr72Colors2 = [];\r\n    pushVersion2Function(arr12Colors2, 12);\r\n    pushVersion2Function(arr24Colors2, 24);\r\n    pushVersion2Function(arr48Colors2, 48);\r\n    pushVersion2Function(arr72Colors2, 72);\r\n    let version2Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n      bucket.totalHue += hsl.hue;\r\n      bucket.totalSat += hsl.sat;\r\n      bucket.totalLight += hsl.light;\r\n      bucket.number += 1;\r\n    };\r\n\r\n    for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n      let r = pixelArray[i];\r\n      let g = pixelArray[i + 1];\r\n      let b = pixelArray[i + 2];\r\n      let hsl = RGBtoHSL(r, g, b);\r\n      // By Hue Version\r\n      version1Function(hsl, arr12Colors, 30);\r\n      version1Function(hsl, arr24Colors1, 15);\r\n      version1Function(hsl, arr48Colors1, 7.5);\r\n      version1Function(hsl, arr72Colors1, 5);\r\n\r\n      // By Hue and Light Version\r\n      version2Function(hsl, arr12Colors2, 30);\r\n      version2Function(hsl, arr24Colors2, 15);\r\n      version2Function(hsl, arr48Colors2, 7.5);\r\n      version2Function(hsl, arr72Colors2, 5);\r\n    }\r\n\r\n    // By Hue Version\r\n    let extractColorsFunction = obj => \"hsl(\" + obj.totalHue / obj.number + \", \" + obj.totalSat / obj.number + \"%, \" + obj.totalLight / obj.number + \"% )\";\r\n    let palette1 = arr12Colors.map(extractColorsFunction);\r\n    let palette2 = arr24Colors1.map(extractColorsFunction);\r\n    let palette3 = arr48Colors1.map(extractColorsFunction);\r\n    let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n    // By Hue and Light Version\r\n    let extractColorsFunction2 = arr => {\r\n      //looks better when dark goes first\r\n      let darkLightArr = arr.map(obj => {\r\n        let light = obj.light;\r\n        let lightStr = \"hsl(\" + light.totalHue / light.number + \", \" + light.totalSat / light.number + \"%, \" + light.totalLight / light.number + \"% )\";\r\n        let dark = obj.dark;\r\n        let darkStr = \"hsl(\" + dark.totalHue / dark.number + \", \" + dark.totalSat / dark.number + \"%, \" + dark.totalLight / dark.number + \"% )\";\r\n        return { dark: darkStr, light: lightStr };\r\n      });\r\n      let darks = darkLightArr.map(obj => obj.dark);\r\n      let lights = darkLightArr.map(obj => obj.light);\r\n      let palette = [];\r\n      palette = palette.concat(darks);\r\n      palette = palette.concat(lights);\r\n      return palette;\r\n    };\r\n    let palette5 = extractColorsFunction2(arr12Colors2);\r\n    let palette6 = extractColorsFunction2(arr24Colors2);\r\n    let palette7 = extractColorsFunction2(arr48Colors2);\r\n    let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n    this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) { palettePieces = palette.map(c => <div className=\"picture-single-tile\" style={{ backgroundColor: c }} />) }\r\n    return palettePieces;\r\n  };\r\n\r\n  render() {\r\n    const { palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8 } = this.state\r\n\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) { $imagePreview = (<img id=\"uploaded-image\" src={imagePreviewUrl} style={{ width: \"400px\" }} />); }\r\n    else { $imagePreview = <span />; }\r\n\r\n    return (\r\n      <div className=\"previewComponent element-holder\">\r\n        <div style={{ display: \"inline-block\", verticalAlign: 'top' }}>\r\n          <h2>Please select an Image for Preview</h2>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={e => this.handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={e => this.handleSubmit(e)}> Generate Palette </button>\r\n          </form>\r\n          <br />\r\n          <div className=\"imgPreview\"> {$imagePreview} </div>\r\n          <canvas id=\"canv\" />\r\n        </div>\r\n        {this.state.generated && (\r\n          <div id=\"generated-palettes-holder\">\r\n            <h3> Version 1 (12, by Hue) </h3> <div> {this.getTiles(palette1)} </div>\r\n            <h3> Version 2 (24, by Hue) </h3> <div> {this.getTiles(palette2)} </div>\r\n            <h3> Version 3 (48, by Hue) </h3> <div> {this.getTiles(palette3)} </div>\r\n            <h3> Version 4 (72, by Hue) </h3> <div> {this.getTiles(palette4)} </div>\r\n            <h3> Version 5 (12, by Hue and Light) </h3> <div> {this.getTiles(palette5)} </div>\r\n            <h3> Version 6 (24, by Hue and Light) </h3> <div> {this.getTiles(palette6)} </div>\r\n            <h3> Version 7 (48, by Hue and Light) </h3> <div> {this.getTiles(palette7)} </div>\r\n            <h3> Version 8 (72, by Hue and Light) </h3> <div> {this.getTiles(palette8)} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nimport \"./Picture.css\"\r\n\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picture-page\">\r\n        <PictureUpload /><TryIt />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\nimport \"../Common.css\"\r\nexport const Main = () => (\r\n  <main className=\"main-holder\">\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n\r\n};\r\nclass Firebase {\r\n    constructor() { app.initializeApp(config);}\r\n    // *** Auth API ***\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\nimport { FirebaseContext } from './firebase';\nimport { GoldenRatio } from \"./components/GoldenRatio\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => {\n          return <div className=\"App\" >\n            <link href=\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900\" rel=\"stylesheet\" />\n            <Header firebase={firebase} />\n            <div style={{ height: '-webkit-fill-available;' }}>\n              <Main />\n            </div>\n          </div>\n        }}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; \nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\n\n\nimport Firebase, { FirebaseContext } from './firebase';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}