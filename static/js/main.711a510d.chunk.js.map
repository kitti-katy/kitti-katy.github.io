{"version":3,"sources":["components/Header.js","redux/HSLBasicReducer.js","utilities/Color.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","components/SelectBaseColorButton.js","pages/color-generation/HSL-basic/Filters.js","redux/SelectedColorReducer.js","utilities/HSLPaletteGenerator.js","utilities/BlindConversion.js","pages/color-generation/HSL-basic/Tiles.js","pages/color-generation/DisplayOrderButtons.js","components/ExportJSONButton.js","utilities/ExportJSON.js","redux/HSLModeReducer.js","pages/color-generation/SelectMode/SelectMode.js","components/TryIt/TryItGradient.js","components/TryIt/TryIt.js","components/ClipboardCopier.js","components/SelectedColorPanel.js","components/TryIt/TryMain.js","redux/ColorBlindnessReducer.js","components/SelectBlindness.js","pages/color-generation/HSL-basic/HSLBasicContainer.js","components/ResetColorsButton.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/color-generation/HSL/components/HSLAdvanced/AdvancedHSLFilters.js","pages/color-generation/HSL/components/HSLAdvanced/HSLAdvancedContainer.js","components/Main.js","routes/FiltersRoutes.js","pages/color-generation/Generate.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","className","Component","withRouter","setHueSplit","hueSplit","type","setSatSplit","satSplit","setLightSplit","lightSplit","setDisplayOrder","l1","l2","l3","initial_state","Color","v1","v2","v3","colorFormat","this","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","baseColor","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","canvas","document","getElementById","ctx","getContext","scaledWidth","scaledHeight","setAttribute","i","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","style","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","hexValue","componentDidMount","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","onChange","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","_baseColor$hsl","id","borderColor","backgroundColor","lib","time","handler","height","width","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","size","value","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","e","target","test","_baseColor$rgb","color_picker_ColorPickerCanvas","html","display","verticalAlign","margin","marginBottom","whiteSpace","class","connect","BaseColorReducer","dispatch","bindActionCreators","SelectBaseColorButton","baseColorFont","popover","content","components_color_picker_ColorPicker","placement","background","hueDivisors","lightDivisors","satDivisors","Filters","handleHueSliderChange","index","handleSatSliderChange","handleLightSliderChange","_this$props","float","Slider_default","indexOf","step","defaultValue","components_SelectBaseColorButton","HSLBasicReducer","selectColor","selected","utilities_HSLPaletteGenerator","HSLPaletteGenerator","hueStep","satStep","lightStep","numberOfColors","_palette","Array","apply","map","el","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","forEach","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","blindnessNames","keys","None","R","G","B","Protanopia","Protanomaly","Deuteranopia","Deuteranomaly","Tritanopia","Tritanomaly","Achromatopsia","Achromatomaly","Tiles","getPadding","palette","getRowHolderWidth","outer","vertical","getPalette","handleSelectColor","selectedColorId","_this2","tilePadding","numberOfFractions","alignItems","flexWrap","justifyContent","satArr","i1","key","border","lightArr","i2","lineHeight","lightColor","i3","isSelected","blindedColor","_getConvertedColor","o","m","fu","getConvertedColor","convertToBlind","blindness","padding","onClick","SelectedColorReducer","displayOrder","ColorBlindnessReducer","displayOptions","DisplayOrderButtons","selectedDisplayOption","setLevels","handleChangeOrderUpClick","next","handleChangeOrderDownClick","ArrowUpward_default","ArrowDownward_default","ExportJSONButton","FormControl_default","minWidth","InputLabel_default","Select_default","MenuItem_default","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","click","changeHSLMode","isAdvanced","iconStyle","marginRight","SelectMode","Palette_default","fontSize","Brush_default","Star_default","Image_default","HSLModeReducer","TryItGradient","initialState","componentDidUpdate","setHoverEffects","allTryElements","getAllTryElements","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","gradientColors","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","setNumberOfColors","oldN","from","pop","setColor","colorIndex","newColors","gradientString","join","backgroundImage","gridAutoFlow","paddingTop","slider","tooltip","title","IconButton_default","CloudDownload_default","Autorenew_default","Undo_default","disabled","futureQueue","Redo_default","tryIds","texts","backgrounds","TryIt","pushCurrentHistoryToStack","setHoverEffectInPalette","hovered","historyStack","assign","components","console","log","popHistoryStack","dequeueFutureQueue","shift","initialComponentsState","compName","getTryButton","component","font","text","appBar","header","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","borderRadius","name","bg_color","onMouseOver","objectSpread","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","onCopy","success","cursor","children","SelectedColorPanel","selectedColorFont","ClipboardCopier_ClipboardCopier","switchers","label","components_TryIt_TryIt","TryIt_TryItGradient","TryMain","selectedTryIndex","switchNext","switchPrevious","setSelected","tryComponent","option","setBlindness","blindnessType","SelectBlindness","handleChange","htmlFor","React","HSLBasicContainer","handleExportJSON_ButtonClick","colorElements","getElementsByClassName","components_SelectBlindness","ExportJSONButton_ExportJSONButton","color_generation_DisplayOrderButtons","SelectedColorPanel_SelectedColorPanel","HSL_basic_Tiles","color_generation_SelectMode_SelectMode","HSL_basic_Filters","TryIt_TryMain","ResetColorsButton","icon_icon","icon","GeneratedColors","clickedColor","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","handleResetButtonClick","selectedColorIndex","defineProperty","ResetColorsButton_ResetColorsButton","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","generated","handleSubmit","preventDefault","img","Image","src","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","_this$state","$imagePreview","onSubmit","Picture","Picture_components_PictureUpload","HSLFilters","setFilters","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","getElementsByTagName","getSliderInput","getSliderInputRight","textAlign","getTilesRow","rowNumber","_this$state2","card","HSLAdvancedContainer","AdvancedHSLFilters","Main","Switch","Route","exact","path","render","Redirect","to","FiltersRoutes","Generate","FiltersRoutes_FiltersRoutes","App","components_Header","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","es","BrowserRouter","src_App","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.711a510d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <div className='header'>\r\n        <h2>PALETTE</h2>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 1, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action.hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#81042b', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", drawHueCanvas);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Card, Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div id=\"color-picker\">\r\n        <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n        <div id=\"color-inputs-container\">\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n            <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n            <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n          </div>\r\n\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n            <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n            <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n            <div className=\"input-boxes\" >\r\n              <div>\r\n                <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                <input id='hex-intput-txt-box' class=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ColorPicker from \"./color-picker/ColorPicker\";\r\nimport { Popover } from 'antd';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass SelectBaseColorButton extends Component {\r\n\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'white'\r\n        return (\r\n            <Popover content={<ColorPicker />} placement=\"bottom\">\r\n                <div className='base-color-select-container' style={{ background: this.props.baseColor.HEXString }} >\r\n                    <h3 className='select-color-btn' style={{ color: baseColorFont }} >BASE COLOR</h3>\r\n                </div>\r\n            </Popover>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectBaseColorButton);\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n//import { Slider } from 'antd';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport '../HSLFiltersAlternative.css'\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\nimport { setHueSplit, setSatSplit, setLightSplit } from '../../../redux/HSLBasicReducer'\r\nimport SelectBaseColorButton from \"../../../components/SelectBaseColorButton\";\r\n\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setHueSplit: setHueSplit, setSatSplit: setSatSplit, setLightSplit: setLightSplit }, dispatch) }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit\r\n    }\r\n}\r\n/*\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15' } //, 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst lightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\nconst satDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10' }\r\n*/\r\n\r\nconst hueDivisors = [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15]\r\nconst lightDivisors = [1, 2, 4, 5, 10, 20]\r\nconst satDivisors = [1, 2, 4, 5, 10]\r\n\r\n//const hueMax = 15\r\n//const satMax = 10\r\n//const lightMax = 20\r\n\r\nclass Filters extends Component {\r\n    // FILTER HANDLERS\r\n    handleHueSliderChange = (e, index) => this.props.setHueSplit(hueDivisors[index])\r\n    handleSatSliderChange = (e, index) => this.props.setSatSplit(satDivisors[index])\r\n    handleLightSliderChange = (e, index) => this.props.setLightSplit(lightDivisors[index])\r\n\r\n    render() {\r\n        const { hueSplit, satSplit, lightSplit } = this.props\r\n        return (\r\n            <div>\r\n            <div id='hsl-basic-filters' >\r\n\r\n                <div>\r\n                    <Label className=\"slider-label\">Hues <span style={{ float: 'right' }}>{hueSplit}</span></Label>\r\n                    <Slider\r\n                        value={hueDivisors.indexOf(hueSplit)}\r\n                        min={0}\r\n                        max={hueDivisors.length - 1}\r\n                        step={1}\r\n                        onChange={this.handleHueSliderChange}\r\n                    />\r\n                    {/* <Slider marks={hueDivisors} step={null} defaultValue={hueSplit} max={hueMax} min={1} onChange={this.handleHueSliderChange} /> */}\r\n                </div>\r\n                {/* Saturation */}\r\n                <div>\r\n                    <Label className=\"slider-label\" >Saturations <span style={{ float: 'right' }}>{satSplit}</span></Label>\r\n                    <Slider\r\n                        value={satDivisors.indexOf(satSplit)}\r\n                        min={0}\r\n                        max={satDivisors.length - 1}\r\n                        step={1}\r\n                        onChange={this.handleSatSliderChange}\r\n                    />\r\n                    {/*  <Slider marks={satDivisors} step={null} defaultValue={lightSplit} max={satMax} min={1} onChange={this.handleSatSliderChange} /> */}\r\n                </div>\r\n                {/* Light */}\r\n                <div>\r\n                    <Label className=\"slider-label\">Lights <span style={{ float: 'right' }}>{lightSplit}</span></Label>\r\n                    <Slider\r\n                        value={lightDivisors.indexOf(lightSplit)}\r\n                        defaultValue={lightDivisors.indexOf(lightSplit)}\r\n                        min={0}\r\n                        max={lightDivisors.length - 1}\r\n                        step={1}\r\n                        onChange={this.handleLightSliderChange}\r\n                    />\r\n                    {/* <Slider marks={lightDivisors} step={null} defaultValue={satSplit} max={lightMax} min={1} onChange={this.handleLightSliderChange} /> */}\r\n                </div>\r\n                <div>\r\n                    {/*} <Label className=\"slider-label\">Base Color</Label>*/}\r\n                    <SelectBaseColorButton />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#81042b', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL').HEXString\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","// http://web.archive.org/web/20081014161121/http://www.colorjack.com/labs/colormatrix/\r\n\r\nconst blinds =\r\n{\r\n    None: { R: [100, 0, 0], G: [0, 100, 0], B: [0, 100, 0] },\r\n    Protanopia: { R: [56.667, 43.333, 0], G: [55.833, 44.167, 0], B: [0, 24.167, 75.833] },\r\n    Protanomaly: { R: [81.667, 18.333, 0], G: [33.333, 66.667, 0], B: [0, 12.5, 87.5] },\r\n    Deuteranopia: { R: [62.5, 37.5, 0], G: [70, 30, 0], B: [0, 30, 70] },\r\n    Deuteranomaly: { R: [80, 20, 0], G: [25.833, 74.167, 0], B: [0, 14.167, 85.833] },\r\n    Tritanopia: { R: [95, 5, 0], G: [0, 43.333, 56.667], B: [0, 47.5, 52.5] },\r\n    Tritanomaly: { R: [96.667, 3.333, 0], G: [0, 73.333, 26.667], B: [0, 18.333, 81.667] },\r\n    Achromatopsia: { R: [29.9, 58.7, 11.4], G: [29.9, 58.7, 11.4], B: [29.9, 58.7, 11.4] },\r\n    Achromatomaly: { R: [61.8, 32, 6.2], G: [16.3, 77.5, 6.2], B: [16.3, 32.0, 51.6] }\r\n}\r\n\r\n\r\nconst Blind = function (v) { // this function just returns the Matrix\r\n\r\n    return ({\r\n        'None': [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanopia': [0.567, 0.433, 0, 0, 0, 0.558, 0.442, 0, 0, 0, 0, 0.242, 0.758, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanomaly': [0.817, 0.183, 0, 0, 0, 0.333, 0.667, 0, 0, 0, 0, 0.125, 0.875, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranopia': [0.625, 0.375, 0, 0, 0, 0.7, 0.3, 0, 0, 0, 0, 0.3, 0.7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranomaly': [0.8, 0.2, 0, 0, 0, 0.258, 0.742, 0, 0, 0, 0, 0.142, 0.858, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanopia': [0.95, 0.05, 0, 0, 0, 0, 0.433, 0.567, 0, 0, 0, 0.475, 0.525, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanomaly': [0.967, 0.033, 0, 0, 0, 0, 0.733, 0.267, 0, 0, 0, 0.183, 0.817, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatopsia': [0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatomaly': [0.618, 0.320, 0.062, 0, 0, 0.163, 0.775, 0.062, 0, 0, 0.163, 0.320, 0.516, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\r\n    }[v]);\r\n\r\n};\r\n\r\nconst getConvertedColor = (o, m) => { // takes: RGBA object, Matrix array\r\n\r\n    function fu(n) { return (n < 0 ? 0 : (n < 255 ? n : 255)); }\r\n\r\n    var r = ((o.r * m[0]) + (o.g * m[1]) + (o.b * m[2]) + (1 * m[3]) + m[4]);\r\n    var g = ((o.r * m[5]) + (o.g * m[6]) + (o.b * m[7]) + (1 * m[8]) + m[9]);\r\n    var b = ((o.r * m[10]) + (o.g * m[11]) + (o.b * m[12]) + (1 * m[13]) + m[14]);\r\n    var a = ((o.r * m[15]) + (o.g * m[16]) + (o.b * m[17]) + (1 * m[18]) + m[19]);\r\n\r\n    return ({ 'r': fu(r), 'g': fu(g), 'b': fu(b), 'a': fu(a) });\r\n\r\n};\r\n\r\nexport const blindnessNames = Object.keys(blinds)\r\n\r\n\r\nexport const convertToBlind = (color, type) => {\r\n    const { r, g, b, a} = getConvertedColor(color.rgb, Blind(type));\r\n    return 'rgba( ' + r + ', ' + g + ', ' + b + ', ' + a + ')'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../../redux/SelectedColorReducer'\r\nimport { getAdvancedPalette } from \"../../../utilities/HSLPaletteGenerator\";\r\nimport { convertToBlind } from \"../../../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit,\r\n        displayOrder: state.HSLBasicReducer.displayOrder,\r\n        l1: state.HSLBasicReducer.l1,\r\n        l2: state.HSLBasicReducer.l2,\r\n        l3: state.HSLBasicReducer.l3,\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\n\r\nclass Tiles extends Component {\r\n\r\n    getPadding = (palette) => {\r\n        let horizontal = palette[0][0].length\r\n        let padding = 100 / (horizontal * 2) // * by 2 because padding takes left and right parts\r\n        return padding //- 0.1\r\n    }\r\n    getRowHolderWidth = (palette) => {\r\n        let outer = palette.length\r\n        let width = palette[0][0].length\r\n        let vertical = palette[0].length\r\n\r\n        // 1\r\n        if (width == 1) {\r\n            if (vertical == 1)\r\n                return 6\r\n            if (vertical == 10)\r\n                return 12\r\n            if (vertical == 5 & outer > 6)\r\n                return 12\r\n            if (vertical > 1)\r\n                return 8\r\n        }\r\n\r\n        // 2\r\n        if (width == 2) {\r\n            if (vertical == 5 && outer == 1)\r\n                return 3\r\n            if (vertical == 5 && outer > 4 && outer < 9)\r\n                return 5\r\n            if (vertical == 5 && outer == 15)\r\n                return 8\r\n            if (vertical < 10 && outer < 9)\r\n                return 4\r\n            if (vertical < 10 && outer > 8 && outer < 12)\r\n                return 5\r\n            if (vertical < 10 && outer >= 12)\r\n                return 6\r\n            if (vertical >= 10 && outer >= 6)\r\n                return 10\r\n            if (vertical >= 10 && outer < 6)\r\n                return 5\r\n        }\r\n\r\n        // 4\r\n        if (width == 4) {\r\n            if (vertical == 1 && outer > 1)\r\n                return 2\r\n            if (vertical == 4 && outer > 9)\r\n                return 4\r\n            if (vertical > 4 && outer == 4)\r\n                return 4\r\n\r\n            if (vertical == 5 && outer == 1)\r\n                return 2\r\n            if (vertical == 5 && outer > 7)\r\n                return 4\r\n            if (vertical == 5 && outer == 15)\r\n                return 5\r\n\r\n            if (vertical >= 10 && outer < 3)\r\n                return 3\r\n            if (vertical >= 10 && outer == 5)\r\n                return 5\r\n            if (vertical >= 10 && outer == 6)\r\n                return 6\r\n            if (vertical >= 10 && outer > 7)\r\n                return 7\r\n\r\n        }\r\n        // 5\r\n        if (width == 5) {\r\n            if (vertical == 1 && outer < 7)\r\n                return 1\r\n            if (vertical == 1 && outer > 6)\r\n                return 2\r\n            if (vertical == 2 && outer > 9)\r\n                return 3\r\n            if (vertical == 2 && outer < 9)\r\n                return 2\r\n            if (vertical == 4 && outer <= 2)\r\n                return 2\r\n            if (vertical == 4 && outer == 4)\r\n                return 2\r\n            if (vertical == 5 && outer <= 2)\r\n                return 2\r\n            if (vertical >= 10 && outer > 7)\r\n                return 6\r\n            if (outer > 9)\r\n                return 4\r\n        }\r\n\r\n        // 4 5\r\n        if (width > 3 && width < 6) {\r\n            if (vertical > 3 && outer == 3)\r\n                return 3\r\n            if (vertical == 2 && outer > 4)\r\n                return 3\r\n            if (vertical > 2 && vertical < 6 && outer > 4)// && outer < 10)\r\n                return 3\r\n            if (vertical >= 10 && outer == 1)\r\n                return 2\r\n        }\r\n\r\n        // 10 12 15\r\n        if (width >= 10 && width < 20) {\r\n            if (vertical == 1)\r\n                return 1\r\n            if (vertical == 2 && outer < 6)\r\n                return 1\r\n            if (outer == 1)\r\n                return 1\r\n            if (outer >= 2)\r\n                return 2\r\n        }\r\n        // 20\r\n        if (width == 20)\r\n            return 1\r\n\r\n        return 2\r\n    }\r\n    getPalette = () => {\r\n        let { baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3 } = this.props\r\n        let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3, 0, 0)\r\n        return palette\r\n    }\r\n\r\n    // TILES PART\r\n    handleSelectColor = (hex, selectedColorId) => {\r\n        this.setState({ selectedColorId })\r\n        this.props.selectColor(hex)\r\n    }\r\n\r\n\r\n    render() {\r\n        let palette = this.getPalette()\r\n        let selectedColor = this.props.selected\r\n        let tilePadding = this.getPadding(palette)\r\n        let numberOfFractions = this.getRowHolderWidth(palette)\r\n        //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        let wrapperStyle = {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center'\r\n\r\n            // display: 'grid', gridTemplateColumns: 'repeat(' + numberOfFractions + ', 1fr)',\r\n            // gridGap: '2px', width: '100%'\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'table', alignItems: 'center', height: '100%' }}>\r\n                <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n\r\n                    <div style={wrapperStyle}>\r\n                        {palette.map((satArr, i1) =>\r\n                            <div key={i1 + \"l1\"} style={{ border: 'solid 4px white', width: (100 / numberOfFractions) - 1 + '%' }}>\r\n\r\n                                {satArr.map((lightArr, i2) =>\r\n                                    <div key={i1 + \"-\" + i2 + \"l2\"} style={{ lineHeight: 0 }}>\r\n                                        {lightArr.map((lightColor, i3) => {\r\n                                            let color = lightColor.HEXString\r\n                                            let isSelected = selectedColor == color\r\n                                            let blindedColor = convertToBlind( lightColor, this.props.blindness)\r\n                                            return <div key={i1 + '' + i2 + '' + i3 + color} id={color}\r\n                                                className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                                style={{\r\n                                                    background: blindedColor, padding: tilePadding + '%', width: tilePadding * 2 + '%', height: tilePadding * 2 + '%',\r\n                                                    border: 'none'\r\n                                                }}\r\n                                                onClick={() => this.handleSelectColor(color, color)} />\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div >)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tiles);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayOrder } from '../../redux/HSLBasicReducer'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setDisplayOrder: setDisplayOrder }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\n\r\nclass DisplayOrderButtons extends Component {\r\n    state = { selectedDisplayOption: 0 };\r\n\r\n    setLevels = (i) => this.props.setDisplayOrder(displayOptions[i][0], displayOptions[i][1], displayOptions[i][2])\r\n\r\n    handleChangeOrderUpClick = () => {\r\n        let next = this.state.selectedDisplayOption + 1\r\n        next = next == displayOptions.length ? 0 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n    handleChangeOrderDownClick = () => {\r\n        let next = this.state.selectedDisplayOption - 1\r\n        next = next == -1 ? displayOptions.length - 1 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ArrowUpwardIcon  className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n                <ArrowDownwardIcon className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DisplayOrderButtons);\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport const ExportJSONButton = (props) => (\r\n    <FormControl style={{ minWidth: 150 }}>\r\n        <InputLabel>Export Palette</InputLabel>\r\n        <Select\r\n            onChange={props.onClick}\r\n        >\r\n            <MenuItem value={'JSON'}>JSON</MenuItem>)}\r\n                </Select>\r\n    </FormControl>\r\n)\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeHSLMode } from '../../../redux/HSLModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport './SelectMode.scss'\r\n\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAdvanced: state.HSLModeReducer.isAdvanced\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeHSLMode: changeHSLMode }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    navigateTo = (link) => this.props.history.push(link);\r\n    render() {\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                <div onClick={() => this.navigateTo('/generate/hsl-basic')} className='selected-mode'><div><PaletteIcon style={iconStyle} fontSize=\"small\" /> BASIC</div> </div>\r\n                <div onClick={() => this.navigateTo('/generate/hsl-advanced')} ><div><BrushIcon style={iconStyle} fontSize=\"small\" /> ADVANCED </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/custom')}><div><StarIcon style={iconStyle} fontSize=\"small\" /> CUSTOM </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/picture')}><div><ImageIcon style={iconStyle} fontSize=\"small\" /> FROM PICTURE </div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport \"./TryIt.scss\"\r\nimport { Tooltip, Slider } from 'antd'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nclass TryItGradient extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            gradientColors: ['#81042b', '#9a6a79', '#dda7b8', '#040102'],\r\n            numberOfColors: 4\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => this.state.gradientColors.map((color, i) => document.getElementById('gradient-' + i))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setNumberOfColors = (n) => {\r\n        let oldN = this.state.numberOfColors\r\n        let gradientColors = Array.from(this.state.gradientColors)\r\n        if (n > oldN)\r\n            for (let i = 0; i < n - oldN; i++) {\r\n                gradientColors.push('#ffffff')\r\n            }\r\n        if (n < oldN) {\r\n            for (let i = 0; i < oldN - n; i++) {\r\n                gradientColors.pop()\r\n            }\r\n        }\r\n        this.setState({ numberOfColors: n, gradientColors: gradientColors }, this.setHoverEffects)\r\n    }\r\n    setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.gradientColors\r\n        newColors[colorIndex] = this.getSelectedColor()\r\n        this.setState({ gradientColors: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n\r\n    render() {\r\n        let gradientColors = this.state.gradientColors\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let gradientString = \"linear-gradient(to right,\" + gradientColors.join(',') + \")\"\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div className='try-web'>\r\n\r\n                <div className=\"try-colors-container\" style={{ backgroundImage: gradientString, gridAutoFlow: 'column', display: 'grid' }}>\r\n                    {gradientColors.map(\r\n                        (color, i) =>\r\n                            <div style={{ paddingTop: '150px', }}\r\n                                onClick={(e) => this.setColor(e, i)} id={'gradient-' + i} />\r\n                    )}\r\n                </div>\r\n\r\n                <div >\r\n                    <Slider className=\"slider-input\" style={{ width: '100%', margin: 0, marginTop: '16px' }} min={2} max={8} onChange={this.setNumberOfColors} value={this.state.numberOfColors} />\r\n                </div>\r\n                \r\n                <div className=\"applied-colors-container\">\r\n                    {gradientColors.map(color =>\r\n                        <div className=\"applied-color\"\r\n                            style={{ backgroundColor: color, color: new Color(color, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}>\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton size='small' onClick={() => exportJSON(gradientColors)} > <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton size='small' onClick={this.reset} > <AutorenewIcon /></IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton size='small' >\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton size='small' disabled={this.state.futureQueue}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryItGradient);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport \"./TryIt.scss\"\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\n\r\nimport { Tooltip } from 'antd'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nconst backgroundColor = 'white'\r\nconst textColor = '#030202'\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            ...this.initialComponentsState,\r\n            historyStack: [],\r\n            futureQueue: []\r\n        };\r\n    }\r\n    get initialComponentsState() {\r\n        return {\r\n            components: {\r\n                background: backgroundColor,\r\n                primaryButton: backgroundColor,\r\n                secondaryButton: backgroundColor,\r\n                successButton: backgroundColor,\r\n                warningButton: backgroundColor,\r\n                dangerButton: backgroundColor,\r\n                infoButton: backgroundColor,\r\n\r\n                title: textColor,\r\n                header: textColor,\r\n                primaryButtonFont: textColor,\r\n                secondaryButtonFont: textColor,\r\n                successButtonFont: textColor,\r\n                dangerButtonFont: textColor,\r\n                warningButtonFont: textColor,\r\n                infoButtonFont: textColor,\r\n                paragraph: textColor,\r\n            },\r\n            hovered: null\r\n        }\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => {\r\n        this.setHoverEffects()\r\n        this.pushCurrentHistoryToStack()\r\n    }\r\n    setHoverEffectInPalette = (color) => {\r\n        this.setState({ hovered: color })\r\n    }\r\n    pushCurrentHistoryToStack = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        historyStack.push(Object.assign(this.state.components))\r\n        console.log(historyStack)\r\n        this.setState({ historyStack, futureQueue: [] })\r\n    }\r\n    popHistoryStack = () => {\r\n        let historyStack = this.state.historyStack\r\n        let futureQueue = this.state.futureQueue\r\n        futureQueue.push(this.state.components)\r\n        console.log(historyStack)\r\n        let components = historyStack.pop()\r\n        console.log(components)\r\n        this.setState({ historyStack, futureQueue, components })\r\n        console.log(this.state)\r\n    }\r\n    dequeueFutureQueue = () => {\r\n        let futureQueue = this.state.futureQueue\r\n        let historyStack = this.state.historyStack\r\n        historyStack.push(this.state.components)\r\n        let components = futureQueue.shift()\r\n        this.setState({ historyStack, futureQueue, components })\r\n    }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialComponentsState); this.pushCurrentHistoryToStack() }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        this.pushCurrentHistoryToStack()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) =>\r\n        <button className='try-button'\r\n            onClick={(e) => this.setColor(e, component)} id={id} style={{\r\n                backgroundColor: background, color: font, border: '1px solid ' + font + '80'\r\n            }}>\r\n            <div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div></button>\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div className='try-web'>\r\n\r\n\r\n                <div className=\"try-card-holder\">\r\n\r\n                    <div id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background, border: '1px solid #d4d4d4', borderRadius: '1%'  }}> {/*  headStyle={{ backgroundColor: appBar }} > */}\r\n\r\n                        <h3 className=\"try-title-holder\" style={{ color: title }}>\r\n                            <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Apply Selected Color Here </span>\r\n                        </h3>\r\n\r\n                        <h4 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h4>\r\n                        <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, lineHeight: '1.6' }}>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                            {/* Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. */}\r\n                        </p>\r\n                        <br />\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                            {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                            {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                            {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                            {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n\r\n                <div className=\"applied-colors-container\">\r\n                    {backgrounds.map((name, i) => {\r\n                        let key = \"text_\" + name + \"_\" + i\r\n                        let is_hovered = this.state.hovered == key\r\n                        let bg_color = is_hovered ? selectedColor : components[name]\r\n                        return (\r\n                            <div className=\"applied-color\" key={key}\r\n                                onMouseOver={() => this.setHoverEffectInPalette(name)}\r\n                                onMouseLeave={() => this.setHoverEffectInPalette(null)}\r\n                                onClick={(e) => this.setColor(e, name)}\r\n                                style={{\r\n                                    backgroundColor: bg_color,\r\n                                    color: new Color(bg_color, 0, 0, 'Hex').hsl.light > 40 ? 'rgba(33, 33, 33, 0.9)' : 'rgba(255, 255, 255, 0.75)'\r\n                                }} />)\r\n                    }\r\n                    )}\r\n                    {texts.map((key, i) =>\r\n                        <div className=\"applied-color\" key={\"bg_\" + key + \"_\" + i}\r\n                            onClick={(e) => this.setColor(e, key)}\r\n                            style={{\r\n                                backgroundColor: components[key],\r\n                                color: new Color(components[key], 0, 0, 'Hex').hsl.light > 40 ? 'rgba(33, 33, 33, 0.9)' : 'rgba(255, 255, 255, 0.75)'\r\n                            }}>\r\n                            {}\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton className='' size='small' onClick={(e) => { e.stopPropagation(); exportJSON(components) }}> <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton className='' size='small' onClick={this.reset}> <AutorenewIcon />  </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton className='' size='small' onClick={this.dequeueFutureQueue}>\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton className='' size='small' onClick={this.popHistoryStack} disabled={this.state.futureQueue}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { message, } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n    <span style={{ cursor: 'pointer' }}>\r\n      {props.children}\r\n    </span>\r\n  </CopyToClipboard>\r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from './ClipboardCopier'\r\nimport Color from \"../utilities/Color\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    //<Icon icon=\"duplicate\" style={{ verticalAlign: 'bottom', fontSize: '0.8em' }} />\r\n    let selectedColor = props.selectedColor\r\nlet selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n\r\n    return (\r\n        <ClipboardCopier value={selectedColor} >\r\n            <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont}}>\r\n                <label>{selectedColor}   </label>\r\n            </div>\r\n        </ClipboardCopier >\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport TryItGradient from \"./TryItGradient\";\r\nimport TryIt from \"./TryIt\";\r\nimport { SelectedColorPanel } from \"../SelectedColorPanel\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected\r\n    }\r\n}\r\n\r\nconst switchers = [\r\n    {\r\n        label: 'WEB', component: () => <TryIt />\r\n    },\r\n    {\r\n        label: 'GRADIENT', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'IMAGE', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'PIXEL ART', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'SHADER', component: () => <TryItGradient />\r\n    }]\r\n\r\nclass TryMain extends Component {\r\n    state = {\r\n        selectedTryIndex: 0\r\n    }\r\n    switchNext = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == switchers.length - 1)\r\n            this.setState({ selectedTryIndex: 0 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected + 1 })\r\n    }\r\n    switchPrevious = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == 0)\r\n            this.setState({ selectedTryIndex: switchers.length - 1 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected - 1 })\r\n    }\r\n    setSelected = (i) => this.setState({ selectedTryIndex: i })\r\n\r\n    render() {\r\n        const selectedTryIndex = this.state.selectedTryIndex\r\n        //<SelectedColorPanel selectedColor={this.props.selected} />\r\n\r\n        const label = switchers[selectedTryIndex].label\r\n        const tryComponent = switchers[selectedTryIndex].component()\r\n\r\n        return (\r\n            <div className='try-holder'>\r\n                <div className=\"select-mode-table\">\r\n                    {switchers.map(\r\n                        (option, i) => <div key={\"switcher\" + i} onClick={() => this.setSelected(i)} className={i == selectedTryIndex ? 'selected-mode' : ''}><div> {option.label}</div> </div>)}\r\n                </div>\r\n                {tryComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TryMain);\r\n","\r\nconst SET_BLINDNESS = 'SET_BLINDNESS'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setBlindness = (blindnessType) => { return { type: SET_BLINDNESS, blindnessType } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { blindness: 'None' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const ColorBlindnessReducer = (state = initial_state, action) =>  action.type == SET_BLINDNESS ? { ...state, blindness: action.blindnessType, } : state\r\n\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBlindness } from '../redux/ColorBlindnessReducer'\r\nimport { blindnessNames } from \"../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        blindness: state.ColorBlindnessReducer.blindness\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setBlindness: setBlindness }, dispatch) }\r\n\r\n\r\nclass SelectBlindness extends React.Component {\r\n\r\n    handleChange = event =>\r\n        this.props.setBlindness(event.target.value)\r\n\r\n    render() {\r\n\r\n        return (\r\n            <FormControl style={{ minWidth: 150 }}>\r\n                <InputLabel htmlFor=\"age-simple\">Color Blindness</InputLabel>\r\n                <Select\r\n                    value={this.props.blindness}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {blindnessNames.map(name => <MenuItem value={name}>{name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectBlindness);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filters from './Filters'\r\nimport Tiles from './Tiles'\r\nimport DisplayOrderButtons from '../DisplayOrderButtons'\r\nimport { ExportJSONButton } from '../../../components/ExportJSONButton'\r\nimport { exportJSON } from '../../../utilities/ExportJSON'\r\nimport '../HSLFiltersAlternative.css'\r\nimport SelectMode from \"../SelectMode/SelectMode\"\r\nimport TryMain from \"../../../components/TryIt/TryMain\";\r\nimport { SelectedColorPanel } from \"../../../components/SelectedColorPanel\";\r\nimport SelectBlindness from \"../../../components/SelectBlindness\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass HSLBasicContainer extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'rgb(237, 237, 237)'\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n                <div id='palette-container' >\r\n                    <div className=\" tiles-actions-bar \" >\r\n                        <div>\r\n                            <SelectBlindness />\r\n                        </div>\r\n                        <div>\r\n                            <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n                        </div>\r\n                        <div>\r\n                            <DisplayOrderButtons />\r\n                        </div>\r\n                        <div>\r\n                            <SelectedColorPanel selectedColor={this.props.selected} />\r\n                        </div>\r\n                    </div>\r\n                    <div></div>\r\n                    <Tiles />\r\n                    <div></div>\r\n                </div>\r\n\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode history={this.props.history} />\r\n                        <Filters />\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSLBasicContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Tooltip } from 'antd'\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const ResetColorsButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Reset\"}>\r\n        <Icon icon=\"repeat\" className=\"reset-btn\" onClick={props.onClick} />\r\n    </Tooltip>\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Icon, Tooltip } from 'antd'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0 };\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    handleExportJSON_ButtonClick = () => exportJSON(this.state.colors)\r\n    handleResetButtonClick = () => { this.setState({ colors: [this.props.baseColor.HEXString], clickedColor: 0 }) }\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        let selectedColorFont = new Color(baseColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div style={{ width: '400px', width: '41vw' }} className=\"element-holder\">\r\n\r\n                <div className=\" tiles-actions-bar bottom-bordered top-bordered\" style={{}}>\r\n                    {/* ExportJSON */}\r\n                    < ExportJSONButton onClick={this.exportJSON} />\r\n                    {/* Reset */}\r\n                    <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n                    {/* Selected Color Panel */}\r\n                    <SelectedColorPanel selectedColor={baseColor} />\r\n                </div>\r\n\r\n                <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.colors.map((color, index) =>\r\n                        <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                        className={\"single-tile \" + (selectedColorIndex == index ? 'selected-tile' : '')}\r\n                            style={{\r\n                                backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                padding: '30px', display: 'block'\r\n                            }} />)\r\n                    }\r\n                    <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)}\r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign: 'center', borderRadius: '50%' }} >\r\n                        <Icon type=\"plus\" style={{ fontSize: '24px', padding: '20px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ColorPicker />\r\n        <GeneratedColors />\r\n        <TryIt selectedColor={this.props.baseColor.HEXString} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from \"../../../../redux/SelectedColorReducer\";\r\nimport { changeBaseColor } from \"../../../../redux/BaseColorReducer\";\r\nimport { exportJSON } from \"../../../../utilities/ExportJSON\";\r\nimport \"./PictureUpload.css\"\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch);\r\n};\r\n\r\nclass PictureUpload extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n    let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n    // By Hue Version\r\n    let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n    let arr12Colors = [];\r\n    let arr24Colors1 = [];\r\n    let arr48Colors1 = [];\r\n    let arr72Colors1 = [];\r\n    pushVersion1Function(arr12Colors, 12);\r\n    pushVersion1Function(arr24Colors1, 24);\r\n    pushVersion1Function(arr48Colors1, 48);\r\n    pushVersion1Function(arr72Colors1, 72);\r\n    let version1Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      arr[bucketNumber].totalHue += hsl.hue;\r\n      arr[bucketNumber].totalSat += hsl.sat;\r\n      arr[bucketNumber].totalLight += hsl.light;\r\n      arr[bucketNumber].number += 1;\r\n    };\r\n\r\n    // By Hue and Light Version\r\n    let pushVersion2Function = (arr, n) => {\r\n      for (var i = 0; i < n; i++) {\r\n        arr.push({\r\n          light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n          dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n        });\r\n      }\r\n    };\r\n    let arr12Colors2 = [];\r\n    let arr24Colors2 = [];\r\n    let arr48Colors2 = [];\r\n    let arr72Colors2 = [];\r\n    pushVersion2Function(arr12Colors2, 12);\r\n    pushVersion2Function(arr24Colors2, 24);\r\n    pushVersion2Function(arr48Colors2, 48);\r\n    pushVersion2Function(arr72Colors2, 72);\r\n    let version2Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n      bucket.totalHue += hsl.hue;\r\n      bucket.totalSat += hsl.sat;\r\n      bucket.totalLight += hsl.light;\r\n      bucket.number += 1;\r\n    };\r\n\r\n    for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n      let r = pixelArray[i];\r\n      let g = pixelArray[i + 1];\r\n      let b = pixelArray[i + 2];\r\n      let hsl = RGBtoHSL(r, g, b);\r\n      // By Hue Version\r\n      version1Function(hsl, arr12Colors, 30);\r\n      version1Function(hsl, arr24Colors1, 15);\r\n      version1Function(hsl, arr48Colors1, 7.5);\r\n      version1Function(hsl, arr72Colors1, 5);\r\n\r\n      // By Hue and Light Version\r\n      version2Function(hsl, arr12Colors2, 30);\r\n      version2Function(hsl, arr24Colors2, 15);\r\n      version2Function(hsl, arr48Colors2, 7.5);\r\n      version2Function(hsl, arr72Colors2, 5);\r\n    }\r\n\r\n    // By Hue Version\r\n    let extractColorsFunction = obj => \"hsl(\" + obj.totalHue / obj.number + \", \" + obj.totalSat / obj.number + \"%, \" + obj.totalLight / obj.number + \"% )\";\r\n    let palette1 = arr12Colors.map(extractColorsFunction);\r\n    let palette2 = arr24Colors1.map(extractColorsFunction);\r\n    let palette3 = arr48Colors1.map(extractColorsFunction);\r\n    let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n    // By Hue and Light Version\r\n    let extractColorsFunction2 = arr => {\r\n      //looks better when dark goes first\r\n      let darkLightArr = arr.map(obj => {\r\n        let light = obj.light;\r\n        let lightStr = \"hsl(\" + light.totalHue / light.number + \", \" + light.totalSat / light.number + \"%, \" + light.totalLight / light.number + \"% )\";\r\n        let dark = obj.dark;\r\n        let darkStr = \"hsl(\" + dark.totalHue / dark.number + \", \" + dark.totalSat / dark.number + \"%, \" + dark.totalLight / dark.number + \"% )\";\r\n        return { dark: darkStr, light: lightStr };\r\n      });\r\n      let darks = darkLightArr.map(obj => obj.dark);\r\n      let lights = darkLightArr.map(obj => obj.light);\r\n      let palette = [];\r\n      palette = palette.concat(darks);\r\n      palette = palette.concat(lights);\r\n      return palette;\r\n    };\r\n    let palette5 = extractColorsFunction2(arr12Colors2);\r\n    let palette6 = extractColorsFunction2(arr24Colors2);\r\n    let palette7 = extractColorsFunction2(arr48Colors2);\r\n    let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n    this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) { palettePieces = palette.map(c => <div className=\"picture-single-tile\" style={{ backgroundColor: c }} />) }\r\n    return palettePieces;\r\n  };\r\n\r\n  render() {\r\n    const { palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8 } = this.state\r\n\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) { $imagePreview = (<img id=\"uploaded-image\" src={imagePreviewUrl} style={{ width: \"400px\" }} />); }\r\n    else { $imagePreview = <span />; }\r\n\r\n    return (\r\n      <div className=\"previewComponent element-holder\">\r\n        <div style={{ display: \"inline-block\", verticalAlign: 'top' }}>\r\n          <h2>Please select an Image for Preview</h2>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={e => this.handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={e => this.handleSubmit(e)}> Generate Palette </button>\r\n          </form>\r\n          <br />\r\n          <div className=\"imgPreview\"> {$imagePreview} </div>\r\n          <canvas id=\"canv\" />\r\n        </div>\r\n        {this.state.generated && (\r\n          <div id=\"generated-palettes-holder\">\r\n            <h3> Version 1 (12, by Hue) </h3> <div> {this.getTiles(palette1)} </div>\r\n            <h3> Version 2 (24, by Hue) </h3> <div> {this.getTiles(palette2)} </div>\r\n            <h3> Version 3 (48, by Hue) </h3> <div> {this.getTiles(palette3)} </div>\r\n            <h3> Version 4 (72, by Hue) </h3> <div> {this.getTiles(palette4)} </div>\r\n            <h3> Version 5 (12, by Hue and Light) </h3> <div> {this.getTiles(palette5)} </div>\r\n            <h3> Version 6 (24, by Hue and Light) </h3> <div> {this.getTiles(palette6)} </div>\r\n            <h3> Version 7 (48, by Hue and Light) </h3> <div> {this.getTiles(palette7)} </div>\r\n            <h3> Version 8 (72, by Hue and Light) </h3> <div> {this.getTiles(palette8)} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nimport \"./Picture.css\"\r\n\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picture-page\">\r\n        <PictureUpload /><TryIt />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../../utilities/Color\";\r\nimport HSLPaletteGenerator from \"../../../../../utilities/HSLPaletteGenerator\";\r\nimport { getChunks } from \"../../../../../utilities/ArrayMethods\";\r\nimport { selectColor } from '../../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../../components/SelectedColorPanel'\r\nimport { Icon, Slider, Select, Tooltip } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport SelectMode from \"../../../SelectMode/SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{textAlign:'right'}}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\" >\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* HSL FILTERS */}\r\n          <div className='bottom-bordered hsl-advanced-filters'>\r\n            {/* Changes */}\r\n            <div >\r\n              {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n              {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n              {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div>\r\n              {this.getSliderInput(hueStep, this.handleHueStepChange, 1, 100, 'Hue Step')}\r\n              {this.getSliderInput(satStep, this.handleSatStepChange, 1, 100, 'Saturation Step')}\r\n              {this.getSliderInput(lightStep, this.handleLightStepChange, 1, 100, 'Light Step')}\r\n            </div>\r\n          </div>\r\n\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div className=\"vertical-padding bottom-bordered\" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: \"12px\" }}>\r\n            {/* Number Of Colors */}\r\n            <div id='number-of-colors-input'> {this.getSliderInput(numberOfColors, this.handleNumberOfColorsChange, 6, 181, 'Number of Colors')} </div>\r\n\r\n            <div className=\" tiles-actions-bar\" style={{ marginBottom: \"0\", padding: \"0\" }}>\r\n              {/* ExportJSON */}\r\n              < ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n              {/* Reset */}\r\n              <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n              {/* Selected Color Panel */}\r\n              <SelectedColorPanel selectedColor={selectedColor} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport HSLPaletteGenerator from \"../../../../../utilities/HSLPaletteGenerator\";\r\nimport { selectColor } from '../../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../../components/SelectedColorPanel'\r\nimport { Slider } from 'antd';\r\nimport '../HSLFilters.scss'\r\nimport SelectMode from \"../../../SelectMode/SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\nimport AdvancedHSLFilters from './AdvancedHSLFilters'\r\nimport TryMain from \"../../../../../components/TryIt/TryMain\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLAdvancedContainer extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{ textAlign: 'right' }}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'rgb(237, 237, 237)'\r\n    return (\r\n      <div className='horizontal-holder-ls'>\r\n        <div id='palette-container' >\r\n          <div className=\" tiles-actions-bar \" >\r\n            <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n            <SelectedColorPanel selectedColor={this.props.selected} />\r\n          </div>\r\n\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n\r\n          <div></div>\r\n        </div>\r\n\r\n        <div className='vertical-holder-sl'>\r\n          <div className='filters-part' >\r\n            <SelectMode history={this.props.history} />\r\n            <AdvancedHSLFilters />\r\n          </div>\r\n          <div>\r\n            <div className='filters-long-part'>\r\n              <div><TryMain /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLAdvancedContainer);\r\n\r\n\r\n","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HSLBasicContainer from '../pages/color-generation/HSL-basic/HSLBasicContainer'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport HSLAdvancedContainer from '../pages/color-generation/HSL/components/HSLAdvanced/HSLAdvancedContainer'\r\n\r\n//import Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' render={() => (<Redirect to='/generate/hsl-basic' />)}  />\r\n      <Route exact path='/generate/hsl-basic' component={HSLBasicContainer} />\r\n      <Route exact path='/generate/hsl-advanced' component={HSLAdvancedContainer} />\r\n      <Route path='/generate/custom' component={Custom} />\r\n      <Route path='/generate/picture' component={Picture} />\r\n      {/*<Route path='/community' component={Community} />*/}\r\n    </Switch>\r\n  </main>\r\n)\r\n","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport HSLAdvancedContainer from '../pages/color-generation/HSL/components/HSLAdvanced/HSLAdvancedContainer'\r\nimport React from \"react\";\r\nimport Filters from '../pages/color-generation/HSL-basic/Filters'\r\n\r\nexport const FiltersRoutes = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' render={() => (<Redirect to='/generate/hsl-basic' />)}  />\r\n      <Route exact path='/generate/hsl-basic' component={Filters} />\r\n      <Route exact path='/generate/hsl-advanced' component={HSLAdvancedContainer} />\r\n      <Route path='/generate/custom' component={Custom} />\r\n      <Route path='/generate/picture' component={Picture} />\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\n//import Filters from './Filters'\r\nimport Tiles from './HSL-basic/Tiles'\r\nimport DisplayOrderButtons from './DisplayOrderButtons'\r\nimport { ExportJSONButton } from '../../components/ExportJSONButton'\r\nimport { exportJSON } from '../../utilities/ExportJSON'\r\nimport './HSLFiltersAlternative.css'\r\nimport SelectMode from \"./SelectMode/SelectMode\"\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport { Popover } from 'antd';\r\nimport TryMain from \"../../components/TryIt/TryMain\";\r\nimport {FiltersRoutes} from '../../routes/FiltersRoutes';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\n\r\nclass Generate extends Component {\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'rgb(237, 237, 237)'\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n                <div id='palette-container' >\r\n                    <div className=\" tiles-actions-bar \" >\r\n                        <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n                        <DisplayOrderButtons />\r\n                    </div>\r\n                    <Tiles />\r\n                    <div></div>\r\n                </div>\r\n\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode history={this.props.history}/>\r\n                        <FiltersRoutes/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Generate);\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\nimport Generate from \"./pages/color-generation/Generate\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <Main />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nimport { ColorBlindnessReducer } from \"./ColorBlindnessReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer,\r\n  ColorBlindnessReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    \n      <App />\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}