{"version":3,"sources":["components/Header.js","redux/HSLBasicReducer.js","pages/color-generation/HSL/components/HSLBasic/Filters.js","utilities/Color.js","redux/SelectedColorReducer.js","utilities/HSLPaletteGenerator.js","pages/color-generation/HSL/components/HSLBasic/Tiles.js","pages/color-generation/HSL/components/HSLBasic/DisplayOrderButtons.js","components/ExportJSONButton.js","utilities/ExportJSON.js","redux/HSLModeReducer.js","pages/color-generation/HSL/components/SelectMode/SelectMode.js","redux/BaseColorReducer.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","components/GoldenRatio.js","components/TryIt/TryItGradient.js","styles.js","components/TryIt/TryIt.js","components/ClipboardCopier.js","components/SelectedColorPanel.js","components/TryIt/TryMain.js","pages/color-generation/HSL/components/HSLBasic/HSLBasicContainer.js","pages/color-generation/HSL/HSL.js","components/ResetColorsButton.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/color-generation/HSL/components/HSLFilters.js","pages/community/Community.js","components/Main.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","className","Component","withRouter","setHueSplit","hueSplit","type","setSatSplit","satSplit","setLightSplit","lightSplit","setDisplayOrder","l1","l2","l3","initial_state","hueDivisors","1","2","3","4","5","6","8","9","10","12","15","lightDivisors","20","satDivisors","Filters","handleHueSliderChange","value","handleSatSliderChange","handleLightSliderChange","_this$props","this","id","html","slider","marks","step","defaultValue","max","min","onChange","connect","HSLBasicReducer","dispatch","bindActionCreators","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","Math","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","selectColor","selected","utilities_HSLPaletteGenerator","HSLPaletteGenerator","baseColor","hueStep","satStep","lightStep","numberOfColors","_baseColor$hsl","_palette","Array","apply","map","el","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","offsetSat","offSetLight","_baseColor$hsl2","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","forEach","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","Tiles","getPadding","palette","getRowHolderWidth","outer","width","vertical","getPalette","handleSelectColor","selectedColorId","_this2","selectedColor","tilePadding","wrapperStyle","display","gridTemplateColumns","gridGap","style","alignItems","height","verticalAlign","satArr","i1","key","lightArr","i2","lineHeight","lightColor","i3","isSelected","background","padding","border","onClick","BaseColorReducer","SelectedColorReducer","displayOrder","displayOptions","DisplayOrderButtons","selectedDisplayOption","setLevels","i","handleChangeOrderUpClick","next","handleChangeOrderDownClick","icon","ExportJSONButton","tooltip","placement","title","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","setAttribute","click","changeHSLMode","isAdvanced","iconStyle","marginRight","SelectMode","Palette_default","fontSize","Brush_default","Star_default","Image_default","HSLModeReducer","changeBaseColor","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","drawHueCanvas","scaler","canvas","getElementById","ctx","getContext","scaledWidth","scaledHeight","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getColorHueCanvas","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","scaledBackX","scaledBackY","getColorSaturationCanvas","circle","scaledPositionTop","marginTop","scaledPositionLeft","marginLeft","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","hexValue","componentDidMount","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","handleMouseMoveMainCanvas","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","removeEventListener","borderColor","backgroundColor","lib","time","handler","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","ColorPicker","handleFormInput","val","getNumberPickerInput","numericInput","buttonPosition","size","onValueChange","setFromHue","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","e","target","test","_baseColor$rgb","color_picker_ColorPickerCanvas","margin","marginBottom","whiteSpace","class","GoldenRatio","direction","longFirst","longChild","shortChild","isVertical","measure","maxMeasure","firstStyle","secondStyle","long","short","objectSpread","TryItGradient","initialState","componentDidUpdate","setHoverEffects","allTryElements","getAllTryElements","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","getSelectedColor","gradientColors","elem","outline","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","reset","setNumberOfColors","oldN","from","console","log","pop","setColor","colorIndex","newColors","gradientString","join","GoldenRatio_GoldenRatio","backgroundImage","borderRight","cursor","ExportJSONButton_ExportJSONButton","textAlign","tryIds","texts","backgrounds","TryIt","pushCurrentHistoryToStack","setHoverEffectInPalette","hovered","historyStack","assign","components","futureQueue","popHistoryStack","dequeueFutureQueue","shift","initialComponentsState","compName","getTryButton","component","font","text","appBar","header","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","warningButton","warningButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","name","bg_color","onMouseOver","IconButton_default","CloudDownload_default","Autorenew_default","Undo_default","disabled","Redo_default","message","config","duration","ClipboardCopier","react_copy_to_clipboard_lib","onCopy","success","children","SelectedColorPanel","selectedColorFont","ClipboardCopier_ClipboardCopier","switchers","label","components_TryIt_TryIt","TryIt_TryItGradient","TryMain","selectedTryIndex","switchNext","switchPrevious","setSelected","tryComponent","option","HSLBasicContainer","handleExportJSON_ButtonClick","colorElements","getElementsByClassName","baseColorFont","HSLBasic_DisplayOrderButtons","HSLBasic_Tiles","components_SelectMode_SelectMode","HSLBasic_Filters","popover","content","components_color_picker_ColorPicker","TryIt_TryMain","HSL","handleSelectMode","bool","HSLBasic_HSLBasicContainer","ResetColorsButton","GeneratedColors","clickedColor","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","handleResetButtonClick","selectedColorIndex","defineProperty","ResetColorsButton_ResetColorsButton","SelectedColorPanel_SelectedColorPanel","flexWrap","borderRadius","es_icon","Custom","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","generated","handleSubmit","preventDefault","img","Image","src","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","_this$state","$imagePreview","onSubmit","Picture","Picture_components_PictureUpload","HSLFilters","setFilters","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","getElementsByTagName","getSliderInput","getSliderInputRight","getTilesRow","rowNumber","_this$state2","card","justifyContent","Community","palettes","Grid_default","container","spacing","item","xs","Card_default","Main","Switch","Route","exact","path","render","Redirect","to","App","components_Header","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","es","BrowserRouter","src_App","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd7cbffc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <div className='header'>\r\n        <h2>PALETTE</h2>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 1, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action. hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Slider } from 'antd';\r\nimport '../HSLFiltersAlternative.css'\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\nimport { setHueSplit, setSatSplit, setLightSplit } from '../../../../../redux/HSLBasicReducer'\r\n\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setHueSplit: setHueSplit, setSatSplit: setSatSplit, setLightSplit: setLightSplit }, dispatch) }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit\r\n    }\r\n}\r\nconst hueDivisors = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 8: '8', 9: '9', 10: '10', 12: '12', 15: '15' } //, 18: '18', 20: '20', 24: '24', 30: '30' }\r\nconst lightDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10', 20: '20' }\r\nconst satDivisors = { 1: '1', 2: '2', 4: '4', 5: '5', 10: '10' }\r\nconst hueMax = 15\r\nconst satMax = 10\r\nconst lightMax = 20\r\n\r\nclass Filters extends Component {\r\n    // FILTER HANDLERS\r\n    handleHueSliderChange = value => this.props.setHueSplit(value)\r\n    handleSatSliderChange = value => this.props.setSatSplit(value)\r\n    handleLightSliderChange = value => this.props.setLightSplit(value)\r\n\r\n    render() {\r\n        const { hueSplit, satSplit, lightSplit } = this.props\r\n        return (\r\n            <div id='hsl-basic-filters' >\r\n                <div>\r\n                    <Label className=\"slider-label\">Hues</Label>\r\n                    <Slider marks={hueDivisors} step={null} defaultValue={hueSplit} max={hueMax} min={1} onChange={this.handleHueSliderChange} />\r\n                </div>\r\n                {/* Saturation */}\r\n                <div>\r\n                    <Label className=\"slider-label\" >Saturations</Label>\r\n                    <Slider marks={satDivisors} step={null} defaultValue={lightSplit} max={satMax} min={1} onChange={this.handleSatSliderChange} />\r\n                </div>\r\n                {/* Light */}\r\n                <div>\r\n                    <Label className=\"slider-label\">Lights</Label>\r\n                    <Slider marks={lightDivisors} step={null} defaultValue={satSplit} max={lightMax} min={1} onChange={this.handleLightSliderChange} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\r\n\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#81042b', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 100\r\n      return new Color(h, s, l, 'HSL').HEXString\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 100, 100)\r\n  let l2_divider = getLevel(l2, 360, 100, 100)\r\n  let l3_divider = getLevel(l3, 360, 100, 100)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light )\r\n  let l2_v = getLevel(l2, hue, sat, light )\r\n  let l3_v = getLevel(l3, hue, sat, light )\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from '../../../../../redux/SelectedColorReducer'\r\nimport { getAdvancedPalette } from \"../../../../../utilities/HSLPaletteGenerator\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseColor: state.BaseColorReducer.baseColor,\r\n        selected: state.SelectedColorReducer.selected,\r\n        hueSplit: state.HSLBasicReducer.hueSplit,\r\n        satSplit: state.HSLBasicReducer.satSplit,\r\n        lightSplit: state.HSLBasicReducer.lightSplit,\r\n        displayOrder: state.HSLBasicReducer.displayOrder,\r\n        l1: state.HSLBasicReducer.l1,\r\n        l2: state.HSLBasicReducer.l2,\r\n        l3: state.HSLBasicReducer.l3\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\n\r\nclass Tiles extends Component {\r\n\r\n    getPadding = (palette) => {\r\n        let horizontal = palette[0][0].length\r\n        let padding = 100 / (horizontal * 2) // * by 2 because padding takes left and right parts\r\n        return padding //- 0.1\r\n    }\r\n    getRowHolderWidth = (palette) => {\r\n        let outer = palette.length\r\n        let width = palette[0][0].length\r\n        let vertical = palette[0].length\r\n\r\n        // 1\r\n        if (width == 1) {\r\n            if (vertical == 1)\r\n                return 6\r\n            if (vertical == 10)\r\n                return 20\r\n            if (vertical == 5 & outer > 6)\r\n                return 12\r\n            if (vertical > 1)\r\n                return 8\r\n        }\r\n\r\n        // 2\r\n        if (width == 2) {\r\n            if (vertical == 5 && outer == 1)\r\n                return 3\r\n            if (vertical == 5 && outer > 4 && outer < 9)\r\n                return 5\r\n            if (vertical == 5 && outer == 15)\r\n                return 8\r\n            if (vertical < 10 && outer < 9)\r\n                return 4\r\n            if (vertical < 10 && outer > 8 && outer < 12)\r\n                return 5\r\n            if (vertical < 10 && outer >= 12)\r\n                return 6\r\n            if (vertical >= 10 && outer >= 6)\r\n                return 10\r\n            if (vertical >= 10 && outer < 6)\r\n                return 5\r\n        }\r\n\r\n        // 4\r\n        if (width == 4) {\r\n            if (vertical == 1 && outer > 1)\r\n                return 2\r\n            if (vertical == 4 && outer > 9)\r\n                return 4\r\n            if (vertical > 4 && outer == 4)\r\n                return 4\r\n\r\n            if (vertical == 5 && outer == 1)\r\n                return 2\r\n            if (vertical == 5 && outer > 7)\r\n                return 4\r\n            if (vertical == 5 && outer == 15)\r\n                return 5\r\n\r\n            if (vertical >= 10 && outer < 3)\r\n                return 3\r\n            if (vertical >= 10 && outer == 5)\r\n                return 5\r\n            if (vertical >= 10 && outer == 6)\r\n                return 6\r\n            if (vertical >= 10 && outer > 7)\r\n                return 7\r\n\r\n        }\r\n        // 5\r\n        if (width == 5) {\r\n            if (vertical == 1 && outer < 7)\r\n                return 1\r\n            if (vertical == 1 && outer > 6)\r\n                return 2\r\n            if (vertical == 2 && outer > 9)\r\n                return 3\r\n            if (vertical == 2 && outer < 9)\r\n                return 2\r\n            if (vertical == 4 && outer <= 2)\r\n                return 2\r\n            if (vertical == 4 && outer == 4)\r\n                return 2\r\n            if (vertical == 5 && outer <= 2)\r\n                return 2\r\n            if (vertical >= 10 && outer > 7)\r\n                return 6\r\n            if (outer > 9)\r\n                return 4\r\n        }\r\n\r\n        // 4 5\r\n        if (width > 3 && width < 6) {\r\n            if (vertical > 3 && outer == 3)\r\n                return 3\r\n            if (vertical == 2 && outer > 4)\r\n                return 3\r\n            if (vertical > 2 && vertical < 6 && outer > 4)// && outer < 10)\r\n                return 3\r\n            if (vertical >= 10 && outer == 1)\r\n                return 2\r\n        }\r\n\r\n        // 10 12 15\r\n        if (width >= 10 && width < 20) {\r\n            if (vertical == 1)\r\n                return 1\r\n            if (vertical == 2 && outer < 6)\r\n                return 1\r\n            if (outer == 1)\r\n                return 1\r\n            if (outer >= 2)\r\n                return 2\r\n        }\r\n        // 20\r\n        if (width == 20)\r\n            return 1\r\n\r\n        return 2\r\n    }\r\n    getPalette = () => {\r\n        let { baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3 } = this.props\r\n        let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, l1, l2, l3, 0, 0)\r\n        return palette\r\n    }\r\n\r\n    // TILES PART\r\n    handleSelectColor = (hex, selectedColorId) => {\r\n        this.setState({ selectedColorId })\r\n        this.props.selectColor(hex)\r\n    }\r\n\r\n\r\n    render() {\r\n        let palette = this.getPalette()\r\n        let selectedColor = this.props.selected\r\n        let tilePadding = this.getPadding(palette)\r\n        let numberOfFractions = this.getRowHolderWidth(palette)\r\n        //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        let wrapperStyle = {\r\n            display: 'grid', gridTemplateColumns: 'repeat(' + numberOfFractions + ', 1fr)',\r\n            gridGap: '2px', width: '100%'\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'table', alignItems: 'center', height: '100%' }}>\r\n                <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n\r\n                    <div style={wrapperStyle}>\r\n                        {palette.map((satArr, i1) =>\r\n                            <div key={i1 + \"l1\"}>\r\n\r\n                                {satArr.map((lightArr, i2) =>\r\n                                    <div key={i1 + \"-\" + i2 + \"l2\"} style={{ lineHeight: 0 }}>\r\n                                        {lightArr.map((lightColor, i3) => {\r\n                                            let color = lightColor.HEXString\r\n                                            let isSelected = selectedColor == color\r\n                                            return <div key={i1 + '' + i2 + '' + i3 + color} id={color}\r\n                                                className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                                style={{\r\n                                                    background: color, padding: tilePadding + '%', width: tilePadding * 2 + '%', height: tilePadding * 2 + '%',\r\n                                                    border: 'none'\r\n                                                }}\r\n                                                onClick={() => this.handleSelectColor(color, color)} />\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div >)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tiles);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayOrder } from '../../../../../redux/HSLBasicReducer'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ setDisplayOrder: setDisplayOrder }, dispatch) }\r\n\r\nconst displayOptions = [['h', 's', 'l'], ['h', 'l', 's'], ['s', 'h', 'l'], ['l', 'h', 's'], ['s', 'l', 'h'], ['l', 's', 'h']]\r\n\r\nclass DisplayOrderButtons extends Component {\r\n    state = { selectedDisplayOption: 0 };\r\n\r\n    setLevels = (i) => this.props.setDisplayOrder(displayOptions[i][0], displayOptions[i][1], displayOptions[i][2])\r\n\r\n    handleChangeOrderUpClick = () => {\r\n        let next = this.state.selectedDisplayOption + 1\r\n        next = next == displayOptions.length ? 0 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n    handleChangeOrderDownClick = () => {\r\n        let next = this.state.selectedDisplayOption - 1\r\n        next = next == -1 ? displayOptions.length - 1 : next\r\n        this.setState({ selectedDisplayOption: next })\r\n        this.setLevels(next)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Icon icon=\"arrow-up\" className=\"arrow-btn\" onClick={this.handleChangeOrderUpClick} />\r\n                <Icon icon=\"arrow-down\" className=\"arrow-btn\" onClick={this.handleChangeOrderDownClick} />\r\n                \r\n                {/* Change Order Up \r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    \r\n                </Tooltip>\r\n                */}\r\n                {/* Change Order Down\r\n                <Tooltip placement=\"top\" title={\"Change Colors Order\"}>\r\n                    \r\n                </Tooltip>\r\n                */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DisplayOrderButtons);\r\n","import React from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { Tooltip } from 'antd'\r\n\r\nexport const  ExportJSONButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Export JSON\"}>\r\n        <Icon icon=\"export\" className=\"export-json-btn\" onClick={props.onClick} />\r\n    </Tooltip>","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeHSLMode } from '../../../../../redux/HSLModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport './SelectMode.scss'\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAdvanced: state.HSLModeReducer.isAdvanced\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeHSLMode: changeHSLMode }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    navigateTo = (link) => this.props.history.push(link);\r\n    render() {\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} className='selected-mode'><div><PaletteIcon style={iconStyle} fontSize=\"small\" /> BASIC</div> </div>\r\n                <div onClick={() => this.navigateTo('/generate/hsl')} ><div><BrushIcon style={iconStyle} fontSize=\"small\" /> ADVANCED </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/custom')}><div><StarIcon style={iconStyle} fontSize=\"small\" /> CUSTOM </div></div>\r\n                <div onClick={() => this.navigateTo('/generate/picture')}><div><ImageIcon style={iconStyle} fontSize=\"small\" /> FROM PICTURE </div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#81042b', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nexport const getColorHueCanvas = (clientX, clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorSaturationCanvas = (clientY, baseColor) => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.light * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue ) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n} \r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop =  (color.hsl.sat * 2 ) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n} ","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorSaturationCanvas, getColorHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n        document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", drawHueCanvas);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\", marginTop: sat * 2 - 5 + \"px\" }} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './ColorPicker.css'\r\nimport { Card, Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n    hexValue: 'edb407'\r\n  };\r\n  componentDidMount = () => {\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    this.setHexInput(color.HEXString.substring(1))\r\n  };\r\n  setHexInput = (val) => { this.setState({ hexValue: val }); }\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = value => this.handleFormInput(new Color(value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = value => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, value, \"HSL\"))\r\n  setFromRed = value => this.handleFormInput(new Color(value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = value => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = '#' + this.state.hexValue;\r\n\r\n    return (\r\n      <div id=\"color-picker\">\r\n        <ColorPickerCanvas onChange={this.props.changeBaseColor} baseColor={baseColor} setHexInput={this.setHexInput} />\r\n\r\n        <div id=\"color-inputs-container\">\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>H: </Label> {this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n            <div> <Label>S: </Label> {this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n            <div> <Label>L: </Label> {this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n          </div>\r\n\r\n          <div className=\"input-boxes\">\r\n            <div> <Label>R: </Label> {this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n            <div> <Label>G: </Label> {this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n            <div> <Label>B: </Label> {this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n            <div className=\"input-boxes\" >\r\n              <div>\r\n                <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n                <input id='hex-intput-txt-box' class=\"bp3-input\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);","\r\nimport React from \"react\";\r\n\r\nexport const GoldenRatio = (props) => {\r\n    // direction: vertical or horizontal\r\n    // longFirst : true\r\n    // long\r\n    // short\r\n    const { direction, longFirst, longChild, shortChild } = props\r\n\r\n    // styling\r\n    let isVertical = direction == 'vertical'\r\n    let measure = isVertical ? 'height' : 'width'\r\n    let maxMeasure = !isVertical ? 'height' : 'width'\r\n    let firstStyle = {}, secondStyle = {}\r\n    firstStyle[measure] = longFirst ? '62%' : '38%'\r\n    secondStyle[measure] = longFirst ? '38%' : '62%'\r\n    firstStyle[maxMeasure] = '-webkit-fill-available'\r\n    secondStyle[maxMeasure] = '-webkit-fill-available'\r\n    if (!isVertical) {\r\n        firstStyle.display = 'inline-block'\r\n        secondStyle.display = 'inline-block'\r\n        firstStyle.verticalAlign = 'top'\r\n        secondStyle.verticalAlign = 'top'\r\n    }\r\n\r\n\r\n    // apply styling\r\n    let long = <div style={longFirst ? firstStyle : secondStyle}>{longChild}</div>\r\n    let short = <div style={longFirst ? secondStyle : firstStyle}>{shortChild}</div>\r\n\r\n    return (\r\n        <div style={{ display: direction == 'vertical' ? 'inline-table' : 'inherit', height: '-webkit-fill-available', width: '100%', ...props.style }}>\r\n            {longFirst ? long : short}\r\n            {longFirst ? short : long}\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport \"./TryIt.scss\"\r\nimport { GoldenRatio } from \"../GoldenRatio\";\r\nimport { borderStyle } from '../../styles'\r\nimport { Tooltip, Slider } from 'antd'\r\nimport { Label } from \"@blueprintjs/core\";\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nclass TryItGradient extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            gradientColors: ['#81042b', '#9a6a79', '#dda7b8', '#040102'],\r\n            numberOfColors: 4\r\n        };\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => { this.setHoverEffects() }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => this.state.gradientColors.map((color, i) => document.getElementById('gradient-' + i))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialState) }\r\n\r\n    setNumberOfColors = (n) => {\r\n        let oldN = this.state.numberOfColors\r\n        let gradientColors = Array.from(this.state.gradientColors)\r\n        console.log(n - oldN)\r\n        if (n > oldN)\r\n            for (let i = 0; i < n - oldN; i++) {\r\n                gradientColors.push('#ffffff')\r\n            }\r\n        if (n < oldN) {\r\n            for (let i = 0; i <  oldN - n; i++) {\r\n                gradientColors.pop()\r\n            }\r\n        }\r\n        console.log(gradientColors)\r\n        this.setState({ numberOfColors: n, gradientColors: gradientColors }, this.setHoverEffects)\r\n    }\r\n    setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.gradientColors\r\n        newColors[colorIndex] = this.getSelectedColor()\r\n        this.setState({ gradientColors: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n\r\n    render() {\r\n        let gradientColors = this.state.gradientColors\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let gradientString = \"linear-gradient(to right,\" + gradientColors.join(',') + \")\"\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div style={{ width: '100%', background: 'white', height: '-webkit-fill-available', border: borderStyle }} >\r\n                <GoldenRatio\r\n                    direction=\"horizontal\"\r\n                    longFirst={true}\r\n                    shortChild={\r\n                        <div className=\"try-colors-container\" style={{ backgroundImage: gradientString }}>\r\n                            {gradientColors.map(\r\n                                (color, i) =>\r\n                                    <div style={{ padding: '10px', width: '100%', }}\r\n                                        onClick={(e) => this.setColor(e, i)} id={'gradient-' + i} />\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    longChild={\r\n                        <div style={{ direction: 'rtl', padding: '24px', borderRight: '2px dashed rgb(202, 210, 221)', height: '-webkit-fill-available', lineHeight: '2' }}>\r\n                            <div style={{ color: 'rgb(97, 97, 97)' }}>\r\n                                <Tooltip placement=\"top\" title={\"Reset Applied Colors\"}>\r\n                                    <Icon icon=\"repeat\" onClick={this.reset} style={{ cursor: 'pointer' }} />\r\n                                </Tooltip>\r\n                                <ExportJSONButton onClick={() => exportJSON(gradientColors)} /></div>\r\n                            <br />\r\n                            <div className=\"hsl-slider\">\r\n                                <Label className=\"slider-label\" style={{ textAlign: 'right' }}>Number of Gradients</Label>\r\n                                <Slider className=\"slider-input\" min={2} max={8} onChange={this.setNumberOfColors} value={this.state.numberOfColors} />\r\n                            </div>\r\n\r\n                            <br />\r\n                            <h4> Gradient Colors </h4>\r\n\r\n                            <div className=\"applied-colors-container\">\r\n                                {gradientColors.map(color =>\r\n                                    <div className=\"applied-color\"\r\n                                        style={{ backgroundColor: color, color: new Color(color, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}>\r\n                                        {color}\r\n                                    </div>)}\r\n                            </div>\r\n\r\n                        </div>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryItGradient);\r\n","export const borderStyle = '1px solid rgb(224, 224, 224)'","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport { ExportJSONButton } from '../ExportJSONButton'\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport \"./TryIt.scss\"\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\n\r\nimport { Tooltip } from 'antd'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            ...this.initialComponentsState,\r\n            historyStack: [],\r\n            futureQueue: []\r\n        };\r\n    }\r\n    get initialComponentsState() {\r\n        return {\r\n            components: {\r\n                background: '#f7f3f4',\r\n                primaryButton: '#f7f3f4',\r\n                secondaryButton: '#f7f3f4',\r\n                successButton: '#f7f3f4',\r\n                warningButton: '#f7f3f4',\r\n                dangerButton: '#f7f3f4',\r\n                infoButton: '#f7f3f4',\r\n\r\n                title: '#030202',\r\n                header: '#030202',\r\n                primaryButtonFont: '#030202',\r\n                secondaryButtonFont: '#030202',\r\n                successButtonFont: '#030202',\r\n                dangerButtonFont: '#030202',\r\n                warningButtonFont: '#030202',\r\n                infoButtonFont: '#030202',\r\n                paragraph: '#030202',\r\n            },\r\n            hovered: null\r\n        }\r\n    }\r\n    componentDidUpdate = () => { }\r\n    componentDidMount = () => {\r\n        this.setHoverEffects()\r\n        this.pushCurrentHistoryToStack()\r\n    }\r\n    setHoverEffectInPalette = (color) => {\r\n        this.setState({ hovered: color })\r\n    }\r\n    pushCurrentHistoryToStack = () => {\r\n        let historyStack = Array.from(this.state.historyStack)\r\n        historyStack.push(Object.assign(this.state.components))\r\n        console.log(historyStack)\r\n        this.setState({ historyStack, futureQueue: [] })\r\n    }\r\n    popHistoryStack = () => {\r\n        let historyStack = this.state.historyStack\r\n        let futureQueue = this.state.futureQueue\r\n        futureQueue.push(this.state.components)\r\n        console.log(historyStack)\r\n        let components = historyStack.pop()\r\n        console.log(components)\r\n        this.setState({ historyStack, futureQueue, components })\r\n        console.log(this.state)\r\n    }\r\n    dequeueFutureQueue = () => {\r\n        let futureQueue = this.state.futureQueue\r\n        let historyStack = this.state.historyStack\r\n        historyStack.push(this.state.components)\r\n        let components = futureQueue.shift()\r\n        this.setState({ historyStack, futureQueue, components })\r\n    }\r\n\r\n    setHoverEffects = () => {\r\n        let allTryElements = this.getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            this.addMouseEnterListener(el, allTryElements)\r\n            this.addMouseLeaveListener(el)\r\n            this.addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    getOutlineStyle = () => '3px dotted ' + this.getSelectedColor()\r\n    getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = this.getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? this.getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    reset = (e) => { e.stopPropagation(); this.setState(this.initialComponentsState); this.pushCurrentHistoryToStack() }\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        this.pushCurrentHistoryToStack()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.getSelectedColor()\r\n        this.setState({ components: newColors })\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    getSelectedColor = () => this.props.selectedColor != null ? this.props.selectedColor : this.props.selected\r\n\r\n    getTryButton = (component, id, background, font, text) =>\r\n        <button className='try-button'\r\n            onClick={(e) => this.setColor(e, component)} id={id} style={{\r\n                backgroundColor: background, color: font, border: '1px solid ' + font + '80'\r\n            }}>\r\n            <div onClick={(e) => this.setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div></button>\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.getSelectedColor()\r\n\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div className='try-web'>\r\n\r\n\r\n                <div className=\"try-card-holder\">\r\n\r\n                    <div id=\"try-background\" onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background }}> {/*  headStyle={{ backgroundColor: appBar }} > */}\r\n\r\n                        <h3 className=\"try-title-holder\" style={{ color: title }}>\r\n                            <span id=\"try-title\" onClick={(e) => this.setColor(e, 'title')}>Apply Selected Color Here </span>\r\n                        </h3>\r\n\r\n                        <h4 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h4>\r\n                        <p id=\"try-text\" onClick={(e) => this.setColor(e, 'paragraph')} style={{ color: paragraph, lineHeight: '1.6' }}>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                            {/* Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. */}\r\n                        </p>\r\n                        <br />\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                            {this.getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            {this.getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                            {this.getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                            {this.getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                            {this.getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n\r\n                <div className=\"applied-colors-container\">\r\n                    {backgrounds.map((name, i) => {\r\n                        let key = \"text_\" + name + \"_\" + i\r\n                        let is_hovered = this.state.hovered == key\r\n                        let bg_color = is_hovered ? selectedColor : components[name]\r\n                        return (\r\n                            <div className=\"applied-color\" key={key}\r\n                                onMouseOver={() => this.setHoverEffectInPalette(name)}\r\n                                onMouseLeave={() => this.setHoverEffectInPalette(null)}\r\n                                onClick={(e) => this.setColor(e, name)}\r\n                                style={{\r\n                                    backgroundColor: bg_color,\r\n                                    color: new Color(bg_color, 0, 0, 'Hex').hsl.light > 40 ? 'rgba(33, 33, 33, 0.9)' : 'rgba(255, 255, 255, 0.75)'\r\n                                }} />)\r\n                    }\r\n                    )}\r\n                    {texts.map((key, i) =>\r\n                        <div className=\"applied-color\" key={\"bg_\" + key + \"_\" + i}\r\n                            onClick={(e) => this.setColor(e, key)}\r\n                            style={{\r\n                                backgroundColor: components[key],\r\n                                color: new Color(components[key], 0, 0, 'Hex').hsl.light > 40 ? 'rgba(33, 33, 33, 0.9)' : 'rgba(255, 255, 255, 0.75)'\r\n                            }}>\r\n                            {}\r\n                        </div>)}\r\n                </div>\r\n\r\n                <div className='try-actions-container'>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                        <IconButton className='' size='small' onClick={(e) => { e.stopPropagation(); exportJSON(components) }}> <CloudDownloadIcon /> </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                        <IconButton className='' size='small' onClick={this.reset}> <AutorenewIcon />  </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <IconButton className='' size='small' onClick={this.dequeueFutureQueue}>\r\n                        <UndoIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton className='' size='small' onClick={this.popHistoryStack} disabled={this.state.futureQueue}>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { message, } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n    <span style={{ cursor: 'pointer' }}>\r\n      {props.children}\r\n    </span>\r\n  </CopyToClipboard>\r\n)\r\n\r\n\r\n","import React from \"react\";\r\nimport { ClipboardCopier } from './ClipboardCopier'\r\nimport Color from \"../utilities/Color\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    //<Icon icon=\"duplicate\" style={{ verticalAlign: 'bottom', fontSize: '0.8em' }} />\r\n    let selectedColor = props.selectedColor\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n\r\n    return (\r\n        <ClipboardCopier value={selectedColor} >\r\n            <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont, border: '1px solid ' + selectedColorFont }}>\r\n                <label>{selectedColor}   </label>\r\n            </div>\r\n        </ClipboardCopier >\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport TryItGradient from \"./TryItGradient\";\r\nimport TryIt from \"./TryIt\";\r\nimport { SelectedColorPanel } from \"../SelectedColorPanel\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected\r\n    }\r\n}\r\n\r\nconst switchers = [\r\n    {\r\n        label: 'WEB', component: () => <TryIt />\r\n    },\r\n    {\r\n        label: 'GRADIENT', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'IMAGE', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'PIXEL ART', component: () => <TryItGradient />\r\n    },\r\n    {\r\n        label: 'SHADER', component: () => <TryItGradient />\r\n    }]\r\n\r\nclass TryMain extends Component {\r\n    state = {\r\n        selectedTryIndex: 0\r\n    }\r\n    switchNext = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == switchers.length - 1)\r\n            this.setState({ selectedTryIndex: 0 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected + 1 })\r\n    }\r\n    switchPrevious = () => {\r\n        let selected = this.state.selectedTryIndex\r\n        if (selected == 0)\r\n            this.setState({ selectedTryIndex: switchers.length - 1 })\r\n        else\r\n            this.setState({ selectedTryIndex: selected - 1 })\r\n    }\r\n    setSelected = (i) => this.setState({ selectedTryIndex: i })\r\n\r\n    render() {\r\n        const selectedTryIndex = this.state.selectedTryIndex\r\n        //<SelectedColorPanel selectedColor={this.props.selected} />\r\n\r\n        const label = switchers[selectedTryIndex].label\r\n        const tryComponent = switchers[selectedTryIndex].component()\r\n\r\n        return (\r\n            <div className='try-holder'>\r\n                <div className=\"select-mode-table\">\r\n                    {switchers.map(\r\n                        (option, i) => <div key={\"switcher\" + i} onClick={() => this.setSelected(i)} className={i == selectedTryIndex ? 'selected-mode' : ''}><div> {option.label}</div> </div>)}\r\n                </div>\r\n                {tryComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TryMain);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filters from './Filters'\r\nimport Tiles from './Tiles'\r\nimport DisplayOrderButtons from './DisplayOrderButtons'\r\nimport { ExportJSONButton } from '../../../../../components/ExportJSONButton'\r\nimport { exportJSON } from '../../../../../utilities/ExportJSON'\r\nimport '../HSLFiltersAlternative.css'\r\nimport SelectMode from \"../SelectMode/SelectMode\"\r\nimport ColorPicker from \"../../../../../components/color-picker/ColorPicker\";\r\nimport { borderStyle } from '../../../../../styles'\r\nimport { Popover } from 'antd';\r\nimport TryMain from \"../../../../../components/TryIt/TryMain\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.SelectedColorReducer.selected,\r\n        baseColor: state.BaseColorReducer.baseColor\r\n    }\r\n}\r\nclass HSLBasicContainer extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    render() {\r\n        let baseColorFont = this.props.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'rgb(237, 237, 237)'\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n                <div id='palette-container' >\r\n                    <div className=\" tiles-actions-bar \" >\r\n                        <ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n                        <DisplayOrderButtons />\r\n                    </div>\r\n                    <Tiles />\r\n                    <div></div>\r\n                </div>\r\n\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode />\r\n                        <Filters />\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <Popover content={<ColorPicker />} placement=\"bottom\">\r\n                                    <div className='base-color-select-container' style={{ background: this.props.baseColor.HEXString }} >\r\n                                        <h3 className='select-color-btn' style={{ color: baseColorFont }} >BASE COLOR</h3>\r\n                                    </div>\r\n                                </Popover>\r\n                            </div>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSLBasicContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport HSLBasicContainer from \"./components/HSLBasic/HSLBasicContainer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAdvanced: state.HSLModeReducer.isAdvanced\r\n  }\r\n}\r\nclass HSL extends Component {\r\n  state = {\r\n    isAdvanced: false\r\n  }\r\n  handleSelectMode = (bool) => { this.setState({ isAdvanced: bool }) }\r\n  render() {\r\n    return (<HSLBasicContainer />);\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HSL);\r\n\r\n","import React from \"react\";\r\nimport { Tooltip } from 'antd'\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nexport const ResetColorsButton = (props) =>\r\n    <Tooltip placement=\"top\" title={\"Reset\"}>\r\n        <Icon icon=\"repeat\" className=\"reset-btn\" onClick={props.onClick} />\r\n    </Tooltip>\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Icon, Tooltip } from 'antd'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0 };\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    handleExportJSON_ButtonClick = () => exportJSON(this.state.colors)\r\n    handleResetButtonClick = () => { this.setState({ colors: [this.props.baseColor.HEXString], clickedColor: 0 }) }\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        let selectedColorFont = new Color(baseColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n        return (\r\n            <div style={{ width: '400px', width: '41vw' }} className=\"element-holder\">\r\n\r\n                <div className=\" tiles-actions-bar bottom-bordered top-bordered\" style={{}}>\r\n                    {/* ExportJSON */}\r\n                    < ExportJSONButton onClick={this.exportJSON} />\r\n                    {/* Reset */}\r\n                    <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n                    {/* Selected Color Panel */}\r\n                    <SelectedColorPanel selectedColor={baseColor} />\r\n                </div>\r\n\r\n                <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.colors.map((color, index) =>\r\n                        <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                        className={\"single-tile \" + (selectedColorIndex == index ? 'selected-tile' : '')}\r\n                            style={{\r\n                                backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                padding: '30px', display: 'block'\r\n                            }} />)\r\n                    }\r\n                    <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)}\r\n                        style={{ border: 'gray solid 1px', display: 'grid', verticalAlign: 'center', borderRadius: '50%' }} >\r\n                        <Icon type=\"plus\" style={{ fontSize: '24px', padding: '20px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from \"react\";\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ColorPicker />\r\n        <GeneratedColors />\r\n        <TryIt selectedColor={this.props.baseColor.HEXString} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Custom);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from \"../../../../redux/SelectedColorReducer\";\r\nimport { changeBaseColor } from \"../../../../redux/BaseColorReducer\";\r\nimport { exportJSON } from \"../../../../utilities/ExportJSON\";\r\nimport \"./PictureUpload.css\"\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch);\r\n};\r\n\r\nclass PictureUpload extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n    let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n    // By Hue Version\r\n    let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n    let arr12Colors = [];\r\n    let arr24Colors1 = [];\r\n    let arr48Colors1 = [];\r\n    let arr72Colors1 = [];\r\n    pushVersion1Function(arr12Colors, 12);\r\n    pushVersion1Function(arr24Colors1, 24);\r\n    pushVersion1Function(arr48Colors1, 48);\r\n    pushVersion1Function(arr72Colors1, 72);\r\n    let version1Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      arr[bucketNumber].totalHue += hsl.hue;\r\n      arr[bucketNumber].totalSat += hsl.sat;\r\n      arr[bucketNumber].totalLight += hsl.light;\r\n      arr[bucketNumber].number += 1;\r\n    };\r\n\r\n    // By Hue and Light Version\r\n    let pushVersion2Function = (arr, n) => {\r\n      for (var i = 0; i < n; i++) {\r\n        arr.push({\r\n          light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n          dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n        });\r\n      }\r\n    };\r\n    let arr12Colors2 = [];\r\n    let arr24Colors2 = [];\r\n    let arr48Colors2 = [];\r\n    let arr72Colors2 = [];\r\n    pushVersion2Function(arr12Colors2, 12);\r\n    pushVersion2Function(arr24Colors2, 24);\r\n    pushVersion2Function(arr48Colors2, 48);\r\n    pushVersion2Function(arr72Colors2, 72);\r\n    let version2Function = (hsl, arr, divider) => {\r\n      let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n      let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n      bucket.totalHue += hsl.hue;\r\n      bucket.totalSat += hsl.sat;\r\n      bucket.totalLight += hsl.light;\r\n      bucket.number += 1;\r\n    };\r\n\r\n    for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n      let r = pixelArray[i];\r\n      let g = pixelArray[i + 1];\r\n      let b = pixelArray[i + 2];\r\n      let hsl = RGBtoHSL(r, g, b);\r\n      // By Hue Version\r\n      version1Function(hsl, arr12Colors, 30);\r\n      version1Function(hsl, arr24Colors1, 15);\r\n      version1Function(hsl, arr48Colors1, 7.5);\r\n      version1Function(hsl, arr72Colors1, 5);\r\n\r\n      // By Hue and Light Version\r\n      version2Function(hsl, arr12Colors2, 30);\r\n      version2Function(hsl, arr24Colors2, 15);\r\n      version2Function(hsl, arr48Colors2, 7.5);\r\n      version2Function(hsl, arr72Colors2, 5);\r\n    }\r\n\r\n    // By Hue Version\r\n    let extractColorsFunction = obj => \"hsl(\" + obj.totalHue / obj.number + \", \" + obj.totalSat / obj.number + \"%, \" + obj.totalLight / obj.number + \"% )\";\r\n    let palette1 = arr12Colors.map(extractColorsFunction);\r\n    let palette2 = arr24Colors1.map(extractColorsFunction);\r\n    let palette3 = arr48Colors1.map(extractColorsFunction);\r\n    let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n    // By Hue and Light Version\r\n    let extractColorsFunction2 = arr => {\r\n      //looks better when dark goes first\r\n      let darkLightArr = arr.map(obj => {\r\n        let light = obj.light;\r\n        let lightStr = \"hsl(\" + light.totalHue / light.number + \", \" + light.totalSat / light.number + \"%, \" + light.totalLight / light.number + \"% )\";\r\n        let dark = obj.dark;\r\n        let darkStr = \"hsl(\" + dark.totalHue / dark.number + \", \" + dark.totalSat / dark.number + \"%, \" + dark.totalLight / dark.number + \"% )\";\r\n        return { dark: darkStr, light: lightStr };\r\n      });\r\n      let darks = darkLightArr.map(obj => obj.dark);\r\n      let lights = darkLightArr.map(obj => obj.light);\r\n      let palette = [];\r\n      palette = palette.concat(darks);\r\n      palette = palette.concat(lights);\r\n      return palette;\r\n    };\r\n    let palette5 = extractColorsFunction2(arr12Colors2);\r\n    let palette6 = extractColorsFunction2(arr24Colors2);\r\n    let palette7 = extractColorsFunction2(arr48Colors2);\r\n    let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n    this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) { palettePieces = palette.map(c => <div className=\"picture-single-tile\" style={{ backgroundColor: c }} />) }\r\n    return palettePieces;\r\n  };\r\n\r\n  render() {\r\n    const { palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8 } = this.state\r\n\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) { $imagePreview = (<img id=\"uploaded-image\" src={imagePreviewUrl} style={{ width: \"400px\" }} />); }\r\n    else { $imagePreview = <span />; }\r\n\r\n    return (\r\n      <div className=\"previewComponent element-holder\">\r\n        <div style={{ display: \"inline-block\", verticalAlign: 'top' }}>\r\n          <h2>Please select an Image for Preview</h2>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={e => this.handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={e => this.handleSubmit(e)}> Generate Palette </button>\r\n          </form>\r\n          <br />\r\n          <div className=\"imgPreview\"> {$imagePreview} </div>\r\n          <canvas id=\"canv\" />\r\n        </div>\r\n        {this.state.generated && (\r\n          <div id=\"generated-palettes-holder\">\r\n            <h3> Version 1 (12, by Hue) </h3> <div> {this.getTiles(palette1)} </div>\r\n            <h3> Version 2 (24, by Hue) </h3> <div> {this.getTiles(palette2)} </div>\r\n            <h3> Version 3 (48, by Hue) </h3> <div> {this.getTiles(palette3)} </div>\r\n            <h3> Version 4 (72, by Hue) </h3> <div> {this.getTiles(palette4)} </div>\r\n            <h3> Version 5 (12, by Hue and Light) </h3> <div> {this.getTiles(palette5)} </div>\r\n            <h3> Version 6 (24, by Hue and Light) </h3> <div> {this.getTiles(palette6)} </div>\r\n            <h3> Version 7 (48, by Hue and Light) </h3> <div> {this.getTiles(palette7)} </div>\r\n            <h3> Version 8 (72, by Hue and Light) </h3> <div> {this.getTiles(palette8)} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n","import React, { Component } from \"react\";\r\nimport TryIt from \"../../../components/TryIt/TryIt\";\r\nimport PictureUpload from \"./components/PictureUpload\";\r\nimport \"./Picture.css\"\r\n\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picture-page\">\r\n        <PictureUpload /><TryIt />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport HSLPaletteGenerator from \"../../../../utilities/HSLPaletteGenerator\";\r\nimport { getChunks } from \"../../../../utilities/ArrayMethods\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n//import { Label } from '../../../../components/Label'\r\nimport { ExportJSONButton } from '../../../../components/ExportJSONButton'\r\nimport { ResetColorsButton } from '../../../../components/ResetColorsButton'\r\nimport { SelectedColorPanel } from '../../../../components/SelectedColorPanel'\r\nimport { Icon, Slider, Select, Tooltip } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport './HSLFilters.css'\r\nimport SelectMode from \"./SelectMode/SelectMode\"\r\nimport { Card, Label } from \"@blueprintjs/core\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    baseColor: state.BaseColorReducer.baseColor,\r\n    selected: state.SelectedColorReducer.selected\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n    clickedColor: 0\r\n  };\r\n\r\n  componentDidUpdate = () => { }\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  // FILTER HANDLERS\r\n  handleHueChange = value => this.setState({ hueChange: value })\r\n  handleSatChange = value => this.setState({ satChange: value })\r\n  handleLightChange = value => this.setState({ lightChange: value })\r\n  handleHueStepChange = value => this.setState({ hueStep: value })\r\n  handleSatStepChange = value => this.setState({ satStep: value })\r\n  handleLightStepChange = value => this.setState({ lightStep: value })\r\n  handleNumberOfColorsChange = n => this.setState({ numberOfColors: n })\r\n\r\n  // EXPORT JSON, RESET BUTTONS HANDLERS\r\n  handleResetButtonClick = () => this.setFilters(27, 0, 20, 1, 1, 1, 72)\r\n\r\n  handleExportJSON_ButtonClick = () => {\r\n    let colorElements = document.getElementById(\"generated-tiles\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].style.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  // SLIDER INPUT\r\n  getSliderInput = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" >{label} </Label>\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n    </div>\r\n  getSliderInputRight = (value, onChange, min, max, label) =>\r\n    <div className=\"hsl-slider\">\r\n      <Label className=\"slider-label\" style={{textAlign:'right'}}>{label} </Label>\r\n      <input className=\"slider-input-txt\" type='number' min={min} max={max} onChange={(e) => onChange(e.target.value)} value={value} />\r\n      <Slider className=\"slider-input\" min={min} max={max} onChange={onChange} value={value} />\r\n    </div>\r\n\r\n  // TILES PART\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n  getTilesRow = (colors, rowNumber) => colors.map((color, index) => {\r\n    index = index + colors.length * rowNumber\r\n    return <div className={\"single-tile \" + (this.state.clickedColor == index ? 'selected-tile' : '')} onClick={() => this.handleSelectColor(color, index)} style={{ backgroundColor: color }} key={index + color} />\r\n  })\r\n  getTiles = () => {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let palette = new HSLPaletteGenerator(this.props.baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n    return this.getTilesRow(palette, 0)\r\n  }\r\n\r\n  render() {\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = this.state\r\n    let selectedColor = this.props.selected\r\n    //let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (\r\n      <Card id=\"hsl-filters-holder\" className=\"element-holder\" >\r\n        <div>\r\n\r\n          {/* Mode Select */}\r\n          <SelectMode />\r\n\r\n          {/* HSL FILTERS */}\r\n          <div className='bottom-bordered hsl-advanced-filters'>\r\n            {/* Changes */}\r\n            <div >\r\n              {this.getSliderInput(hueChange, this.handleHueChange, 0, 120, 'Hue Change')}\r\n              {this.getSliderInput(satChange, this.handleSatChange, 0, 100, 'Saturation Change')}\r\n              {this.getSliderInput(lightChange, this.handleLightChange, 0, 100, 'Light Change')}\r\n            </div>\r\n            {/* Steps */}\r\n            <div>\r\n              {this.getSliderInput(hueStep, this.handleHueStepChange, 1, 100, 'Hue Step')}\r\n              {this.getSliderInput(satStep, this.handleSatStepChange, 1, 100, 'Saturation Step')}\r\n              {this.getSliderInput(lightStep, this.handleLightStepChange, 1, 100, 'Light Step')}\r\n            </div>\r\n          </div>\r\n\r\n          {/* NUMBER OF COLORS, SELECTED COLOR VALUE, EXPORT JSON, RESET BUTTON */}\r\n          <div className=\"vertical-padding bottom-bordered\" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: \"12px\" }}>\r\n            {/* Number Of Colors */}\r\n            <div id='number-of-colors-input'> {this.getSliderInput(numberOfColors, this.handleNumberOfColorsChange, 6, 181, 'Number of Colors')} </div>\r\n\r\n            <div className=\" tiles-actions-bar\" style={{ marginBottom: \"0\", padding: \"0\" }}>\r\n              {/* ExportJSON */}\r\n              < ExportJSONButton onClick={this.handleExportJSON_ButtonClick} />\r\n              {/* Reset */}\r\n              <ResetColorsButton onClick={this.handleResetButtonClick} />\r\n              {/* Selected Color Panel */}\r\n              <SelectedColorPanel selectedColor={selectedColor} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* GENERATED TILES */}\r\n          <div class=\"generated-tiles\"> {this.getTiles()} </div>\r\n        </div>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' render={() => (<Redirect to='/generate/hsl' />)}  />\r\n      <Route exact path='/generate/hsl' component={HSL} />\r\n      <Route path='/generate/custom' component={Custom} />\r\n      <Route path='/generate/picture' component={Picture} />\r\n      <Route path='/community' component={Community} />\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <Main />\n       {/* <footer /> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    \n      <App />\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}