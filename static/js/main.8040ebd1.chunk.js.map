{"version":3,"sources":["components/account/Login.js","components/account/Register.js","components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/Label.js","components/color-picker/ColorPicker.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","pages/color-generation/HSL/components/HSLFilters.js","components/TryIt.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","firebase/context.js","firebase/Firebase.js","firebase/index.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["React","Component","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","buttonStyle","fontSize","color","fontWeight","margin","Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","react_default","a","createElement","style","padding","display","justifyContent","Link","to","Color","v1","v2","v3","colorFormat","this","Object","classCallCheck","createChangedHSLColor","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","type","initial_state","baseColor","Label","props","class","title","ColorPicker","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","hexValue","componentDidMount","generateMainCanvas","generateSatCanvas","document","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","ctx","getElementById","getContext","i","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","j","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","clientX","clientY","handleMouseMoveMainCanvas","rect","getBoundingClientRect","x","left","y","top","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","handleFormInput","getNumberPickerInput","id","val","onChange","input","size","width","value","setFromHue","e","target","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","test","_baseColor$hsl","_baseColor$rgb","height","border","borderColor","borderRadius","marginLeft","marginTop","backgroundColor","position","zIndex","lib","time","handler","float","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","marginRight","Label_Label","connect","BaseColorReducer","dispatch","bindActionCreators","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","RadioGroup","Radio","Group","HSLFilters","hueStep","satStep","lightStep","numberOfColors","clickedColor","selectedPreset","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","selectPreset","preset","setAnalogous","setAdjacent","setTetrad","setTriad","reset","setFilters","setMonochromatic","handleSelectColor","index","colorElements","getElementsByTagName","attributes","_this2","anyColor","_this$state","borderBottom","paddingBottom","es_radio","es_button","onClick","icon","Array","apply","map","el","floor","newColor","TryIt","initialState","setColor","compName","stopPropagation","newColors","components","_React$createElement","appBar","header","background","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","selectedColorFont","textAlign","card","defineProperty","fontFamily","lineHeight","onMouseOver","SelectedColorReducer","HSL","verticalAlign","borderBottomLeftRadius","borderTopLeftRadius","color_picker_ColorPicker","components_HSLFilters","borderBottomRightRadius","borderTopRightRadius","components_TryIt","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","push","console","log","selectedColorIndex","Grid_default","container","spacing","item","xs","flexWrap","Add_default","Custom","CardContent_default","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","handleSubmit","preventDefault","img","Image","src","canvas","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","generatedPalette1","generatedPalette2","generatedPalette3","generatedPalette4","extractColorsFunction2","darkLightArr","lightStr","darks","lights","palette","concat","generatedPalette5","generatedPalette6","generatedPalette7","generatedPalette8","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","$imagePreview","className","palettePieces1","palettePieces2","palettePieces3","palettePieces4","palettePieces5","palettePieces6","palettePieces7","palettePieces8","onSubmit","Picture","components_PictureUpload","Community","palettes","Card_default","Main","Switch","Route","exact","path","component","FirebaseContext","createContext","config","Firebase","doCreateUserWithEmailAndPassword","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","App","context","Consumer","firebase","href","rel","components_Header","Main_Main","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","BrowserRouter","Provider","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8040ebd1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleLoginButtonClick = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Login</Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Login </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Username or Email\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            \r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nexport default class Register extends React.Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    open: false\r\n  };\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => this.setState({ ...INITIAL_STATE }))\r\n      .catch(error => this.setState({ error }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => this.setState({ [event.target.name]: event.target.value });\r\n  handleClickOpen = () => this.setState({ open: true });\r\n  handleClose = () => this.setState({ open: false });\r\n  handleLoginButtonClick = () => { };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Sign Up</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\"        >\r\n          <DialogTitle id=\"form-dialog-title\">Sign Up </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <form onSubmit={this.onSubmit}>\r\n              <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Full Name\" />\r\n              <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\" />\r\n              <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\r\n              <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirm Password\" />\r\n              <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Username\" type=\"text\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email\" type=\"email\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Password\" type=\"password\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Confirm Password\" type=\"password\" fullWidth />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">Create Account</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Login from \"./account/Login\"\r\nimport Register from \"./account/Register\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon, Button } from 'antd';\r\n\r\nconst buttonStyle = { fontSize: '18px', color: 'white', fontWeight: '600', margin: '0 24px' }\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ padding: '24px', display: 'flex', justifyContent: 'center' }}>\r\n        <Link style={buttonStyle} to='/generate/hsl'> From HSL {/*<Icon type=\"build\" />*/} </Link>\r\n        <Link style={buttonStyle} to='/generate/custom'> Custom </Link>\r\n        <Link style={buttonStyle} to='/generate/picture'> From Picture {/*<Icon type=\"picture\" /> */} </Link>\r\n        {/*<Button component={Link} to='/community'>Community</Button>\r\n            }\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\"> Awesome CPG </Typography>\r\n           \r\n            {/* <div>\r\n              <Button aria-owns={newPaletteAnchor ? \"simple-menu\" : null} aria-haspopup=\"true\" onClick={this.handleClickPalette}> New Palette</Button>\r\n              <Menu id=\"new-palette\" anchorEl={newPaletteAnchor} open={Boolean(newPaletteAnchor)} onClose={this.handleClosePalette} >\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/hsl'>From HSL</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/custom'>Custom</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/picture'>From Picture</MenuItem>\r\n              </Menu>\r\n           </div>*/}\r\n\r\n        {/*<Button component={Link} to='/generate/hsl'>From HSL</Button>\r\n            <Button component={Link} to='/generate/custom'>Custom</Button>\r\n            <Button component={Link} to='/generate/picture'>From Picture</Button>\r\n            <Button component={Link} to='/community'>Community</Button>\r\n            <Login />\r\n            <Register firebase={this.props.firebase} />\r\n          </Toolbar>\r\n        </AppBar>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color(200, 20, 50, 'HSL') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import React from \"react\";\r\n\r\nexport const Label = (props) => \r\n<div class=\"ant-form-item-label\">\r\n<label class=\"\" title={props.title} style={{color:'black'}}><i>{props.title}</i></label>\r\n</div>","import React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { Label } from '../Label';\r\nimport { Input, Card } from 'antd';\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    allowClrChange: false,\r\n    allowSatChange: false,\r\n    mouseDownMainCanvas: false,\r\n    mouseDownSatCanvas: false,\r\n\r\n    pickerCirclePositionX: 0,\r\n    pickerCirclePositionY: 0,\r\n    saturationRectPositionY: 0,\r\n\r\n    selectedColor: new Color(200, 20, 50, 'HSL'),\r\n    hexValue: new Color(200, 20, 50, 'HSL').HEXString.substring(1)\r\n  };\r\n  componentDidMount = () => {\r\n    this.generateMainCanvas(this.props.baseColor);\r\n    this.generateSatCanvas(this.props.baseColor);\r\n    document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n    document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n  };\r\n\r\n  generateMainCanvas = baseColor => {\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let i = 0; i < 360; i += 1) {\r\n      var gradient = ctx.createLinearGradient(i, 0, i, 200);\r\n      gradient.addColorStop(0, \"hsl(\" + i + \",\" + sat + \"%,0%)\");\r\n      gradient.addColorStop(0.5, \"hsl(\" + i + \",\" + sat + \"%,50%)\");\r\n      gradient.addColorStop(1, \"hsl(\" + i + \",\" + sat + \"%,100%)\");\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(i, 0, i, 200);\r\n    }\r\n  };\r\n  generateSatCanvas = baseColor => {\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202; j += 2) {\r\n      for (let i = 0; i < 10; i += 1) {\r\n        ctx.fillStyle = \"hsl(\" + hue + \", \" + j / 2 + \"%, \" + light + \"%)\";\r\n        ctx.fillRect(i, j, i, j + 2);\r\n      }\r\n    }\r\n  };\r\n\r\n  enableColorChange = () => this.setState({ allowClrChange: true });\r\n  disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n  handleMouseDownMainCanvas = evt => {\r\n    this.setMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  handleMouseMoveMainCanvas = evt => {\r\n    if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n      this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n  setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n  setColorFromMainCanvas = (clientX, clientY) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let hue = Math.round(x);\r\n    let sat = this.props.baseColor.hsl.sat;\r\n    let light = Math.round(y / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.setState({ selectedColor: color })\r\n    this.props.changeBaseColor(color);\r\n    this.generateSatCanvas(color);\r\n  };\r\n\r\n  handleMouseDownSatCanvas = evt => {\r\n    this.setSatMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  handleMouseMoveSatCanvas = evt => {\r\n    if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n      this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n  setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n  setColorFromSatCanvas = clientY => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = this.props.baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.props.changeBaseColor(color);\r\n    this.setState({ selectedColor: color })\r\n    this.generateMainCanvas(color);\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    this.generateMainCanvas(color);\r\n    this.generateSatCanvas(color);\r\n    this.setState({ hexValue: color.HEXString.substring(1) })\r\n  };\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <Input size=\"small\" style={{ width: '60px' }} type=\"number\" id={id} min=\"0\" max={max} value={val} onChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, e.target.value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, e.target.value, \"HSL\"))\r\n  setFromRed = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, e.target.value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, e.target.value, \"RGB\"))\r\n  setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7)\r\n    {  this.setState({ hexValue: val })\r\n    var re = /[0-9A-Fa-f]{6}/g;\r\n    if (re.test(val)) {\r\n      this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n    }\r\n  }\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = baseColor.HEXString;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {/*<h2 style={{ textAlign: 'left' }} >Pick Color</h2>*/}\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <div id=\"pickerCircle\"\r\n              style={{\r\n                width: \"16px\", height: \"16px\", border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"white\", borderRadius: \"15px\",\r\n                marginLeft: hue - 8 + \"px\", marginTop: light * 2 - 8 + \"px\",\r\n                backgroundColor: hexString, position: \"absolute\", zIndex: 100\r\n              }}\r\n            />\r\n            <Throttle time=\"20\" handler=\"onMouseMove\">\r\n              <canvas height=\"200\" width=\"360\" id=\"main-canvas-color-picker\"\r\n                style={{ display: \"inline\", position: \"relative\", float: \"left\" }}\r\n                onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n            </Throttle>\r\n          </div>\r\n          <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\r\n            <div id=\"saturationCircle\"\r\n              style={{\r\n                position: \"absolute\", display: \"inline\", marginLeft: \"-6px\", width: \"24px\", height: \"7px\",\r\n                border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"#d9d9d9\", borderRadius: \"3px\",\r\n                marginTop: sat * 2 - 5 + \"px\", backgroundColor: hexString\r\n              }} />\r\n            <Throttle time=\"20\" handler=\"onMouseMove\">\r\n              <canvas height=\"200\" width=\"10\" id=\"saturation-canvas-color-picker\"\r\n                style={{\r\n                  display: \"inline\", marginRight: \"7px\", border: \"1px solid #d9d9d9\"\r\n                }}\r\n                onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas} onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n            </ Throttle>\r\n          </div>\r\n          <div style={{ width: '400px' }}>\r\n            <div style={{ display: 'inline-block', width: '83px', margin: '24px' }}>\r\n              <div> <Label title=\"H\" />{this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n              <div> <Label title=\"S\" />{this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n              <div> <Label title=\"L\" />{this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'inline-block', width: '83px', margin: '18px' }}>\r\n              <div> <Label title=\"R\" />{this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n              <div> <Label title=\"G\" />{this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n              <div> <Label title=\"B\" />{this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n            </div>\r\n            <div style={{ display: 'inline-block', margin: '18px', width: '113px' }}>\r\n              <div style={{ padding: '35px 56px', backgroundColor: hexString, display: 'inline-block' }} />\r\n              <div style={{ display: 'inline-block' }}>\r\n                <Label title=\"Hex #\" />\r\n                <Input size=\"small\" style={{ width: \"62px\" }} type=\"text\" id=\"Hex\" value={this.state.hexValue} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div style={{ width: '100%', display: 'block' }}>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color(200, 20, 50, 'HSL').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Label } from '../../../../components/Label'\r\nimport { Input, Button, Icon } from 'antd';\r\nimport { Radio } from 'antd';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 10,\r\n    satChange: 0,\r\n    lightChange: 8,\r\n    hueStep: 10,\r\n    satStep: 1,\r\n    lightStep: 1,\r\n    numberOfColors: 126,\r\n\r\n    clickedColor: 0,\r\n    selectedPreset: 'None'\r\n  };\r\n  handleHueChange = e => this.setState({ hueChange: e.target.value, selectedPreset: 'None' })\r\n  handleSatChange = e => this.setState({ satChange: e.target.value, selectedPreset: 'None' })\r\n  handleLightChange = e => this.setState({ lightChange: e.target.value, selectedPreset: 'None' })\r\n  handleHueStepChange = e => this.setState({ hueStep: e.target.value, selectedPreset: 'None' })\r\n  handleSatStepChange = e => this.setState({ satStep: e.target.value, selectedPreset: 'None' })\r\n  handleLightStepChange = e => this.setState({ lightStep: e.target.value, selectedPreset: 'None' })\r\n  handleNumberOfColorsChange = e => {\r\n    let n = e.target.value\r\n    if ((n > 0 && n < 144) || (n == ''))\r\n      this.setState({ numberOfColors: n, selectedPreset: 'None' })\r\n  }\r\n\r\n  selectPreset = e => {\r\n    let preset = e.target.value\r\n    this.setState({ selectedPreset: preset })\r\n    switch (preset) {\r\n      case \"Analogous\": this.setAnalogous();\r\n      case \"Adjacent\": this.setAdjacent();\r\n      case \"Tetrad\": this.setTetrad();\r\n      case \"Triad\": this.setTriad();\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ selectedPreset: 'None' })\r\n    this.setFilters(10, 0, 8, 1, 1, 1, 126)\r\n  }\r\n\r\n  setAnalogous = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setTetrad = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setMonochromatic = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setAdjacent = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setTriad = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n\r\n  exportJSON = () => {\r\n    let colorElements = document.getElementById(\"generated-colors\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].attributes.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    let hue = baseColor.hsl.hue;\r\n    let sat = baseColor.hsl.sat;\r\n    let light = baseColor.hsl.light;\r\n\r\n    let anyColor = new Color(0, 0, 0, 'RGB')\r\n\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, selectedPreset, numberOfColors, clickedColor } = this.state\r\n\r\n    return (\r\n      <div style={{ width: '700px' }}>\r\n        <div>\r\n\r\n          {/* <h2 style={{ textAlign: 'left' }}> Filters </h2> */}\r\n\r\n          <h3 style={{ borderBottom: '1px solid #e8e8e8', paddingBottom: '12px' }}>\r\n            <RadioGroup value={selectedPreset} onChange={this.selectPreset} style={{ display: 'flex' }} >\r\n              <Radio value={'None'}>None</Radio>\r\n              <Radio value={'Analogous'}>Analogous</Radio>\r\n              <Radio value={'Adjacent'}>Adjacent</Radio>\r\n              <Radio value={'Triad'}>Triad</Radio>\r\n              <Radio value={'Tetrad'}>Tetrad</Radio>\r\n            </RadioGroup>\r\n          </h3>\r\n          <br />\r\n          <div>\r\n            <span style={{ float: 'right' }}><span style={{fontWeight:'bold'}}>Steps: </span>\r\n              <span style={{ fontSize: '14px', marginLeft: '12px' }}>\r\n                <span>\r\n                  <Label title=\"H\" />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={hueStep} onChange={this.handleHueStepChange} />\r\n                </span>\r\n                <span style={{ margin: '18px' }}>\r\n                  <Label title=\"S\" style={{ marginLeft: '18px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={satStep} onChange={this.handleSatStepChange} />\r\n                </span>\r\n                <span>\r\n                  <Label title=\"L\" style={{ marginLeft: '18px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={lightStep} onChange={this.handleLightStepChange} />\r\n                </span>\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ borderBottom: '1px solid #e8e8e8', paddingBottom: '12px' }}> <span style={{fontWeight:'bold'}}> Changes: </span>\r\n            <span style={{ fontSize: '14px', marginLeft: '12px' }}>\r\n              <span>\r\n                <Label title=\"H\" />\r\n                < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={hueChange} onChange={this.handleHueChange} />\r\n              </span>\r\n              <span style={{ margin: '18px' }}>\r\n                <Label title=\"S\" style={{ margin: '18px' }} />\r\n                < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={satChange} onChange={this.handleSatChange} />\r\n              </span>\r\n              <span>\r\n                <Label title=\"L\" style={{ marginLeft: '18px' }} />\r\n                < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={lightChange} onChange={this.handleLightChange} />\r\n              </span>\r\n            </span>\r\n\r\n          </div>\r\n          <br />\r\n\r\n\r\n          <Button style={{ float: 'right', marginLeft: '18px' }} onClick={this.exportJSON}> Export JSON</Button>\r\n          <Button onClick={this.reset} style={{ float: 'right' }}> <Icon type=\"reload\" size=\"small\" /> </Button>\r\n\r\n          <h3> <Label title=\"Number of Colors\" style={{ marginLeft: '18px' }} />\r\n            < Input size=\"small\" style={{ width: '60px', marginLeft: '18px' }} type=\"number\" min=\"0\" max='360' value={numberOfColors} onChange={this.handleNumberOfColorsChange} />\r\n          </h3>\r\n\r\n        </div>\r\n\r\n\r\n        <br />\r\n        <div id=\"generated-colors\" style={{ height: '330px' }}>\r\n          {\r\n            Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n              let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n              let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 101\r\n              let l = (parseInt(light) + (Math.floor(index / lightStep) * lightChange)) % 101\r\n              let newColor = anyColor.HSLtoHex(h, s, l)\r\n              return <div onClick={() => this.handleSelectColor(newColor, index)}\r\n                style={{\r\n                  backgroundColor: newColor, borderRadius: clickedColor == index ? '35px' : '0',\r\n                  padding: '25px', display: 'inline-block', margin: '-2.5px 0'\r\n                }} ></div>\r\n            })\r\n          }\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Icon } from 'antd';\r\nimport Color from '../utilities/Color'\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\nconst selectButtonStyle = { color: 'black', padding: '4px', borderRadius: '14px', margin: '5px' }\r\n\r\nconst SetButton = (props) => {\r\n    let color = new Color(props.background, 0, 0, 'Hex')\r\n    let fontColor = color.hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (<Button onClick={props.onClick} style={{ ...selectButtonStyle, backgroundColor: props.background, color: fontColor }}>\r\n        <span style={{ margin: '0 10px' }}> {props.children} </span></Button>)\r\n}\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                appBar: '#ffffff',\r\n                title: '#353535',\r\n                header: '#353535',\r\n                header2: '#353535',\r\n                background: '#ffffff',\r\n                primaryButton: '#ffffff',\r\n                secondaryButton: '#ffffff',\r\n                successButton: '#ffffff',\r\n                dangerButton: '#ffffff',\r\n                infoButton: '#ffffff',\r\n\r\n                primaryButtonFont: '#353535',\r\n                secondaryButtonFont: '#353535',\r\n                successButtonFont: '#353535',\r\n                dangerButtonFont: '#353535',\r\n                infoButtonFont: '#353535',\r\n                paragraph: '#353535',\r\n            }\r\n        };\r\n    }\r\n\r\n    reset = () => this.setState(this.initialState)\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.props.selected\r\n        this.setState({ components: newColors })\r\n    }\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.props.selected\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <div style={{ width: '450px',  /*background: '#f5f5f5',*/ }}>\r\n                <h2>\r\n                   {/* Apply Color*/}\r\n                    <div\r\n                        style=\r\n                        {{\r\n                            backgroundColor: selectedColor, padding: '10px 20px', margin: '15px', textAlign: 'center', color: selectedColorFont,\r\n                            border: '1px solid ' + selectedColorFont, display: 'inline', fontSize: '14px'\r\n                        }}>\r\n                        {selectedColor}\r\n                    </div>\r\n                   {/* <Button style={{ float: 'right', marginLeft: '5px' }} onClick={() => exportJSON(components)}> ExportJSON  </Button>*/}\r\n                    <Button style={{ float: 'right' }} onClick={this.reset}> <Icon type=\"reload\" />  </Button>\r\n                </h2>\r\n\r\n                <br />\r\n\r\n                <div style={{ width: '450px', display: 'inline-block' }}>\r\n                    <Card style={{}} id=\"try-background\"\r\n                        onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background, borderColor:'black' }}\r\n                        headStyle={{ backgroundColor: appBar }}\r\n                    >\r\n                        <h2 id=\"try-title\"\r\n                            style={{\r\n                                color: title, fontFamily: \"'Lora', serif\",\r\n                                borderBottom: '1px solid #e8e8e8', paddingBottom: '12px',\r\n                            }}\r\n                            onClick={(e) => this.setColor(e, 'title')}> Title</h2>\r\n                        <br />\r\n                        <h2 style={{ color: header, fontFamily: \"'Lora', serif\" }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h2>\r\n                        <p id=\"try-text\" \r\n                        style={{ color: paragraph, fontFamily: \"'Nanum Gothic', sans-serif\", lineHeight:'2' }} \r\n                        onClick={(e) => this.setColor(e, 'paragraph')}>\r\n                            Click here to apply the colors and see how it will look.\r\n                        <br />\r\n                            <br />\r\n                            1. Pick a base color; <br />\r\n                            2. Apply HSL Filters: For every consecutive color choose Hue, Saturation and Light changes.\r\n                            Change step values to specify how frequently the change will be applied (e.g. hue value will change every 2nd square);\r\n                           <br />\r\n                            3. Have fun!\r\n                            </p>\r\n                        <br />\r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'primaryButton')} id=\"try-button-primary\"\r\n                                style={{ backgroundColor: primaryButton, color: primaryButtonFont }}>\r\n                                <div onClick={(e) => this.setColor(e, 'primaryButtonFont')} onMouseOver={(e) => e.stopPropagation()} id=\"try-button-primary-font\">Primary </div>\r\n                            </Button>\r\n                            <Button\r\n                                id=\"try-button-secondary\" onClick={(e) => this.setColor(e, 'secondaryButton')}\r\n                                style={{ backgroundColor: secondaryButton, color: secondaryButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'secondaryButtonFont')} id=\"try-button-secondary-font\"> Secondary</div>\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'successButton')} id=\"try-button-success\"\r\n                                style={{ backgroundColor: successButton, color: successButtonFont }}>\r\n                                <div onClick={(e) => this.setColor(e, 'successButtonFont')} id=\"try-button-success-font\"><Icon type=\"check-circle\" /> Success</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'infoButton')}\r\n                                id=\"try-button-info\" style={{ backgroundColor: infoButton, color: infoButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'infoButtonFont')} id=\"try-button-info-font\"><Icon type=\"info-circle\" /> Info</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'dangerButton')}\r\n                                id=\"try-button-danger\" style={{ backgroundColor: dangerButton, color: dangerButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'dangerButtonFont')} id=\"try-button-danger-font\"><Icon type=\"warning\" /> Danger</div>\r\n                            </Button>\r\n                        </div>\r\n                    </Card >\r\n                </div>\r\n\r\n                {/*}\r\n                <div style={{ display: 'inline-block', verticalAlign: 'top', width: '320px', marginLeft: '24px' }}>\r\n                    {/*} <h3> Selected Color: </h3>\r\n                    <h3\r\n                        style=\r\n                        {{\r\n                            backgroundColor: selectedColor, padding: '15px 0', textAlign: 'center', color: selectedColorFont,\r\n                            border: '1px solid ' + selectedColorFont\r\n                        }}>\r\n                        {selectedColor}\r\n                    </h3>\r\n                    \r\n\r\n                    <h3 > Backgrounds:</h3>\r\n                    <SetButton background={appBar} onClick={() => this.setColor('appBar')}> App Bar </SetButton>\r\n                    <SetButton background={background} onClick={() => this.setColor('background')}> Background </SetButton>\r\n                    <SetButton background={primaryButton} onClick={() => this.setColor('primaryButton')}> Primary Button</SetButton>\r\n                    <SetButton background={secondaryButton} onClick={() => this.setColor('secondaryButton')}> Secondary Button</SetButton>\r\n                    <SetButton background={successButton} onClick={() => this.setColor('successButton')}> Success Button </SetButton>\r\n                    <SetButton background={infoButton} onClick={() => this.setColor('infoButton')}> Info Button </SetButton>\r\n                    <SetButton background={dangerButton} onClick={() => this.setColor('dangerButton')}> Danger Button </SetButton>\r\n\r\n                    <h3 > Fonts:</h3>\r\n                    <SetButton background={title} onClick={() => this.setColor('title')}> App Bar </SetButton>\r\n                    <SetButton background={header} onClick={() => this.setColor('header')}> Header </SetButton>\r\n                    <SetButton background={paragraph} onClick={() => this.setColor('paragraph')}> Paragraph </SetButton>\r\n                    <SetButton background={primaryButtonFont} onClick={() => this.setColor('primaryButtonFont')}> Primary Button  </SetButton>\r\n                    <SetButton background={secondaryButtonFont} onClick={() => this.setColor('secondaryButtonFont')}> Secondary Button  </SetButton>\r\n                    <SetButton background={successButtonFont} onClick={() => this.setColor('successButtonFont')}> Success Button  </SetButton>\r\n                    <SetButton background={infoButtonFont} onClick={() => this.setColor('infoButtonFont')}> Info Button  </SetButton>\r\n                    <SetButton background={dangerButtonFont} onClick={() => this.setColor('dangerButtonFont')}> Danger Button  </SetButton>\r\n                </div>\r\n                    */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\n\r\nclass HSL extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'inline-block', margin: 'auto' }}>\r\n        <div style={{\r\n          display: 'inline-block', verticalAlign: 'top', background: 'white',\r\n          borderBottomLeftRadius: '15px', borderTopLeftRadius: '15px', padding: '48px', height: '840px'\r\n        }}>\r\n          <ColorPicker /> </div>\r\n        <div style={{\r\n          display: 'inline-block', verticalAlign: 'top', background: 'white',\r\n          borderRadius: '0px', marginLeft: '6px', padding: '48px 0 48px 48px', height: '840px'\r\n        }}>\r\n          <HSLFilters /> </div>\r\n        <div\r\n          style={{\r\n            display: 'inline-block', verticalAlign: 'top',\r\n            background: 'white', borderBottomRightRadius: '15px', borderTopRightRadius: '15px', padding: '48px', height: '840px'\r\n          }}>\r\n          <TryIt /></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HSL;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0};\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    exportJSON = () => exportJSON(this.state.colors)\r\n\r\n    render() {\r\n        console.log(this.state.colors)\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        return (\r\n            <Grid container spacing={8} style={{ width: '400px' }}>\r\n                <Grid item xs={12} ><button onClick={this.exportJSON}> Export JSON</button></Grid>\r\n                <Grid item xs={12} >\r\n                    <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                        {this.state.colors.map((color, index) =>\r\n                            <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                                style={{\r\n                                    backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                    borderRadius: selectedColorIndex == index ? '30px' : '0', padding: '30px', display: 'block'\r\n                                }} ></div>)\r\n                        }\r\n                        <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)} style={{ border: 'gray solid 1px', display: 'block', width: '60px', height: '60px' }} >\r\n                            <AddIcon style={{ margin: 'auto', marginTop: '15px' }} />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <ColorPicker />\r\n            <GeneratedColors />\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Custom;\r\n","import ImageUploader from 'react-images-upload';\r\n\r\nimport React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass PictureUpload extends Component {\r\n    state = {\r\n        palette1: [], palette2: [], palette3: [], palette4: [],\r\n        palette5: [], palette6: [], palette7: [], palette8: [],\r\n        clickedColor: 0, image: '', imagePreviewUrl: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let img = new Image()\r\n        img.src = this.state.imagePreviewUrl\r\n        let canvas = document.createElement('canvas')\r\n        canvas.width = img.width;\r\n        canvas.height = img.height\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.drawImage(img, 0, 0)\r\n        let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data\r\n\r\n        // By Hue Version\r\n        let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } }\r\n        let arr12Colors = []\r\n        let arr24Colors1 = []\r\n        let arr48Colors1 = []\r\n        let arr72Colors1 = []\r\n        pushVersion1Function(arr12Colors, 12)\r\n        pushVersion1Function(arr24Colors1, 24)\r\n        pushVersion1Function(arr48Colors1, 48)\r\n        pushVersion1Function(arr72Colors1, 72)\r\n        let version1Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            arr[bucketNumber].totalHue += hsl.hue\r\n            arr[bucketNumber].totalSat += hsl.sat\r\n            arr[bucketNumber].totalLight += hsl.light\r\n            arr[bucketNumber].number += 1\r\n        }\r\n\r\n        // By Hue and Light Version\r\n        let pushVersion2Function = (arr, n) => {\r\n            for (var i = 0; i < n; i++) {\r\n                arr.push({\r\n                    light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n                    dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n                });\r\n            }\r\n        }\r\n        let arr12Colors2 = []\r\n        let arr24Colors2 = []\r\n        let arr48Colors2 = []\r\n        let arr72Colors2 = []\r\n        pushVersion2Function(arr12Colors2, 12)\r\n        pushVersion2Function(arr24Colors2, 24)\r\n        pushVersion2Function(arr48Colors2, 48)\r\n        pushVersion2Function(arr72Colors2, 72)\r\n        let version2Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark\r\n            bucket.totalHue += hsl.hue\r\n            bucket.totalSat += hsl.sat\r\n            bucket.totalLight += hsl.light\r\n            bucket.number += 1\r\n        }\r\n\r\n        for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n            let r = pixelArray[i];\r\n            let g = pixelArray[i + 1];\r\n            let b = pixelArray[i + 2];\r\n            let hsl = RGBtoHSL(r, g, b)\r\n            // By Hue Version\r\n            version1Function(hsl, arr12Colors, 30)\r\n            version1Function(hsl, arr24Colors1, 15)\r\n            version1Function(hsl, arr48Colors1, 7.5)\r\n            version1Function(hsl, arr72Colors1, 5)\r\n\r\n            // By Hue and Light Version\r\n            version2Function(hsl, arr12Colors2, 30)\r\n            version2Function(hsl, arr24Colors2, 15)\r\n            version2Function(hsl, arr48Colors2, 7.5)\r\n            version2Function(hsl, arr72Colors2, 5)\r\n        }\r\n\r\n        // By Hue Version\r\n        let extractColorsFunction = obj => 'hsl(' + obj.totalHue / obj.number + ', ' + obj.totalSat / obj.number + '%, ' + obj.totalLight / obj.number + '% )'\r\n        let generatedPalette1 = arr12Colors.map(extractColorsFunction)\r\n        let generatedPalette2 = arr24Colors1.map(extractColorsFunction)\r\n        let generatedPalette3 = arr48Colors1.map(extractColorsFunction)\r\n        let generatedPalette4 = arr72Colors1.map(extractColorsFunction)\r\n\r\n        // By Hue and Light Version\r\n        let extractColorsFunction2 = arr => {\r\n            //looks better when dark goes first\r\n            let darkLightArr = arr.map(obj => {\r\n                let light = obj.light\r\n                let lightStr = 'hsl(' + light.totalHue / light.number + ', ' + light.totalSat / light.number + '%, ' + light.totalLight / light.number + '% )'\r\n                let dark = obj.dark\r\n                let darkStr = 'hsl(' + dark.totalHue / dark.number + ', ' + dark.totalSat / dark.number + '%, ' + dark.totalLight / dark.number + '% )'\r\n                return { dark: darkStr, light: lightStr }\r\n            })\r\n            let darks = darkLightArr.map(obj => obj.dark)\r\n            let lights = darkLightArr.map(obj => obj.light)\r\n            let palette = []\r\n            palette = palette.concat(darks)\r\n            palette = palette.concat(lights)\r\n            return palette\r\n        }\r\n        let generatedPalette5 = extractColorsFunction2(arr12Colors2)\r\n        let generatedPalette6 = extractColorsFunction2(arr24Colors2)\r\n        let generatedPalette7 = extractColorsFunction2(arr48Colors2)\r\n        let generatedPalette8 = extractColorsFunction2(arr72Colors2)\r\n\r\n        this.setState({\r\n            palette1: generatedPalette1, palette2: generatedPalette2, palette3: generatedPalette3, palette4: generatedPalette4,\r\n            palette5: generatedPalette5, palette6: generatedPalette6, palette7: generatedPalette7, palette8: generatedPalette8\r\n        })\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    getTiles = (palette) => {\r\n        let palettePieces = ''\r\n        if (palette.length != 0) {\r\n            palettePieces = palette.map((c) => <Grid item xs={1} > <div style={{ padding: '30px', backgroundColor: c }} /> </Grid>)\r\n        }\r\n        return palettePieces\r\n    }\r\n\r\n    render() {\r\n        let { imagePreviewUrl } = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n            $imagePreview = (<img id='uploaded-image' src={imagePreviewUrl} style={{ width: '400px' }} />);\r\n        } else {\r\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n\r\n        let palettePieces1 = this.getTiles(this.state.palette1)\r\n        let palettePieces2 = this.getTiles(this.state.palette2)\r\n        let palettePieces3 = this.getTiles(this.state.palette3)\r\n        let palettePieces4 = this.getTiles(this.state.palette4)\r\n        let palettePieces5 = this.getTiles(this.state.palette5)\r\n        let palettePieces6 = this.getTiles(this.state.palette6)\r\n        let palettePieces7 = this.getTiles(this.state.palette7)\r\n        let palettePieces8 = this.getTiles(this.state.palette8)\r\n\r\n        return (\r\n            <div className=\"previewComponent\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input className=\"fileInput\" type=\"file\" onChange={(e) => this.handleImageChange(e)} />\r\n                    <button className=\"submitButton\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Upload Image</button>\r\n                </form>\r\n                <div className=\"imgPreview\" > {$imagePreview} </div>\r\n                <canvas id='canv' />\r\n\r\n                <h3> Version 1 (12, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces1}\r\n                </Grid>\r\n                <h3> Version 2 (24, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces2}\r\n                </Grid>\r\n                <h3> Version 3 (48, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces3}\r\n                </Grid>\r\n                <h3> Version 4 (72, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces4}\r\n                </Grid>\r\n\r\n                <h3> Version 5 (12, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces5}\r\n                </Grid>\r\n                <h3> Version 6 (24, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces6}\r\n                </Grid>\r\n                <h3> Version 7 (48, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces7}\r\n                </Grid>\r\n                <h3> Version 8 (72, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces8}\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../HSL/components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PictureUpload from './components/PictureUpload';\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <PictureUpload/>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main style={{display:'grid'}}>\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n\r\n};\r\nclass Firebase {\r\n    constructor() { app.initializeApp(config);}\r\n    // *** Auth API ***\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nimport { FirebaseContext } from './firebase';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => {\n          return <div className=\"App\">\n         <link href=\"https://fonts.googleapis.com/css?family=Lora|Nanum+Gothic\" rel=\"stylesheet\"/>\n              <Header firebase={firebase} />\n              <Main />\n          </div>\n        }}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; \nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nimport Firebase, { FirebaseContext } from './firebase';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}