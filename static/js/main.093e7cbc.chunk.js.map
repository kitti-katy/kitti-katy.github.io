{"version":3,"sources":["components/account/Login.js","components/account/Register.js","components/Header.js","utilities/Color.js","redux/BaseColorReducer.js","components/Label.js","components/color-picker/ColorPicker.js","redux/SelectedColorReducer.js","utilities/ExportJSON.js","pages/color-generation/HSL/components/HSLFilters.js","components/TryIt.js","pages/color-generation/HSL/HSL.js","pages/color-generation/Custom/components/GeneratedColors.js","pages/color-generation/Custom/Custom.js","pages/color-generation/Picture/components/PictureUpload.js","pages/color-generation/Picture/Picture.js","pages/community/Community.js","components/Main.js","firebase/context.js","firebase/Firebase.js","firebase/index.js","App.js","serviceWorker.js","redux/index.js","index.js"],"names":["React","Component","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","_this$state","this","react_default","a","createElement","style","padding","Button_default","component","Link","to","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","color","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","changeBaseColor","type","initial_state","baseColor","Label","props","class","title","ColorPicker","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","selectedColor","componentDidMount","generateMainCanvas","generateSatCanvas","document","addEventListener","setMouseDownToFalse","setSatMouseDownToFalse","ctx","getElementById","getContext","i","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","j","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","clientX","clientY","handleMouseMoveMainCanvas","rect","getBoundingClientRect","x","left","y","top","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","handleFormInput","getNumberPickerInput","id","val","onChange","input","size","width","value","setFromHue","e","target","setFromSat","setFromLight","setFromRed","setFromGreen","setFromBlue","setFromHex","_baseColor$hsl","_baseColor$rgb","margin","card","background","bordered","textAlign","display","height","border","borderColor","borderRadius","marginLeft","marginTop","backgroundColor","position","zIndex","lib","time","handler","float","onMouseDown","onMouseMove","onMouseLeave","onMouseEnter","marginRight","Label_Label","connect","BaseColorReducer","dispatch","bindActionCreators","selectColor","selected","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","HSLFilters","hueStep","satStep","lightStep","numberOfColors","clickedColor","selectedPreset","handleHueChange","handleSatChange","handleLightChange","handleHueStepChange","handleSatStepChange","handleLightStepChange","handleNumberOfColorsChange","selectPreset","preset","setAnalogous","setAdjacent","setTetrad","setTriad","reset","setFilters","setMonochromatic","handleSelectColor","index","colorElements","getElementsByTagName","attributes","_this2","anyColor","es_button","onClick","Array","apply","map","el","floor","newColor","icon","fontSize","Select_default","MenuItem_default","TryIt","initialState","setColor","compName","stopPropagation","newColors","components","_React$createElement","appBar","header","header2","primaryButton","secondaryButton","successButton","dangerButton","infoButton","primaryButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","infoButtonFont","paragraph","selectedColorFont","headStyle","defineProperty","onMouseOver","SelectedColorReducer","HSL","verticalAlign","components_TryIt","components_HSLFilters","color_picker_ColorPicker","GeneratedColors","handleColorClick","selectedHex","previousIndex","addNewColor","previousSelectedColorIndex","push","console","log","selectedColorIndex","Grid_default","container","spacing","item","xs","flexWrap","Add_default","Custom","CardContent_default","components_GeneratedColors","PictureUpload","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","image","imagePreviewUrl","handleSubmit","preventDefault","img","Image","src","canvas","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","generatedPalette1","generatedPalette2","generatedPalette3","generatedPalette4","extractColorsFunction2","darkLightArr","lightStr","darks","lights","palette","concat","generatedPalette5","generatedPalette6","generatedPalette7","generatedPalette8","handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","getTiles","palettePieces","c","$imagePreview","className","palettePieces1","palettePieces2","palettePieces3","palettePieces4","palettePieces5","palettePieces6","palettePieces7","palettePieces8","onSubmit","Picture","components_PictureUpload","Community","palettes","Card_default","Main","Switch","Route","exact","path","FirebaseContext","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","App","context","Consumer","firebase","rel","href","components_Header","Main_Main","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","BrowserRouter","Provider","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.093e7cbc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleLoginButtonClick = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Login</Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Login </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Username or Email\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            \r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nexport default class Register extends React.Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    open: false\r\n  };\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => this.setState({ ...INITIAL_STATE }))\r\n      .catch(error => this.setState({ error }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => this.setState({ [event.target.name]: event.target.value });\r\n  handleClickOpen = () => this.setState({ open: true });\r\n  handleClose = () => this.setState({ open: false });\r\n  handleLoginButtonClick = () => { };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickOpen}>Sign Up</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\"        >\r\n          <DialogTitle id=\"form-dialog-title\">Sign Up </DialogTitle>\r\n          <DialogContent>\r\n\r\n            <form onSubmit={this.onSubmit}>\r\n              <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Full Name\" />\r\n              <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\" />\r\n              <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\r\n              <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirm Password\" />\r\n              <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Username\" type=\"text\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email\" type=\"email\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Password\" type=\"password\" fullWidth />\r\n            <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Confirm Password\" type=\"password\" fullWidth />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">Create Account</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Login from \"./account/Login\"\r\nimport Register from \"./account/Register\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n\r\n\r\n\r\n  render() {\r\n    const { newPaletteAnchor, loginAnchor } = this.state;\r\n\r\n    return (\r\n      <div style={{padding:'24px'}}>\r\n           <Button component={Link} to='/generate/hsl'>From HSL</Button>\r\n            <Button component={Link} to='/generate/custom'>Custom</Button>\r\n            <Button component={Link} to='/generate/picture'>From Picture</Button>\r\n            {/*<Button component={Link} to='/community'>Community</Button>\r\n            }\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\"> Awesome CPG </Typography>\r\n           \r\n            {/* <div>\r\n              <Button aria-owns={newPaletteAnchor ? \"simple-menu\" : null} aria-haspopup=\"true\" onClick={this.handleClickPalette}> New Palette</Button>\r\n              <Menu id=\"new-palette\" anchorEl={newPaletteAnchor} open={Boolean(newPaletteAnchor)} onClose={this.handleClosePalette} >\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/hsl'>From HSL</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/custom'>Custom</MenuItem>\r\n                <MenuItem onClick={this.handleClosePalette} component={Link} to='/generate/picture'>From Picture</MenuItem>\r\n              </Menu>\r\n           </div>*/}\r\n\r\n            {/*<Button component={Link} to='/generate/hsl'>From HSL</Button>\r\n            <Button component={Link} to='/generate/custom'>Custom</Button>\r\n            <Button component={Link} to='/generate/picture'>From Picture</Button>\r\n            <Button component={Link} to='/community'>Community</Button>\r\n            <Login />\r\n            <Register firebase={this.props.firebase} />\r\n          </Toolbar>\r\n        </AppBar>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color(200, 20, 50, 'HSL') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","import React from \"react\";\r\n\r\nexport const Label = (props) => <div class=\"ant-form-item-label\"><label class=\"\" title={props.title}>{props.title}</label></div>","import React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { changeBaseColor } from \"../../redux/BaseColorReducer\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { Label } from '../Label';\r\nimport { Input, Card } from 'antd';\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor }; }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch); }\r\n\r\nclass ColorPicker extends Component {\r\n  state = {\r\n    allowClrChange: false,\r\n    allowSatChange: false,\r\n    mouseDownMainCanvas: false,\r\n    mouseDownSatCanvas: false,\r\n\r\n    pickerCirclePositionX: 0,\r\n    pickerCirclePositionY: 0,\r\n    saturationRectPositionY: 0,\r\n\r\n    selectedColor: new Color(200, 20, 50, 'HSL')\r\n  };\r\n  componentDidMount = () => {\r\n    this.generateMainCanvas(this.props.baseColor);\r\n    this.generateSatCanvas(this.props.baseColor);\r\n    document.addEventListener(\"mouseup\", this.setMouseDownToFalse, false);\r\n    document.addEventListener(\"mouseup\", this.setSatMouseDownToFalse, false);\r\n  };\r\n\r\n  generateMainCanvas = baseColor => {\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let i = 0; i < 360; i += 1) {\r\n      var gradient = ctx.createLinearGradient(i, 0, i, 200);\r\n      gradient.addColorStop(0, \"hsl(\" + i + \",\" + sat + \"%,0%)\");\r\n      gradient.addColorStop(0.5, \"hsl(\" + i + \",\" + sat + \"%,50%)\");\r\n      gradient.addColorStop(1, \"hsl(\" + i + \",\" + sat + \"%,100%)\");\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(i, 0, i, 200);\r\n    }\r\n  };\r\n  generateSatCanvas = baseColor => {\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202; j += 2) {\r\n      for (let i = 0; i < 10; i += 1) {\r\n        ctx.fillStyle = \"hsl(\" + hue + \", \" + j / 2 + \"%, \" + light + \"%)\";\r\n        ctx.fillRect(i, j, i, j + 2);\r\n      }\r\n    }\r\n  };\r\n\r\n  enableColorChange = () => this.setState({ allowClrChange: true });\r\n  disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n  handleMouseDownMainCanvas = evt => {\r\n    this.setMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  handleMouseMoveMainCanvas = evt => {\r\n    if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n      this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n  };\r\n  setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n  setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n  setColorFromMainCanvas = (clientX, clientY) => {\r\n    let canvas = document.getElementById(\"main-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let hue = Math.round(x);\r\n    let sat = this.props.baseColor.hsl.sat;\r\n    let light = Math.round(y / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.setState({ selectedColor: color })\r\n    this.props.changeBaseColor(color);\r\n    this.generateSatCanvas(color);\r\n  };\r\n\r\n  handleMouseDownSatCanvas = evt => {\r\n    this.setSatMouseDownToTrue();\r\n    this.enableColorChange();\r\n    this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  handleMouseMoveSatCanvas = evt => {\r\n    if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n      this.setColorFromSatCanvas(evt.clientY);\r\n  };\r\n  setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n  setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n  setColorFromSatCanvas = clientY => {\r\n    let canvas = document.getElementById(\"saturation-canvas-color-picker\");\r\n    let rect = canvas.getBoundingClientRect();\r\n    let y = clientY - rect.top;\r\n    if (y < 0 || y > 200) return;\r\n    let hsl = this.props.baseColor.hsl;\r\n    let hue = hsl.hue;\r\n    let sat = Math.round(y / 2);\r\n    let light = hsl.light;\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    this.props.changeBaseColor(color);\r\n    this.setState({ selectedColor: color })\r\n    this.generateMainCanvas(color);\r\n  };\r\n\r\n  handleFormInput = color => {\r\n    this.props.changeBaseColor(color);\r\n    this.generateMainCanvas(color);\r\n    this.generateSatCanvas(color);\r\n  };\r\n  getNumberPickerInput = (id, max, val, onChange) =>\r\n    <Input size=\"small\" style={{ width: '60px' }} type=\"number\" id={id} min=\"0\" max={max} value={val} onChange={onChange} />\r\n\r\n  // Input Setters\r\n  setFromHue = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.hsl.sat, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromSat = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, e.target.value, this.props.baseColor.hsl.light, \"HSL\"))\r\n  setFromLight = e => this.handleFormInput(new Color(this.props.baseColor.hsl.hue, this.props.baseColor.hsl.sat, e.target.value, \"HSL\"))\r\n  setFromRed = e => this.handleFormInput(new Color(e.target.value, this.props.baseColor.rgb.g, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromGreen = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, e.target.value, this.props.baseColor.rgb.b, \"RGB\"))\r\n  setFromBlue = e => this.handleFormInput(new Color(this.props.baseColor.rgb.r, this.props.baseColor.rgb.g, e.target.value, \"RGB\"))\r\n  setFromHex = e => this.handleFormInput(new Color(e.target.value, 0, 0, \"Hex\"))\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    const { hue, sat, light } = baseColor.hsl\r\n    const { r, g, b } = baseColor.rgb\r\n    let hexString = baseColor.HEXString;\r\n\r\n\r\n    return (\r\n      <div style={{ margin: '24px' }}>\r\n        <Card style={{ background: '#f5f5f5' }} bordered={false}>\r\n          <h2 style={{ textAlign: 'left' }} >Pick Color</h2>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <div id=\"pickerCircle\"\r\n              style={{\r\n                width: \"16px\", height: \"16px\", border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"white\", borderRadius: \"15px\",\r\n                marginLeft: hue - 8 + \"px\", marginTop: light * 2 - 8 + \"px\",\r\n                backgroundColor: hexString, position: \"absolute\", zIndex: 100\r\n              }}\r\n            />\r\n            <Throttle time=\"20\" handler=\"onMouseMove\">\r\n              <canvas height=\"200\" width=\"360\" id=\"main-canvas-color-picker\"\r\n                style={{ display: \"inline\", position: \"relative\", float: \"left\" }}\r\n                onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n            </Throttle>\r\n          </div>\r\n          <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\r\n            <div id=\"saturationCircle\"\r\n              style={{\r\n                position: \"absolute\", display: \"inline\", marginLeft: \"-6px\", width: \"24px\", height: \"7px\",\r\n                border: \"1px solid\", borderColor: light > 50 ? \"#757575\" : \"#d9d9d9\", borderRadius: \"3px\",\r\n                marginTop: sat * 2 - 5 + \"px\", backgroundColor: hexString\r\n              }} />\r\n            <Throttle time=\"20\" handler=\"onMouseMove\">\r\n              <canvas height=\"200\" width=\"10\" id=\"saturation-canvas-color-picker\"\r\n                style={{\r\n                  display: \"inline\", marginRight: \"7px\", border: \"1px solid #d9d9d9\"\r\n                }}\r\n                onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas} onMouseLeave={this.disableColorChange} onMouseEnter={this.enableColorChange} />\r\n            </ Throttle>\r\n          </div>\r\n          <div style={{ width: '400px' }}>\r\n            <div style={{ display: 'inline-block', width: '83px', margin: '24px' }}>\r\n              <div> <Label title=\"H\" />{this.getNumberPickerInput('H', 359, hue, this.setFromHue)} </div>\r\n              <div> <Label title=\"S\" />{this.getNumberPickerInput('S', 100, sat, this.setFromSat)} </div>\r\n              <div> <Label title=\"L\" />{this.getNumberPickerInput('L', 100, light, this.setFromLight)} </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'inline-block', width: '83px', margin: '18px' }}>\r\n              <div> <Label title=\"R\" />{this.getNumberPickerInput('R', 255, r, this.setFromRed)}</div>\r\n              <div> <Label title=\"G\" />{this.getNumberPickerInput('G', 255, g, this.setFromGreen)}</div>\r\n              <div> <Label title=\"B\" />{this.getNumberPickerInput('B', 255, b, this.setFromBlue)} </div>\r\n            </div>\r\n            <div style={{ display: 'inline-block', margin: '18px', width: '113px' }}>\r\n              <div style={{ padding: '35px 56px', backgroundColor: hexString, display: 'inline-block' }} />\r\n              <div style={{ display: 'inline-block' }}>\r\n                <Label title=\"Hex\" /> <Input size=\"small\" style={{ width: \"72px\" }} type=\"text\" id=\"Hex\" value={hexString} onChange={this.setFromHex} />\r\n              </div>\r\n            </div>\r\n            <div style={{ width: '100%', display: 'block' }}>\r\n\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color(200, 20, 50, 'HSL').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color from \"../../../../utilities/Color\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\nimport { Label } from '../../../../components/Label'\r\nimport { Input, Button, Icon, Card } from 'antd';\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor }, dispatch) }\r\n\r\nclass HSLFilters extends Component {\r\n  state = {\r\n    hueChange: 10,\r\n    satChange: 0,\r\n    lightChange: 8,\r\n    hueStep: 10,\r\n    satStep: 1,\r\n    lightStep: 1,\r\n    numberOfColors: 130,\r\n\r\n    clickedColor: 0,\r\n    selectedPreset: 'None'\r\n  };\r\n  handleHueChange = e => this.setState({ hueChange: e.target.value, selectedPreset: 'None' })\r\n  handleSatChange = e => this.setState({ satChange: e.target.value, selectedPreset: 'None' })\r\n  handleLightChange = e => this.setState({ lightChange: e.target.value, selectedPreset: 'None' })\r\n  handleHueStepChange = e => this.setState({ hueStep: e.target.value, selectedPreset: 'None' })\r\n  handleSatStepChange = e => this.setState({ satStep: e.target.value, selectedPreset: 'None' })\r\n  handleLightStepChange = e => this.setState({ lightStep: e.target.value, selectedPreset: 'None' })\r\n  handleNumberOfColorsChange = e => {\r\n    let n = e.target.value\r\n    if ((n > 0 && n < 144) || (n == ''))\r\n      this.setState({ numberOfColors: n, selectedPreset: 'None' })\r\n  }\r\n\r\n  selectPreset = e => {\r\n    let preset = e.target.value\r\n    this.setState({ selectedPreset: preset })\r\n    switch (preset) {\r\n      case \"Analogous\": this.setAnalogous();\r\n      case \"Adjacent\": this.setAdjacent();\r\n      case \"Tetrad\": this.setTetrad();\r\n      case \"Triad\": this.setTriad();\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ selectedPreset: 'None' })\r\n    this.setFilters(10, 0, 8, 1, 1, 1, 6)\r\n  }\r\n\r\n  setAnalogous = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setTetrad = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setMonochromatic = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setAdjacent = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n  setTriad = () => this.setFilters(30, 20, 20, 16, 5, 1, 60)\r\n\r\n  setFilters = (hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) => this.setState({ hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors })\r\n\r\n  handleSelectColor = (hex, index) => {\r\n    this.setState({ clickedColor: index })\r\n    this.props.selectColor(hex)\r\n  }\r\n\r\n  exportJSON = () => {\r\n    let colorElements = document.getElementById(\"generated-colors\").getElementsByTagName(\"div\")\r\n    let colors = {}\r\n    for (var i = 0; i < colorElements.length; i++) {\r\n      colors[\"color\" + i] = colorElements[i].attributes.backgroundColor\r\n    }\r\n    exportJSON(colors)\r\n  }\r\n\r\n  render() {\r\n    let baseColor = this.props.baseColor;\r\n    let hue = baseColor.hsl.hue;\r\n    let sat = baseColor.hsl.sat;\r\n    let light = baseColor.hsl.light;\r\n\r\n    let anyColor = new Color(0, 0, 0, 'RGB')\r\n\r\n    const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, selectedPreset, numberOfColors, clickedColor } = this.state\r\n\r\n    return (\r\n      <div style={{ margin: '24px', width: '440px' }}>\r\n        <Card style={{ background: '#f5f5f5' }} bordered={false}>\r\n          <h2 style={{ textAlign: 'left' }} >Palette <Button style={{ float: 'right' }} onClick={this.exportJSON}> Export JSON</Button></h2>\r\n          <br />\r\n          <div id=\"generated-colors\" style={{ height: '330px' }}>\r\n            {\r\n              Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n                let h = (hue + (Math.floor(index / hueStep) * hueChange)) % 360\r\n                let s = (sat + (Math.floor(index / satStep) * satChange)) % 101\r\n                let l = (light + (Math.floor(index / lightStep) * lightChange)) % 101\r\n                let newColor = anyColor.HSLtoHex(h, s, l)\r\n                return <div onClick={() => this.handleSelectColor(newColor, index)}\r\n                  style={{\r\n                    backgroundColor: newColor, borderRadius: clickedColor == index ? '15px' : '0',\r\n                    padding: '15px', display: 'inline-block', margin: '-2.5px 0'\r\n                  }} ></div>\r\n              })\r\n            }\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <h2 style={{ textAlign: 'left' }}>\r\n            Filters <Icon type=\"reload\" size=\"small\" style={{ float: 'right' }} onClick={this.reset} />\r\n          </h2>\r\n\r\n          <div>\r\n            <h3>Changes:\r\n          <span style={{ fontSize: '14px', marginLeft: '12px' }}>\r\n                <span>\r\n                  <Label title=\"H\" />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={hueChange} onChange={this.handleHueChange} />\r\n                </span>\r\n                <span style={{ margin: '24px' }}>\r\n                  <Label title=\"S\" style={{ margin: '24px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={satChange} onChange={this.handleSatChange} />\r\n                </span>\r\n                <span>\r\n                  <Label title=\"L\" style={{ marginLeft: '24px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={lightChange} onChange={this.handleLightChange} />\r\n                </span>\r\n              </span>\r\n            </h3>\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Steps:\r\n          <span style={{ fontSize: '14px', marginLeft: '12px' }}>\r\n                <span>\r\n                  <Label title=\"H\" />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={hueStep} onChange={this.handleHueStepChange} />\r\n                </span>\r\n                <span style={{ margin: '24px' }}>\r\n                  <Label title=\"S\" style={{ marginLeft: '24px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={satStep} onChange={this.handleSatStepChange} />\r\n                </span>\r\n                <span>\r\n                  <Label title=\"L\" style={{ marginLeft: '24px' }} />\r\n                  < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={lightStep} onChange={this.handleLightStepChange} />\r\n                </span>\r\n              </span>\r\n            </h3>\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Preset:\r\n           <Select value={selectedPreset} onChange={this.selectPreset} style={{ marginLeft: '12px' }} >\r\n                <MenuItem value={'None'}> <em>None</em></MenuItem>\r\n                <MenuItem value={'Analogous'}><em>Analogous</em></MenuItem>\r\n                <MenuItem value={'Adjacent'}><em>Adjacent</em></MenuItem>\r\n                <MenuItem value={'Triad'}><em>Triad</em></MenuItem>\r\n                <MenuItem value={'Tetrad'}><em>Tetrad</em></MenuItem> </Select>\r\n\r\n              <span style={{ margin: '24px' }}>\r\n                <Label title=\"Number Of Colors\" />\r\n                < Input size=\"small\" style={{ width: '60px' }} type=\"number\" min=\"0\" max='360' value={numberOfColors} onChange={this.handleNumberOfColorsChange} />\r\n              </span>\r\n            </h3>\r\n          </div>\r\n        </Card>\r\n\r\n        <br />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HSLFilters);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Icon } from 'antd';\r\nimport Color from '../utilities/Color'\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\n\r\nlet mapStateToProps = (state) => { return { selected: state.SelectedColorReducer.selected } }\r\nlet mapDispatchToProps = (dispatch) => { /*return bindActionCreators({ changeBaseColor: changeBaseColor }, dispatch)*/ }\r\nconst selectButtonStyle = { color: 'black', padding: '4px', borderRadius: '14px', margin: '5px' }\r\n\r\nconst SetButton = (props) => {\r\n    let color = new Color(props.background, 0, 0, 'Hex')\r\n    let fontColor = color.hsl.light > 50 ? 'black' : 'white'\r\n\r\n    return (<Button onClick={props.onClick} style={{ ...selectButtonStyle, backgroundColor: props.background, color: fontColor }}>\r\n        <span style={{ margin: '0 10px' }}> {props.children} </span></Button>)\r\n}\r\n\r\nclass TryIt extends Component {\r\n    state = this.initialState;\r\n    get initialState() {\r\n        return {\r\n            components: {\r\n                appBar: '#ffffff',\r\n                title: '#353535',\r\n                header: '#353535',\r\n                header2: '#353535',\r\n                background: '#ffffff',\r\n                primaryButton: '#ffffff',\r\n                secondaryButton: '#ffffff',\r\n                successButton: '#ffffff',\r\n                dangerButton: '#ffffff',\r\n                infoButton: '#ffffff',\r\n\r\n                primaryButtonFont: '#353535',\r\n                secondaryButtonFont: '#353535',\r\n                successButtonFont: '#353535',\r\n                dangerButtonFont: '#353535',\r\n                infoButtonFont: '#353535',\r\n                paragraph: '#353535',\r\n            }\r\n        };\r\n    }\r\n\r\n    reset = () => this.setState(this.initialState)\r\n\r\n    setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        let newColors = this.state.components\r\n        newColors[compName] = this.props.selected\r\n        this.setState({ components: newColors })\r\n    }\r\n\r\n    render() {\r\n        let components = this.state.components\r\n        const { appBar, title, header, header2,\r\n            background, primaryButton, secondaryButton, successButton,\r\n            dangerButton, infoButton, primaryButtonFont,\r\n            secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph } = components\r\n        let selectedColor = this.props.selected\r\n        let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 50 ? 'black' : 'white'\r\n\r\n        return (\r\n            <Card \r\n            /*title={\r\n                <h2 style={{ margin: '15px 0', color: selectedColorFont }}>\r\n                    Try It ({selectedColor})\r\n                    <Button style={{ float: 'right', marginLeft: '5px' }} onClick={() => exportJSON(components)}> ExportJSON  </Button>\r\n                    <Button style={{ float: 'right' }} onClick={this.reset}> <Icon type=\"reload\" />  </Button>\r\n            </h2>}*/\r\n                bordered={false}\r\n                headStyle={{ backgroundColor: selectedColor }}\r\n                style={{ width: '500px', margin: '24px', background: '#f5f5f5' }}>\r\n\r\n                <h2 style={{ margin: '15px 0' }}>\r\n                    Apply Color:\r\n                    <Button style={{ float: 'right', marginLeft: '5px' }} onClick={() => exportJSON(components)}> ExportJSON  </Button>\r\n                    <Button style={{ float: 'right' }} onClick={this.reset}> <Icon type=\"reload\" />  </Button>\r\n                </h2>\r\n                <h3\r\n                    style=\r\n                    {{\r\n                        backgroundColor: selectedColor, padding: '15px 0', textAlign: 'center', color: selectedColorFont,\r\n                        border: '1px solid ' + selectedColorFont\r\n                    }}>\r\n                    {selectedColor}\r\n                </h3>\r\n\r\n\r\n                <div style={{ width: '450px', display: 'inline-block' }}>\r\n                    <Card style={{}} id=\"try-background\"\r\n                        onClick={(e) => this.setColor(e, 'background')}\r\n                        style={{ backgroundColor: background }}\r\n                        headStyle={{ backgroundColor: appBar }}\r\n                        title={<h3 id=\"try-title\" style={{ color: title }}\r\n                            onClick={(e) => this.setColor(e, 'title')}>Awesome Title</h3>}>\r\n                        <h3 style={{ color: header }} id=\"try-header\" onClick={(e) => this.setColor(e, 'header')}> Header </h3>\r\n                        <p id=\"try-text\" style={{ color: paragraph }} onClick={(e) => this.setColor(e, 'paragraph')}>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                        <br />\r\n                            <br />\r\n                            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                        <br />\r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'primaryButton')} id=\"try-button-primary\"\r\n                                style={{ backgroundColor: primaryButton, color: primaryButtonFont }}>\r\n                                <div onClick={(e) => this.setColor(e, 'primaryButtonFont')} onMouseOver={(e) => e.stopPropagation()} id=\"try-button-primary-font\">Primary </div>\r\n                            </Button>\r\n                            <Button\r\n                                id=\"try-button-secondary\" onClick={(e) => this.setColor(e, 'secondaryButton')}\r\n                                style={{ backgroundColor: secondaryButton, color: secondaryButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'secondaryButtonFont')} id=\"try-button-secondary-font\"> Secondary</div>\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ margin: '15px 0' }}>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'successButton')} id=\"try-button-success\"\r\n                                style={{ backgroundColor: successButton, color: successButtonFont }}>\r\n                                <div onClick={(e) => this.setColor(e, 'successButtonFont')} id=\"try-button-success-font\"><Icon type=\"check-circle\" /> Success</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'infoButton')}\r\n                                id=\"try-button-info\" style={{ backgroundColor: infoButton, color: infoButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'infoButtonFont')} id=\"try-button-info-font\"><Icon type=\"info-circle\" /> Info</div>\r\n                            </Button>\r\n                            <Button\r\n                                onClick={(e) => this.setColor(e, 'dangerButton')}\r\n                                id=\"try-button-danger\" style={{ backgroundColor: dangerButton, color: dangerButtonFont, marginLeft: '15px' }}>\r\n                                <div onClick={(e) => this.setColor(e, 'dangerButtonFont')} id=\"try-button-danger-font\"><Icon type=\"warning\" /> Danger</div>\r\n                            </Button>\r\n                        </div>\r\n                    </Card >\r\n                </div>\r\n\r\n                {/*}\r\n                <div style={{ display: 'inline-block', verticalAlign: 'top', width: '320px', marginLeft: '24px' }}>\r\n                    {/*} <h3> Selected Color: </h3>\r\n                    <h3\r\n                        style=\r\n                        {{\r\n                            backgroundColor: selectedColor, padding: '15px 0', textAlign: 'center', color: selectedColorFont,\r\n                            border: '1px solid ' + selectedColorFont\r\n                        }}>\r\n                        {selectedColor}\r\n                    </h3>\r\n                    \r\n\r\n                    <h3 > Backgrounds:</h3>\r\n                    <SetButton background={appBar} onClick={() => this.setColor('appBar')}> App Bar </SetButton>\r\n                    <SetButton background={background} onClick={() => this.setColor('background')}> Background </SetButton>\r\n                    <SetButton background={primaryButton} onClick={() => this.setColor('primaryButton')}> Primary Button</SetButton>\r\n                    <SetButton background={secondaryButton} onClick={() => this.setColor('secondaryButton')}> Secondary Button</SetButton>\r\n                    <SetButton background={successButton} onClick={() => this.setColor('successButton')}> Success Button </SetButton>\r\n                    <SetButton background={infoButton} onClick={() => this.setColor('infoButton')}> Info Button </SetButton>\r\n                    <SetButton background={dangerButton} onClick={() => this.setColor('dangerButton')}> Danger Button </SetButton>\r\n\r\n                    <h3 > Fonts:</h3>\r\n                    <SetButton background={title} onClick={() => this.setColor('title')}> App Bar </SetButton>\r\n                    <SetButton background={header} onClick={() => this.setColor('header')}> Header </SetButton>\r\n                    <SetButton background={paragraph} onClick={() => this.setColor('paragraph')}> Paragraph </SetButton>\r\n                    <SetButton background={primaryButtonFont} onClick={() => this.setColor('primaryButtonFont')}> Primary Button  </SetButton>\r\n                    <SetButton background={secondaryButtonFont} onClick={() => this.setColor('secondaryButtonFont')}> Secondary Button  </SetButton>\r\n                    <SetButton background={successButtonFont} onClick={() => this.setColor('successButtonFont')}> Success Button  </SetButton>\r\n                    <SetButton background={infoButtonFont} onClick={() => this.setColor('infoButtonFont')}> Info Button  </SetButton>\r\n                    <SetButton background={dangerButtonFont} onClick={() => this.setColor('dangerButtonFont')}> Danger Button  </SetButton>\r\n                </div>\r\n                    */}\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TryIt);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"./components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\n\r\nclass HSL extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ display: 'inline-block', verticalAlign:'top' }}><TryIt /></div>\r\n        <div style={{ display: 'inline-block', verticalAlign:'top' }}> <HSLFilters /> </div>\r\n        <div style={{ display: 'inline-block', verticalAlign:'top' }}> <ColorPicker /> </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HSL;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass GeneratedColors extends Component {\r\n    state = { colors: [], clickedColor: 0};\r\n    componentDidMount = () => this.setState({ colors: [this.props.baseColor.HEXString] })\r\n\r\n    handleColorClick = (selectedHex, index, previousIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousIndex] = this.props.baseColor.HEXString\r\n        this.selectColor(selectedHex, newColors, index)\r\n    }\r\n\r\n    selectColor = (hex, colors, clickedColor) => {\r\n        this.setState({ colors, clickedColor })\r\n        this.props.selectColor(hex)\r\n        this.props.changeBaseColor(new Color(hex, 0, 0, 'Hex'))\r\n    }\r\n    addNewColor = (hex, previousSelectedColorIndex) => {\r\n        let newColors = this.state.colors\r\n        // set previously selected color to the picked color\r\n        newColors[previousSelectedColorIndex] = hex\r\n        // add a new color same as the picked color\r\n        newColors.push(hex)\r\n        this.selectColor(hex, newColors, newColors.length - 1)\r\n    }\r\n    exportJSON = () => exportJSON(this.state.colors)\r\n\r\n    render() {\r\n        console.log(this.state.colors)\r\n        let baseColor = this.props.baseColor.HEXString;\r\n        let selectedColorIndex = this.state.clickedColor\r\n        return (\r\n            <Grid container spacing={8} style={{ width: '400px' }}>\r\n                <Grid item xs={12} ><button onClick={this.exportJSON}> Export JSON</button></Grid>\r\n                <Grid item xs={12} >\r\n                    <div id=\"generated-colors\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                        {this.state.colors.map((color, index) =>\r\n                            <div onClick={() => this.handleColorClick(color, index, selectedColorIndex)}\r\n                                style={{\r\n                                    backgroundColor: selectedColorIndex == index ? baseColor : color,\r\n                                    borderRadius: selectedColorIndex == index ? '30px' : '0', padding: '30px', display: 'block'\r\n                                }} ></div>)\r\n                        }\r\n                        <div onClick={() => this.addNewColor(baseColor, selectedColorIndex)} style={{ border: 'gray solid 1px', display: 'block', width: '60px', height: '60px' }} >\r\n                            <AddIcon style={{ margin: 'auto', marginTop: '15px' }} />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneratedColors);\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport GeneratedColors from \"./components/GeneratedColors\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nclass Custom extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <ColorPicker />\r\n            <GeneratedColors />\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Custom;\r\n","import ImageUploader from 'react-images-upload';\r\n\r\nimport React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Color, { RGBtoHSL } from \"../../../../utilities/Color\";\r\nimport { selectColor } from '../../../../redux/SelectedColorReducer'\r\nimport { changeBaseColor } from '../../../../redux/BaseColorReducer'\r\nimport { exportJSON } from '../../../../utilities/ExportJSON'\r\n\r\n\r\nlet mapStateToProps = (state) => { return { baseColor: state.BaseColorReducer.baseColor } }\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ selectColor: selectColor, changeBaseColor: changeBaseColor }, dispatch) }\r\n\r\nclass PictureUpload extends Component {\r\n    state = {\r\n        palette1: [], palette2: [], palette3: [], palette4: [],\r\n        palette5: [], palette6: [], palette7: [], palette8: [],\r\n        clickedColor: 0, image: '', imagePreviewUrl: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let img = new Image()\r\n        img.src = this.state.imagePreviewUrl\r\n        let canvas = document.createElement('canvas')\r\n        canvas.width = img.width;\r\n        canvas.height = img.height\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.drawImage(img, 0, 0)\r\n        let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data\r\n\r\n        // By Hue Version\r\n        let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } }\r\n        let arr12Colors = []\r\n        let arr24Colors1 = []\r\n        let arr48Colors1 = []\r\n        let arr72Colors1 = []\r\n        pushVersion1Function(arr12Colors, 12)\r\n        pushVersion1Function(arr24Colors1, 24)\r\n        pushVersion1Function(arr48Colors1, 48)\r\n        pushVersion1Function(arr72Colors1, 72)\r\n        let version1Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            arr[bucketNumber].totalHue += hsl.hue\r\n            arr[bucketNumber].totalSat += hsl.sat\r\n            arr[bucketNumber].totalLight += hsl.light\r\n            arr[bucketNumber].number += 1\r\n        }\r\n\r\n        // By Hue and Light Version\r\n        let pushVersion2Function = (arr, n) => {\r\n            for (var i = 0; i < n; i++) {\r\n                arr.push({\r\n                    light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n                    dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n                });\r\n            }\r\n        }\r\n        let arr12Colors2 = []\r\n        let arr24Colors2 = []\r\n        let arr48Colors2 = []\r\n        let arr72Colors2 = []\r\n        pushVersion2Function(arr12Colors2, 12)\r\n        pushVersion2Function(arr24Colors2, 24)\r\n        pushVersion2Function(arr48Colors2, 48)\r\n        pushVersion2Function(arr72Colors2, 72)\r\n        let version2Function = (hsl, arr, divider) => {\r\n            let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0\r\n            let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark\r\n            bucket.totalHue += hsl.hue\r\n            bucket.totalSat += hsl.sat\r\n            bucket.totalLight += hsl.light\r\n            bucket.number += 1\r\n        }\r\n\r\n        for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n            let r = pixelArray[i];\r\n            let g = pixelArray[i + 1];\r\n            let b = pixelArray[i + 2];\r\n            let hsl = RGBtoHSL(r, g, b)\r\n            // By Hue Version\r\n            version1Function(hsl, arr12Colors, 30)\r\n            version1Function(hsl, arr24Colors1, 15)\r\n            version1Function(hsl, arr48Colors1, 7.5)\r\n            version1Function(hsl, arr72Colors1, 5)\r\n\r\n            // By Hue and Light Version\r\n            version2Function(hsl, arr12Colors2, 30)\r\n            version2Function(hsl, arr24Colors2, 15)\r\n            version2Function(hsl, arr48Colors2, 7.5)\r\n            version2Function(hsl, arr72Colors2, 5)\r\n        }\r\n\r\n        // By Hue Version\r\n        let extractColorsFunction = obj => 'hsl(' + obj.totalHue / obj.number + ', ' + obj.totalSat / obj.number + '%, ' + obj.totalLight / obj.number + '% )'\r\n        let generatedPalette1 = arr12Colors.map(extractColorsFunction)\r\n        let generatedPalette2 = arr24Colors1.map(extractColorsFunction)\r\n        let generatedPalette3 = arr48Colors1.map(extractColorsFunction)\r\n        let generatedPalette4 = arr72Colors1.map(extractColorsFunction)\r\n\r\n        // By Hue and Light Version\r\n        let extractColorsFunction2 = arr => {\r\n            //looks better when dark goes first\r\n            let darkLightArr = arr.map(obj => {\r\n                let light = obj.light\r\n                let lightStr = 'hsl(' + light.totalHue / light.number + ', ' + light.totalSat / light.number + '%, ' + light.totalLight / light.number + '% )'\r\n                let dark = obj.dark\r\n                let darkStr = 'hsl(' + dark.totalHue / dark.number + ', ' + dark.totalSat / dark.number + '%, ' + dark.totalLight / dark.number + '% )'\r\n                return { dark: darkStr, light: lightStr }\r\n            })\r\n            let darks = darkLightArr.map(obj => obj.dark)\r\n            let lights = darkLightArr.map(obj => obj.light)\r\n            let palette = []\r\n            palette = palette.concat(darks)\r\n            palette = palette.concat(lights)\r\n            return palette\r\n        }\r\n        let generatedPalette5 = extractColorsFunction2(arr12Colors2)\r\n        let generatedPalette6 = extractColorsFunction2(arr24Colors2)\r\n        let generatedPalette7 = extractColorsFunction2(arr48Colors2)\r\n        let generatedPalette8 = extractColorsFunction2(arr72Colors2)\r\n\r\n        this.setState({\r\n            palette1: generatedPalette1, palette2: generatedPalette2, palette3: generatedPalette3, palette4: generatedPalette4,\r\n            palette5: generatedPalette5, palette6: generatedPalette6, palette7: generatedPalette7, palette8: generatedPalette8\r\n        })\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => this.setState({ image: file, imagePreviewUrl: reader.result });\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    getTiles = (palette) => {\r\n        let palettePieces = ''\r\n        if (palette.length != 0) {\r\n            palettePieces = palette.map((c) => <Grid item xs={1} > <div style={{ padding: '30px', backgroundColor: c }} /> </Grid>)\r\n        }\r\n        return palettePieces\r\n    }\r\n\r\n    render() {\r\n        let { imagePreviewUrl } = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n            $imagePreview = (<img id='uploaded-image' src={imagePreviewUrl} style={{ width: '400px' }} />);\r\n        } else {\r\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n\r\n        let palettePieces1 = this.getTiles(this.state.palette1)\r\n        let palettePieces2 = this.getTiles(this.state.palette2)\r\n        let palettePieces3 = this.getTiles(this.state.palette3)\r\n        let palettePieces4 = this.getTiles(this.state.palette4)\r\n        let palettePieces5 = this.getTiles(this.state.palette5)\r\n        let palettePieces6 = this.getTiles(this.state.palette6)\r\n        let palettePieces7 = this.getTiles(this.state.palette7)\r\n        let palettePieces8 = this.getTiles(this.state.palette8)\r\n\r\n        return (\r\n            <div className=\"previewComponent\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input className=\"fileInput\" type=\"file\" onChange={(e) => this.handleImageChange(e)} />\r\n                    <button className=\"submitButton\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Upload Image</button>\r\n                </form>\r\n                <div className=\"imgPreview\" > {$imagePreview} </div>\r\n                <canvas id='canv' />\r\n\r\n                <h3> Version 1 (12, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces1}\r\n                </Grid>\r\n                <h3> Version 2 (24, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces2}\r\n                </Grid>\r\n                <h3> Version 3 (48, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces3}\r\n                </Grid>\r\n                <h3> Version 4 (72, by Hue) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces4}\r\n                </Grid>\r\n\r\n                <h3> Version 5 (12, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces5}\r\n                </Grid>\r\n                <h3> Version 6 (24, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces6}\r\n                </Grid>\r\n                <h3> Version 7 (48, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces7}\r\n                </Grid>\r\n                <h3> Version 8 (72, by Hue and Light) </h3>\r\n                <Grid container spacing={0} style={{ width: '400px' }}>\r\n                    {palettePieces8}\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureUpload);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../HSL/components/HSLFilters\";\r\nimport TryIt from \"../../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PictureUpload from './components/PictureUpload';\r\n\r\nclass Picture extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={3}>\r\n          <CardContent>\r\n            <PictureUpload/>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <CardContent>\r\n            <TryIt />\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from \"../../components/color-picker/ColorPicker\";\r\nimport HSLFilters from \"../color-generation/HSL/components/HSLFilters\";\r\nimport TryIt from \"../../components/TryIt\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nclass Community extends Component {\r\n  state = {\r\n    palettes: [1,1,1,1,1,1,1,1,1,1,1,1]\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid container spacing={24} style={{marginTop:'24px'}}>\r\n      {this.state.palettes.map(p=> ( <Grid item xs={3}> <Card style = {{padding:'50px'}}>A</Card> </Grid>) )}\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Community;\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport HSL from '../pages/color-generation/HSL/HSL'\r\nimport Custom from '../pages/color-generation/Custom/Custom'\r\nimport Picture from '../pages/color-generation/Picture/Picture'\r\nimport Community from '../pages/community/Community'\r\nimport React from \"react\";\r\n\r\nexport const Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/generate/hsl' component={HSL}/>\r\n      <Route path='/generate/custom' component={Custom}/>\r\n      <Route path='/generate/picture' component={Picture}/>\r\n      <Route path='/community' component={Community}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyB1JWce7ZQ-7DyJXBo5pIMnIZ-ndiki_m8\",\r\n    authDomain: \"awesome-cpg.firebaseapp.com\",\r\n    databaseURL: \"https://awesome-cpg.firebaseio.com\",\r\n    projectId: \"awesome-cpg\",\r\n    storageBucket: \"awesome-cpg.appspot.com\",\r\n    messagingSenderId: \"641260986127\"\r\n\r\n};\r\nclass Firebase {\r\n    constructor() { app.initializeApp(config);}\r\n    // *** Auth API ***\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n    doSignOut = () => this.auth.signOut();\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n}\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { Main } from './components/Main'\n\nimport { FirebaseContext } from './firebase';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => {\n          return <div className=\"App\">\n            <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\n            <Header firebase={firebase} />\n            <Main />\n          </div>\n        }}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; \nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nimport Firebase, { FirebaseContext } from './firebase';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}