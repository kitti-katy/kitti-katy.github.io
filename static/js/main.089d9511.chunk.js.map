{"version":3,"sources":["components/Header.js","utilities/ExportJSON.js","redux/FilterModeReducer.js","sections/filters/SelectMode.js","utilities/Color.js","Store.js","sections/try-it/TryItGradient.js","utilities/BlindConversion.js","sections/try-it/TryWeb.js","sections/try-it/TryMain.js","components/ExportJSONButton.js","components/ClipboardCopier.js","sections/side-bar/SelectedColorPanel.js","sections/side-bar/SelectBlindness.js","sections/side-bar/LeftActionsBar.js","utilities/HSLPaletteGenerator.js","sections/tiles/BasicTiles.js","sections/tiles/AdvancedTiles.js","redux/SelectedColorReducer.js","sections/tiles/PictureTiles.js","components/color-picker/CanvasFunctions.js","components/color-picker/ColorPickerCanvas.js","components/color-picker/ColorPicker.js","components/SelectBaseColorButton.js","sections/filters/AdvancedFilters.js","sections/filters/BasicFilters.js","redux/PictureReducer.js","sections/filters/PictureFilters.js","pages/MainPage.js","redux/LayoutReducer.js","pages/MainPage2.js","App.js","serviceWorker.js","redux/BaseColorReducer.js","redux/HSLModeReducer.js","redux/HSLBasicReducer.js","redux/ColorBlindnessReducer.js","redux/ShowExtraToolsReducer.js","redux/HSLAdvancedReducer.js","redux/index.js","index.js"],"names":["Header","state","newPaletteAnchor","loginAnchor","signUpAnchor","handleClickPalette","event","_this","setState","currentTarget","handleClosePalette","navigateTo","link","props","history","push","react_default","a","createElement","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","id","Menu_default","Typography","variant","style","Component","withRouter","exportJSON","colors","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","setAttribute","click","changeFilter","filterMode","type","initial_state","iconStyle","verticalAlign","marginRight","SelectMode","getTab","mode","icon","text","onClick","this","Palette_default","fontSize","Brush_default","Image_default","connect","FilterModeReducer","dispatch","bindActionCreators","Color","v1","v2","v3","colorFormat","Object","classCallCheck","createChangedHSLColor","changes","hueChange","satChange","lightChange","hsl","hue","sat","light","setAllFromHSL","setAllFromHex","hex","HEXString","rgb","HexToRGB","setAllFromRGB","r","g","b","RGBtoHSL","setColorCSSStrings","HSLtoRGB","setRGBString","setHSLString","RGBtoHex","RGBString","HSLString","numberToHex","parseInt","n","toString","length","h","s","max","Math","min","l","d","round","hue2rgb","p","q","t","HSLtoHex","extractNumberFromHex","start","end","substring","HexToHSL","hexString","StoreContext","createContext","initialState","baseColor","selected","hueSplit","satSplit","lightSplit","blindness","hueStep","satStep","lightStep","numberOfColors","reducer","action","name","objectSpread","defineProperty","value","Error","Store","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","Provider","getInitialGradientColors","TryItGradient","_useState","useState","_useState2","historyStack","setHistoryStack","_useState3","_useState4","futureStack","setFutureStack","_useState5","_useState6","_useState7","_useState8","componentDidMount","setComponentDidMount","_useState9","_useState10","gradientColors","setGradientColors","_useState11","_useState12","setNumberOfColors","_useContext","useContext","useEffect","setHoverEffects","pushCurrentStateAndClearFuture","allTryElements","getAllTryElements","forEach","el","addMouseEnterListener","addMouseLeaveListener","addMouseOverListener","getOutlineStyle","map","i","getElementById","addEventListener","e","elem","outline","target","stopPropagation","innerElements","querySelectorAll","allNoneHovered","includes","setColor","colorIndex","newColors","pushCurrentStateToHistory","clearFutureStack","newHistoryStack","Array","from","historyGradientColors","getCurrentComponentsStateCopy","_","addCurrentStateToFutureStack","newFutureStack","setCurrentStateFromHistory","newGradientColors","pop","setStateFromFuture","parse","gradientString","join","backgroundImage","gridAutoFlow","display","paddingTop","key","slider","width","onChange","oldN","backgroundColor","tooltip","placement","title","size","CloudDownload_default","Autorenew_default","disabled","Undo_default","Redo_default","blindnessNames","keys","None","R","G","B","Protanopia","Protanomaly","Deuteranopia","Deuteranomaly","Tritanopia","Tritanomaly","Achromatopsia","Achromatomaly","convertToBlind","_getConvertedColor","o","m","fu","getConvertedColor","tryIds","texts","backgrounds","getInitialComponentsState","background","titleBackground","primaryButton","secondaryButton","successButton","warningButton","dangerButton","infoButton","header","primaryButtonFont","secondaryButtonFont","successButtonFont","dangerButtonFont","warningButtonFont","infoButtonFont","paragraph","TryIt","showBlindness","setShowBlindness","hovered","setHoverEffectInPalette","components","setComponents","compName","getTryButton","component","font","Button","blindComponents","oldComponents","newComponents","getBlindComponentsColors","selectedColor","Card","CardHeader","CardContent","gutterBottom","CardActions","bg_color","onMouseOver","onMouseLeave","VisibilityOff_default","Visibility_default","switchers","label","TryWeb_TryIt","TryMain","selectedTryIndex","setSelectedTryIndex","tryComponent","option","ExportJSONButton","FormControl","minWidth","InputLabel","Select","MenuItem","message","config","top","duration","ClipboardCopier","lib","onCopy","success","cursor","SelectedColorPanel","selectedColorFont","ClipboardCopier_ClipboardCopier","SelectBlindness","_useContext2","htmlFor","LeftActionsBar","ExportJSONButton_ExportJSONButton","SelectedColorPanel_SelectedColorPanel","HSLPaletteGenerator","_baseColor$hsl","lightOffset","_palette","apply","index","floor","getLevel","level","getAdvancedPalette","hueSplitter","satSplitter","lightSplitter","l1","l2","l3","offsetSat","offSetLight","_baseColor$hsl3","level1Colors","level2Colors","level3Colors","l1_change","l2_change","l3_change","l1_divider","l2_divider","l3_divider","l1_v","l2_v","l3_v","generated_color","l1_Palette","indexL1","l1_value","l2_palette","indexL2","l2_value","l3_palette","indexL3","l3_value","BasicTiles","selectedKey","setSelectedKey","handleSelectColor","hexValue","palette","tilePadding","getPadding","numberOfFractions","outer","vertical","getRowHolderWidth","alignItems","height","flexWrap","justifyContent","satArr","i1","border","lightArr","i2","lineHeight","lightColor","i3","blindedColor","colorKey","isSelected","padding","AdvancedTiles","selectColor","PictureTiles","getTiles","palettePieces","palettes","margin","textAlign","PictureReducer","ColorBlindnessReducer","getScaler","window","innerWidth","getScaledHueWidth","getScaledHeight","getMainCanvas","getSaturationCanvas","drawHueCanvas","scaler","canvas","ctx","getContext","scaledWidth","scaledHeight","gradient","createLinearGradient","scaledBackHue","addColorStop","fillStyle","fillRect","setSaturationPickerStyle","drawSaturationCanvas","j","scaledBackSat","setHuePickerStyle","getValueAdjustedIntoBoundaries","val","getColorFromHueCanvas","clientX","clientY","rect","getMainCanvasRectangle","x","left","y","scaledBackX","scaledBackY","getColorFromSaturationCanvas","getSaturationCanvasRectangle","circle","scaledPositionTop","marginTop","scaledPositionLeft","marginLeft","getBoundingClientRect","ColorPickerCanvas","allowClrChange","allowSatChange","mouseDownMainCanvas","mouseDownSatCanvas","pickerCirclePositionX","pickerCirclePositionY","saturationRectPositionY","onWindowMouseUp","onWindowMouseMove","enableColorChange","disableColorChange","handleMouseDownMainCanvas","evt","setMouseDownToTrue","setColorFromMainCanvas","makeAllUnselectable","handleMouseMoveMainCanvas","setMouseDownToFalse","setHexInput","handleMouseDownSatCanvas","setSatMouseDownToTrue","setColorFromSatCanvas","handleMouseMoveSatCanvas","setSatMouseDownToFalse","body","makeAllSelectable","replace","removeEventListener","borderColor","react_throttle_lib","time","handler","onMouseDown","onMouseMove","onMouseEnter","ColorPicker","setHexValue","changeBaseColor","handleFormInput","getNumberPickerInput","numericInput","buttonPosition","onValueChange","_baseColor$rgb","color_picker_ColorPickerCanvas","html","marginBottom","whiteSpace","test","SelectBaseColorButton","renderColorPicker","setRenderColorPicker","baseColorFont","popover","content","ColorPicker_ColorPicker","visible","HSLFilters","getSliderInput","float","Slider","set","tooltipVisible","hueDividers","lightDividers","satDividers","dividers","indexOf","step","setPalettes","PictureFilters","palette1","palette2","palette3","palette4","palette5","palette6","palette7","palette8","clickedColor","image","imagePreviewUrl","generated","handleSubmit","img","Image","src","onload","drawImage","pixelArray","getImageData","data","pushVersion1Function","arr","totalHue","totalSat","totalLight","number","arr12Colors","arr24Colors1","arr48Colors1","arr72Colors1","version1Function","divider","bucketNumber","pushVersion2Function","dark","arr12Colors2","arr24Colors2","arr48Colors2","arr72Colors2","version2Function","bucket","extractColorsFunction","obj","extractColorsFunction2","darkLightArr","lightStr","darks","lights","concat","handleImageChange","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","$imagePreview","maxHeight","flexDirection","BaseColorReducer","MainPage","handleExportJSON_ButtonClick","colorElements","getElementsByClassName","getDisplayOption","show","showBasic","showAdvanced","showFromImage","LeftActionsBar_LeftActionsBar","tiles_PictureTiles","filters_SelectMode","BasicFilters_BasicTiles","filters_PictureFilters","switchLayout","layout","MainPage2","App","zEvent","ctrlKey","src_Store","components_Header","pages_MainPage","pages_MainPage2","LayoutReducer","Boolean","location","hostname","match","isAdvanced","show_extra_tools","rootReducer","combineReducers","arguments","undefined","SelectedColorReducer","HSLModeReducer","HSLBasicReducer","blindnessType","ShowExtraToolsReducer","HSLAdvancedReducer","store","createStore","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.089d9511.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    newPaletteAnchor: null,\r\n    loginAnchor: null,\r\n    signUpAnchor: null\r\n  };\r\n  handleClickPalette = event => this.setState({ newPaletteAnchor: event.currentTarget });\r\n  handleClosePalette = () => this.setState({ newPaletteAnchor: null });\r\n  navigateTo = (link) => this.props.history.push(link);\r\n  render() {\r\n\r\n    return (\r\n      <AppBar position=\"static\" className=\"header\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\" id=\"menu-button\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ color: 'white' }}>\r\n            Palette Generator\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","export let exportJSON = (colors) => {\r\n  let dataStr = JSON.stringify(colors);\r\n  let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n  \r\n  let exportFileDefaultName = 'palette.json';\r\n  let linkElement = document.createElement('a');\r\n  linkElement.setAttribute('href', dataUri);\r\n  linkElement.setAttribute('download', exportFileDefaultName);\r\n  linkElement.click();\r\n}","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeFilter = (filterMode) => { return { type: CHANGE_MODE, filterMode } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { filterMode: 'BASIC' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const FilterModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, filterMode: action.filterMode } : state\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeFilter } from '../../redux/FilterModeReducer'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport PaletteIcon from '@material-ui/icons/Palette'\r\nimport BrushIcon from '@material-ui/icons/Brush'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nconst iconStyle = { verticalAlign: 'sub', marginRight: '4px' }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        filterMode: state.FilterModeReducer.filterMode\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ changeFilter:changeFilter }, dispatch) }\r\n\r\nclass SelectMode extends Component {\r\n    getTab = (mode, icon, text) =>  <div className={this.props.filterMode == mode ? 'selected-mode' : ''} onClick={() => this.props.changeFilter(mode)} ><div> {icon} {text} </div></div>\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"select-mode-table\">\r\n                {this.getTab('BASIC', <PaletteIcon style={iconStyle} fontSize=\"small\" />, 'BASIC')}\r\n                {this.getTab('ADVANCED', <BrushIcon style={iconStyle} fontSize=\"small\" />, 'ADVANCED')}\r\n                {/*this.getRoute('/custom', <StarIcon style={iconStyle} fontSize=\"small\" />, 'CUSTOM')*/}\r\n                {this.getTab('FROM_IMAGE', <ImageIcon style={iconStyle} fontSize=\"small\" />, 'FROM IMAGE')}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMode);\r\n\r\n","class Color {\r\n  constructor(v1, v2, v3, colorFormat) {\r\n    switch (colorFormat) {\r\n      case \"RGB\":\r\n        this.setAllFromRGB(v1, v2, v3);\r\n        break;\r\n\r\n      case \"HSL\":\r\n        this.setAllFromHSL(v1, v2, v3);\r\n        break;\r\n\r\n      case \"Hex\":\r\n        this.setAllFromHex(v1);\r\n        break;\r\n\r\n      case \"ChangeColor\":\r\n        this.createChangedHSLColor(v1, v2);\r\n    }\r\n  }\r\n\r\n  // create new color from old with the hsl changes\r\n  createChangedHSLColor = (color, changes) => {\r\n    let hueChange = changes.hueChange;\r\n    let satChange = changes.satChange;\r\n    let lightChange = changes.lightChange;\r\n    let hsl = color.hsl;\r\n    let hue = (hsl.hue + hueChange) % 360;\r\n    let sat = hsl.sat + satChange;\r\n    sat = sat == 100 ? sat : sat % 100;\r\n    let light = hsl.light + lightChange;\r\n    light = light == 100 ? light : light % 100;\r\n    this.setAllFromHSL(hue, sat, light);\r\n  };\r\n\r\n  // set from\r\n  setAllFromHex = hex => {\r\n    this.HEXString = hex;\r\n    this.rgb = this.HexToRGB();\r\n    this.setAllFromRGB(this.rgb.r, this.rgb.g, this.rgb.b);\r\n  };\r\n  setAllFromRGB = (r, g, b) => {\r\n    this.rgb = { r: r, g: g, b: b };\r\n    this.hsl = this.RGBtoHSL(r, g, b);\r\n    this.setColorCSSStrings();\r\n  };\r\n  setAllFromHSL = (hue, sat, light) => {\r\n    this.hsl = { hue: hue, sat: sat, light: light };\r\n    this.rgb = this.HSLtoRGB(hue, sat, light);\r\n    this.setColorCSSStrings();\r\n  };\r\n\r\n  // set strings\r\n  setColorCSSStrings = () => {\r\n    this.setRGBString();\r\n    this.setHSLString();\r\n    this.RGBtoHex();\r\n  };\r\n  setRGBString = () => {\r\n    this.RGBString = \"rgb(\" + this.rgb.r + \", \" + this.rgb.g + \", \" + this.rgb.b + \")\";\r\n  };\r\n  setHSLString = () => {\r\n    this.HSLString = \"hsl(\" + this.hsl.hue + \", \" + this.hsl.sat + \", \" + this.hsl.light + \")\";\r\n  };\r\n  RGBtoHex = () => {\r\n    this.HEXString = \"#\" + this.numberToHex(parseInt(this.rgb.r)) + this.numberToHex(parseInt(this.rgb.g)) + this.numberToHex(parseInt(this.rgb.b));\r\n    return this.HEXString\r\n  };\r\n  numberToHex = n => {\r\n    let hex = n.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  // conversions from RGB\r\n  RGBtoHSL = (r, g, b) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n      h = s = 0;\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    // not sure about this part\r\n    let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n    hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n    return hsl;\r\n  };\r\n\r\n  // conversions from HSL\r\n  HSLtoRGB = (h, s, l) => {\r\n    let r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255) };\r\n  };\r\n  HSLtoHex = (h, s, l) => {\r\n    this.rgb = this.HSLtoRGB(h, s, l);\r\n    return this.RGBtoHex();\r\n  };\r\n  extractNumberFromHex = (start, end) => parseInt(this.HEXString.substring(start, end), 16);\r\n\r\n  // conversions from Hex\r\n  HexToRGB = () => { return { r: this.extractNumberFromHex(1, 3), g: this.extractNumberFromHex(3, 5), b: this.extractNumberFromHex(5, 7) }; };\r\n  HexToHSL = hexString => {\r\n    this.rgb = this.HexToRGB(hexString);\r\n    return this.RGBtoHex();\r\n  };\r\n}\r\n\r\nexport default Color;\r\n\r\n\r\nexport let RGBtoHSL = (r, g, b) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0;\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  let hsl = { hue: Math.round(h * 360), sat: Math.round(s * 100), light: Math.round(l * 100) }\r\n  hsl.hue = hsl.hue == 360 ? 0 : hsl.hue\r\n  return hsl;\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport Color from './utilities/Color'\r\n\r\nexport const StoreContext = createContext({})\r\n\r\nconst initialState = {\r\n    baseColor: new Color('#0695c1', 0, 0, 'Hex'),\r\n    selected: '#0695c1',\r\n    hueSplit: 8, satSplit: 4, lightSplit: 4,\r\n    blindness: 'None',\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n};\r\n\r\nconst changeStateMappings = {\r\n    'changeBaseColor': 'baseColor',\r\n    'setHueSplit': 'hueSplit',\r\n    'setSatSplit': 'satSplit',\r\n    'setLightSplit': 'lightSplit',\r\n    'selectColor': 'selected',\r\n    'setBlindness': 'blindness'\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    //let stateName = changeStateMappings[action.type]\r\n    if (action.name)\r\n        return { ...state, [action.name]: action.value }\r\n    throw new Error('State name must be defined')\r\n}\r\n\r\nconst Store = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    return (\r\n        <StoreContext.Provider value={[state, dispatch]}>{children}</StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Store;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport \"./TryIt.scss\"\r\nimport { Tooltip, Slider } from 'antd'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as _ from 'lodash'\r\nimport { StoreContext } from '../../Store';\r\n\r\nconst getInitialGradientColors = () => ([\"#4dd1f9\",\"#c9f1fd\",\"#c9c9fd\",\"#020345\"])\r\n\r\n\r\nexport default function TryItGradient(props) {\r\n\r\n    const [historyStack, setHistoryStack] = useState([]);\r\n    const [futureStack, setFutureStack] = useState([]);\r\n    const [showBlindness, setShowBlindness] = useState(true);\r\n    const [componentDidMount, setComponentDidMount] = useState(false);\r\n    const [gradientColors, setGradientColors] = useState(getInitialGradientColors());\r\n    const [numberOfColors, setNumberOfColors] = useState(4);\r\n\r\n    const [state] = useContext(StoreContext)\r\n    const { selected, blindness } = state\r\n\r\n    useEffect(() => {\r\n        setHoverEffects()\r\n        if (!componentDidMount) {\r\n            pushCurrentStateAndClearFuture()\r\n        }\r\n        setComponentDidMount(true)\r\n    });\r\n\r\n\r\n    const setHoverEffects = () => {\r\n        let allTryElements = getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            addMouseEnterListener(el, allTryElements)\r\n            addMouseLeaveListener(el)\r\n            addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    const getOutlineStyle = () => '3px dotted ' + selected\r\n    const getAllTryElements = () => gradientColors.map((color, i) => document.getElementById('gradient-' + i))\r\n    // add outline\r\n    const addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    const addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    const addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    const reset = (e) => { e.stopPropagation(); pushCurrentStateToHistory(); setGradientColors(getInitialGradientColors); setNumberOfColors(4) }\r\n\r\n    const handleNumberOfColorsInputChange = (n) => {\r\n        let oldN = numberOfColors\r\n        let newGradientColors = Array.from(gradientColors)\r\n        if (n > oldN)\r\n            for (let i = 0; i < n - oldN; i++) {\r\n                newGradientColors.push('#ffffff')\r\n            }\r\n        if (n < oldN) {\r\n            for (let i = 0; i < oldN - n; i++) {\r\n                newGradientColors.pop()\r\n            }\r\n        }\r\n        setGradientColors(newGradientColors)\r\n        setNumberOfColors(n)\r\n\r\n    }\r\n    const setColor = (e, colorIndex) => {\r\n        e.stopPropagation()\r\n        pushCurrentStateAndClearFuture()\r\n        let newColors = gradientColors\r\n        newColors[colorIndex] = selected\r\n        setGradientColors(newColors)\r\n    }\r\n\r\n\r\n    // Add/Remove History\r\n\r\n    // TODO: rename it? \r\n    const pushCurrentStateAndClearFuture = () => {\r\n        pushCurrentStateToHistory()\r\n        clearFutureStack()\r\n    }\r\n\r\n    const pushCurrentStateToHistory = () => {\r\n        let newHistoryStack = Array.from(historyStack)\r\n        let historyGradientColors = getCurrentComponentsStateCopy()\r\n        if (!_.isEqual(newHistoryStack[0], historyGradientColors)) {\r\n            newHistoryStack.push(historyGradientColors)\r\n            setHistoryStack(newHistoryStack)\r\n        }\r\n    }\r\n    const clearFutureStack = () =>\r\n        setFutureStack([])\r\n\r\n\r\n    const undo = () => {\r\n        addCurrentStateToFutureStack()\r\n        setCurrentStateFromHistory()\r\n    }\r\n    const addCurrentStateToFutureStack = () => {\r\n        let newFutureStack = Array.from(futureStack)\r\n        newFutureStack.push(getCurrentComponentsStateCopy())\r\n        setFutureStack(newFutureStack)\r\n    }\r\n    const setCurrentStateFromHistory = () => {\r\n        let newHistoryStack = Array.from(historyStack)\r\n        let newGradientColors = historyStack.pop()\r\n        setHistoryStack(newHistoryStack)\r\n        setGradientColors(newGradientColors)\r\n    }\r\n\r\n    const redo = () => {\r\n        pushCurrentStateToHistory()\r\n        setStateFromFuture()\r\n    }\r\n    const setStateFromFuture = () => {\r\n        let newFutureStack = Array.from(futureStack)\r\n        let newGradientColors = newFutureStack.pop()\r\n        setFutureStack(newFutureStack)\r\n        setGradientColors(newGradientColors)\r\n    }\r\n\r\n    const getCurrentComponentsStateCopy = () =>\r\n        JSON.parse(JSON.stringify(gradientColors))\r\n\r\n\r\n    let gradientString = \"linear-gradient(to right,\" + gradientColors.join(',') + \")\"\r\n\r\n    return (\r\n        <div className='try-web'>\r\n\r\n            <div className=\"try-colors-container\" style={{ backgroundImage: gradientString, gridAutoFlow: 'column', display: 'grid' }}>\r\n                {gradientColors.map(\r\n                    (color, i) =>\r\n                        <div style={{ paddingTop: '150px', }} key={color + i}\r\n                            onClick={(e) => setColor(e, i)} id={'gradient-' + i} />\r\n                )}\r\n            </div>\r\n\r\n            <div >\r\n                <Slider className=\"slider-input gradient-slider\" style={{ width: '100%' }} min={2} max={8} onChange={handleNumberOfColorsInputChange} value={numberOfColors} />\r\n            </div>\r\n\r\n            <div className=\"applied-colors-container\">\r\n                {gradientColors.map((color, i) =>\r\n                    <div className=\"applied-color\" key={'applied' + color + i}\r\n                        style={{ backgroundColor: color, color: new Color(color, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white' }}\r\n                        onClick={(e) => setColor(e, i)}>\r\n                    </div>)}\r\n            </div>\r\n\r\n            <div className='try-actions-container'>\r\n                <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                    <IconButton size='small' onClick={() => exportJSON(gradientColors)} > <CloudDownloadIcon /> </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                    <IconButton size='small' onClick={reset} > <AutorenewIcon /></IconButton>\r\n                </Tooltip>\r\n\r\n                <IconButton size='small' onClick={undo} disabled={historyStack.length == 0}>\r\n                    <UndoIcon />\r\n                </IconButton>\r\n\r\n                <IconButton size='small' onClick={redo} disabled={futureStack.length == 0}>\r\n                    <RedoIcon />\r\n                </IconButton>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","// http://web.archive.org/web/20081014161121/http://www.colorjack.com/labs/colormatrix/\r\n\r\nconst blinds =\r\n{\r\n    None: { R: [100, 0, 0], G: [0, 100, 0], B: [0, 100, 0] },\r\n    Protanopia: { R: [56.667, 43.333, 0], G: [55.833, 44.167, 0], B: [0, 24.167, 75.833] },\r\n    Protanomaly: { R: [81.667, 18.333, 0], G: [33.333, 66.667, 0], B: [0, 12.5, 87.5] },\r\n    Deuteranopia: { R: [62.5, 37.5, 0], G: [70, 30, 0], B: [0, 30, 70] },\r\n    Deuteranomaly: { R: [80, 20, 0], G: [25.833, 74.167, 0], B: [0, 14.167, 85.833] },\r\n    Tritanopia: { R: [95, 5, 0], G: [0, 43.333, 56.667], B: [0, 47.5, 52.5] },\r\n    Tritanomaly: { R: [96.667, 3.333, 0], G: [0, 73.333, 26.667], B: [0, 18.333, 81.667] },\r\n    Achromatopsia: { R: [29.9, 58.7, 11.4], G: [29.9, 58.7, 11.4], B: [29.9, 58.7, 11.4] },\r\n    Achromatomaly: { R: [61.8, 32, 6.2], G: [16.3, 77.5, 6.2], B: [16.3, 32.0, 51.6] }\r\n}\r\n\r\n\r\nconst Blind = function (v) { // this function just returns the Matrix\r\n\r\n    return ({\r\n        'None': [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanopia': [0.567, 0.433, 0, 0, 0, 0.558, 0.442, 0, 0, 0, 0, 0.242, 0.758, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Protanomaly': [0.817, 0.183, 0, 0, 0, 0.333, 0.667, 0, 0, 0, 0, 0.125, 0.875, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranopia': [0.625, 0.375, 0, 0, 0, 0.7, 0.3, 0, 0, 0, 0, 0.3, 0.7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Deuteranomaly': [0.8, 0.2, 0, 0, 0, 0.258, 0.742, 0, 0, 0, 0, 0.142, 0.858, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanopia': [0.95, 0.05, 0, 0, 0, 0, 0.433, 0.567, 0, 0, 0, 0.475, 0.525, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Tritanomaly': [0.967, 0.033, 0, 0, 0, 0, 0.733, 0.267, 0, 0, 0, 0.183, 0.817, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatopsia': [0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0.299, 0.587, 0.114, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n        'Achromatomaly': [0.618, 0.320, 0.062, 0, 0, 0.163, 0.775, 0.062, 0, 0, 0.163, 0.320, 0.516, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\r\n    }[v]);\r\n\r\n};\r\n\r\nconst getConvertedColor = (o, m) => { // takes: RGBA object, Matrix array\r\n    function fu(n) { return (n < 0 ? 0 : (n < 255 ? n : 255)); }\r\n\r\n    var r = ((o.r * m[0]) + (o.g * m[1]) + (o.b * m[2]) + (1 * m[3]) + m[4]);\r\n    var g = ((o.r * m[5]) + (o.g * m[6]) + (o.b * m[7]) + (1 * m[8]) + m[9]);\r\n    var b = ((o.r * m[10]) + (o.g * m[11]) + (o.b * m[12]) + (1 * m[13]) + m[14]);\r\n    var a = ((o.r * m[15]) + (o.g * m[16]) + (o.b * m[17]) + (1 * m[18]) + m[19]);\r\n\r\n    return ({ 'r': fu(r), 'g': fu(g), 'b': fu(b), 'a': fu(a) });\r\n\r\n};\r\n\r\nexport const blindnessNames = Object.keys(blinds)\r\n\r\n\r\nexport const convertToBlind = (color, type) => {\r\n\r\n    const { r, g, b, a } = getConvertedColor(color.rgb, Blind(type));\r\n    return 'rgba( ' + r + ', ' + g + ', ' + b + ', ' + a + ')'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Color from '../../utilities/Color'\r\nimport { exportJSON } from '../../utilities/ExportJSON';\r\nimport \"./TryIt.scss\"\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\r\nimport UndoIcon from '@material-ui/icons/Undo'\r\nimport RedoIcon from '@material-ui/icons/Redo'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\nimport { Tooltip } from 'antd'\r\nimport * as _ from 'lodash'\r\nimport { StoreContext } from '../../Store';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nconst tryIds = [\"try-background\", \"try-title\", \"try-title-background\", \"try-header\", \"try-text\", \"try-button-primary\",\r\n    \"try-button-primary-font\", \"try-button-secondary\", \"try-button-secondary-font\", \"try-button-success\",\r\n    \"try-button-warning-font\", \"try-button-warning\",\r\n    \"try-button-success-font\", \"try-button-info\", \"try-button-info-font\", \"try-button-danger\", \"try-button-danger-font\"]\r\n\r\nconst texts = ['title', 'header', 'primaryButtonFont', 'secondaryButtonFont', 'successButtonFont', 'dangerButtonFont', 'warningButtonFont', 'infoButtonFont', 'paragraph']\r\nconst backgrounds = ['titleBackground', 'background', 'primaryButton', 'secondaryButton', 'successButton', 'warningButton', 'dangerButton', 'infoButton']\r\n\r\nconst backgroundColor = '#ffffff'\r\nconst textColor = '#030202'\r\n\r\nconst getInitialComponentsState = () => ({\r\n    background: backgroundColor,\r\n    titleBackground: '#0695c1',\r\n    primaryButton: backgroundColor,\r\n    secondaryButton: backgroundColor,\r\n    successButton: backgroundColor,\r\n    warningButton: backgroundColor,\r\n    dangerButton: backgroundColor,\r\n    infoButton: backgroundColor,\r\n\r\n    title: backgroundColor,\r\n    header: textColor,\r\n    primaryButtonFont: textColor,\r\n    secondaryButtonFont: textColor,\r\n    successButtonFont: textColor,\r\n    dangerButtonFont: textColor,\r\n    warningButtonFont: textColor,\r\n    infoButtonFont: textColor,\r\n    paragraph: textColor,\r\n})\r\n\r\n\r\n\r\nexport default function TryIt(props) {\r\n\r\n    const [historyStack, setHistoryStack] = useState([]);\r\n    const [futureStack, setFutureStack] = useState([]);\r\n    const [showBlindness, setShowBlindness] = useState(true);\r\n    const [hovered, setHoverEffectInPalette] = useState(null);\r\n    const [componentDidMount, setComponentDidMount] = useState(false);\r\n    const [components, setComponents] = useState(getInitialComponentsState());\r\n\r\n    const [state] = useContext(StoreContext)\r\n    const { selected, blindness } = state\r\n\r\n    useEffect(() => {\r\n        setHoverEffects()\r\n        if (!componentDidMount) {\r\n            pushCurrentStateAndClearFuture()\r\n        }\r\n        setComponentDidMount(true)\r\n    });\r\n\r\n\r\n\r\n    // Add/Remove History\r\n\r\n    // TODO: rename it? \r\n    const pushCurrentStateAndClearFuture = () => {\r\n        pushCurrentStateToHistory()\r\n        clearFutureStack()\r\n    }\r\n\r\n    const pushCurrentStateToHistory = () => {\r\n        let newHistoryStack = Array.from(historyStack)\r\n        let components = getCurrentComponentsStateCopy()\r\n        if (!_.isEqual(newHistoryStack[0], components)) {\r\n            newHistoryStack.push(components)\r\n            setHistoryStack(newHistoryStack)\r\n        }\r\n    }\r\n    const clearFutureStack = () =>\r\n        setFutureStack([])\r\n\r\n    const undo = () => {\r\n        addCurrentStateToFutureStack()\r\n        setCurrentStateFromHistory()\r\n    }\r\n    const addCurrentStateToFutureStack = () => {\r\n        let newFutureStack = Array.from(futureStack)\r\n        newFutureStack.push(getCurrentComponentsStateCopy())\r\n        setFutureStack(newFutureStack)\r\n    }\r\n    const setCurrentStateFromHistory = () => {\r\n        let newHistoryStack = Array.from(historyStack)\r\n        let components = newHistoryStack.pop()\r\n        setHistoryStack(newHistoryStack)\r\n        setComponents(components)\r\n    }\r\n\r\n    const redo = () => {\r\n        pushCurrentStateToHistory()\r\n        setStateFromFuture()\r\n    }\r\n    const setStateFromFuture = () => {\r\n        let newFutureStack = Array.from(futureStack)\r\n        let components = newFutureStack.pop()\r\n        setFutureStack(newFutureStack)\r\n        setComponents(components)\r\n    }\r\n\r\n    const getCurrentComponentsStateCopy = () =>\r\n        JSON.parse(JSON.stringify(components))\r\n\r\n    const setHoverEffects = () => {\r\n        let allTryElements = getAllTryElements()\r\n        allTryElements.forEach(el => {\r\n            addMouseEnterListener(el, allTryElements)\r\n            addMouseLeaveListener(el)\r\n            addMouseOverListener(el)\r\n        }\r\n        )\r\n    }\r\n    const getOutlineStyle = () => '3px dotted ' + selected\r\n    const getAllTryElements = () => tryIds.map(id => document.getElementById(id))\r\n    // add outline\r\n    const addMouseEnterListener = (el, allTryElements) => el.addEventListener(\"mouseenter\", (e) => { allTryElements.forEach(elem => elem.style.outline = 'none'); el.style.outline = getOutlineStyle(); })\r\n    // remove outline when mouse leave\r\n    const addMouseLeaveListener = (el) => el.addEventListener(\"mouseleave\", (e) => e.target.style.outline = 'none')\r\n    // add outline to parent element when mouseleave from inner element\r\n    const addMouseOverListener = (el) => el.addEventListener(\"mouseover\", (e) => {\r\n        e.stopPropagation()\r\n        let innerElements = el.querySelectorAll('*')\r\n        let allNoneHovered = true\r\n        innerElements.forEach(elem => { if (allNoneHovered) allNoneHovered = !elem.style.outline.includes('3px dotted ') })\r\n        el.style.outline = allNoneHovered ? getOutlineStyle() : 'none'\r\n    }\r\n    )\r\n\r\n    const reset = (e) => {\r\n        e.stopPropagation(); pushCurrentStateToHistory();\r\n        setComponents(getInitialComponentsState)\r\n        setHoverEffectInPalette(null)\r\n    }\r\n\r\n    const setColor = (e, compName) => {\r\n        e.stopPropagation()\r\n        pushCurrentStateAndClearFuture()\r\n        let newColors = components\r\n        newColors[compName] = selected\r\n        setComponents(newColors)\r\n    }\r\n    // selectedColor when passed from a compononent\r\n    //const getSelectedColor = () => selectedColor != null ? selectedColor : selected\r\n\r\n    const getTryButton = (component, id, background, font, text) =>\r\n        <Button style={{ backgroundColor: background, color: font }} variant=\"contained\" className='try-button' size='small'\r\n            onClick={(e) => setColor(e, component)} id={id} style={{\r\n                backgroundColor: background, color: font,// border: '1px solid ' + font + '80'\r\n            }}>\r\n            <div onClick={(e) => setColor(e, component + 'Font')} id={id + \"-font\"}>{text} </div>\r\n        </Button>\r\n\r\n    const getBlindComponentsColors = () => {\r\n        let oldComponents = components\r\n        let newComponents = {}\r\n        if (showBlindness && blindness != 'None') {\r\n            Object.keys(oldComponents).forEach(key =>\r\n                newComponents[key] = convertToBlind(new Color(oldComponents[key], 0, 0, 'Hex'), blindness)\r\n            )\r\n            return newComponents\r\n        }\r\n\r\n        return oldComponents\r\n    }\r\n\r\n    let blindComponents = getBlindComponentsColors()\r\n    const { title, header,\r\n        background, primaryButton, secondaryButton, successButton,\r\n        dangerButton, infoButton, primaryButtonFont, warningButton, warningButtonFont,\r\n        secondaryButtonFont, successButtonFont, dangerButtonFont, infoButtonFont, paragraph, titleBackground } = blindComponents\r\n    let selectedColor = selected\r\n\r\n    return (\r\n        <div className='try-web'>\r\n\r\n\r\n            <Card className=\"try-card-holder\">\r\n                <CardHeader\r\n                    onClick={(e) => setColor(e, 'titleBackground')}\r\n                    title={\r\n                        <span id=\"try-title\" style={{ color: title }} onClick={(e) => setColor(e, 'title')} >Title </span>\r\n                    } style={{ backgroundColor: titleBackground }} id=\"try-title-background\" />\r\n                <CardContent id=\"try-background\" onClick={(e) => setColor(e, 'background')}\r\n                    style={{ backgroundColor: background }}>\r\n\r\n                    <Typography variant=\"h6\" gutterBottom style={{ color: header }} id=\"try-header\" onClick={(e) => setColor(e, 'header')}>\r\n                        Header\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"subtitle2\" gutterBottom id=\"try-text\" onClick={(e) => setColor(e, 'paragraph')} style={{ color: paragraph }}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                            {/* Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. */}\r\n\r\n                    </Typography>\r\n\r\n                    <br />\r\n                    <CardActions>\r\n                        <div style={{ display: 'flex' }}>\r\n                            {getTryButton('primaryButton', \"try-button-primary\", primaryButton, primaryButtonFont, 'Primary')}\r\n                            {getTryButton('secondaryButton', \"try-button-secondary\", secondaryButton, secondaryButtonFont, 'Secondary')}\r\n                        </div>\r\n                        <br />\r\n                    </CardActions><CardActions>\r\n                        <div style={{ display: 'flex' }}>\r\n                            {getTryButton('successButton', \"try-button-success\", successButton, successButtonFont, 'Success')}\r\n                            {getTryButton('infoButton', \"try-button-info\", infoButton, infoButtonFont, 'Info')}\r\n                            {getTryButton('warningButton', \"try-button-warning\", warningButton, warningButtonFont, 'Warning')}\r\n                            {getTryButton('dangerButton', \"try-button-danger\", dangerButton, dangerButtonFont, 'Danger')}\r\n                        </div>\r\n                    </CardActions>\r\n                </CardContent >\r\n            </Card>\r\n\r\n            <div className=\"applied-colors-container\">\r\n                {backgrounds.map((name, i) => {\r\n                    let key = \"text_\" + name + \"_\" + i\r\n                    let is_hovered = hovered == key\r\n                    let bg_color = is_hovered ? selectedColor : blindComponents[name]\r\n                    return (\r\n                        <div className=\"applied-color\" key={key}\r\n                            onMouseOver={() => setHoverEffectInPalette(name)}\r\n                            onMouseLeave={() => setHoverEffectInPalette(null)}\r\n                            onClick={(e) => setColor(e, name)}\r\n                            style={{\r\n                                backgroundColor: bg_color\r\n                            }} />)\r\n                }\r\n                )}\r\n                {texts.map((key, i) =>\r\n                    <div className=\"applied-color\" key={\"bg_\" + key + \"_\" + i}\r\n                        onClick={(e) => setColor(e, key)}\r\n                        style={{\r\n                            backgroundColor: blindComponents[key]\r\n                        }}>\r\n                        {}\r\n                    </div>)}\r\n            </div>\r\n\r\n            <div className='try-actions-container'>\r\n\r\n                <Tooltip placement=\"bottom\" title={\"Export JSON\"}>\r\n                    <IconButton size='small' onClick={(e) => { e.stopPropagation(); exportJSON(blindComponents) }}> <CloudDownloadIcon /> </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip placement=\"bottom\" title={\"Reset Applied Colors\"}>\r\n                    <IconButton size='small' onClick={reset}> <AutorenewIcon />  </IconButton>\r\n                </Tooltip>\r\n\r\n                <IconButton size='small' onClick={undo} disabled={historyStack.length == 0}>\r\n                    <UndoIcon />\r\n                </IconButton>\r\n\r\n                <IconButton size='small' onClick={redo} disabled={futureStack.length == 0}>\r\n                    <RedoIcon />\r\n                </IconButton>\r\n\r\n                <Tooltip placement=\"bottom\" title={showBlindness ? \"Hide blind colors\" : \"Show blind colors\"}>\r\n                    <IconButton size='small' onClick={() => setShowBlindness(!showBlindness)}>\r\n                        {showBlindness && <VisibilityOffIcon /> || <VisibilityIcon />}\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TryItGradient from \"./TryItGradient\";\r\nimport TryWeb from \"./TryWeb\";\r\n//import TryPixelArt from \"./TryPixelArt\";\r\n\r\n\r\nconst switchers = [\r\n    {\r\n        label: 'CARD', component: () => <TryWeb />\r\n    },\r\n    {\r\n        label: 'GRADIENT', component: () => <TryItGradient />\r\n    },\r\n    /*\r\n    {\r\n        label: 'PIXEL ART', component: () => <TryPixelArt />\r\n    }*/]\r\n\r\n\r\nexport default function TryMain(props) {\r\n\r\n    const [selectedTryIndex, setSelectedTryIndex] = useState(0);\r\n    const tryComponent = switchers[selectedTryIndex].component()\r\n\r\n    return (\r\n        <div className='try-holder'>\r\n\r\n            <div className=\"select-mode-table\">\r\n                {switchers.map(\r\n                    (option, i) => \r\n                    <div key={\"switcher\" + i} onClick={() => setSelectedTryIndex(i)} className={i == selectedTryIndex ? 'selected-mode' : ''}><div> {option.label}</div> </div>)}\r\n            </div>\r\n            {tryComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport const ExportJSONButton = (props) => (\r\n    <FormControl style={{ minWidth: 150 }}>\r\n        <InputLabel>Export Palette</InputLabel>\r\n        <Select\r\n            onChange={props.onClick}\r\n        >\r\n            <MenuItem value={'JSON'}>JSON</MenuItem>)}\r\n                </Select>\r\n    </FormControl>\r\n)\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { message, } from 'antd';\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 1\r\n});\r\n\r\nexport const ClipboardCopier = (props) => (\r\n  <CopyToClipboard text={props.value} onCopy={() => message.success(props.value + ' copied to clipboard', 1)}>\r\n    <span style={{ cursor: 'pointer' }}>\r\n      {props.children}\r\n    </span>\r\n  </CopyToClipboard>\r\n)\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ClipboardCopier } from '../../components/ClipboardCopier'\r\nimport Color from \"../../utilities/Color\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nimport { StoreContext } from '../../Store';\r\n\r\nexport const SelectedColorPanel = (props) => {\r\n    const [state] = useContext(StoreContext)\r\n    const { selected } = state\r\n\r\n    let selectedColor = selected\r\n    let selectedColorFont = new Color(selectedColor, 0, 0, 'Hex').hsl.light > 40 ? 'rgb(33, 33, 33)' : 'white'\r\n\r\n    //<Icon icon=\"duplicate\" style={{ verticalAlign: 'bottom', fontSize: '0.8em' }} />\r\n    return (\r\n        <ClipboardCopier value={selectedColor} >\r\n            <div className=\"selected-color-panel\" style={{ backgroundColor: selectedColor, color: selectedColorFont }}>\r\n                <label>{selectedColor}   </label>\r\n            </div>\r\n        </ClipboardCopier >\r\n    )\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { blindnessNames } from \"../../utilities/BlindConversion\";\r\nimport { StoreContext } from '../../Store';\r\n\r\nexport default function SelectBlindness(props) {\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { blindness } = state\r\n    const handleChange = event => dispatch({ name: 'blindness', value: event.target.value }) \r\n\r\n    return (\r\n        <FormControl style={{ minWidth: 150 }}>\r\n            <InputLabel htmlFor=\"age-simple\">Color Blindness</InputLabel>\r\n            <Select\r\n                value={blindness}\r\n                onChange={handleChange}\r\n            >\r\n                {blindnessNames.map(name => <MenuItem value={name} key={name}>{name}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { ExportJSONButton } from '../../components/ExportJSONButton'\r\nimport {SelectedColorPanel} from \"./SelectedColorPanel\";\r\nimport SelectBlindness from \"./SelectBlindness\";\r\n\r\nexport const LeftActionsBar = (props) => {\r\n\r\n        return (\r\n            <div className=\" tiles-actions-bar \" >\r\n                <div>\r\n                    <SelectBlindness />\r\n                </div>\r\n                <div>\r\n                    <ExportJSONButton onClick={props.exportJSON} />\r\n                </div>\r\n                <div>\r\n                    <SelectedColorPanel />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n","import Color from './Color'\r\n\r\nclass HSLPaletteGenerator {\r\n  constructor(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors) {\r\n    let { hue, sat, light } = baseColor.hsl;\r\n    light = parseInt(light)\r\n    let lightOffset = light == 0 ? 0 : 1\r\n    this._palette = Array.apply(null, { length: numberOfColors }).map((el, index) => {\r\n      let h = (parseInt(hue) + (Math.floor(index / hueStep) * hueChange)) % 360\r\n      let s = (parseInt(sat) + (Math.floor(index / satStep) * satChange)) % 100\r\n      let l = light == 100 && index == 0 ? 100 : (light + (Math.floor(index / lightStep) * lightChange)) % (100 + lightOffset)\r\n      return new Color(h, s, l, 'HSL')\r\n    })\r\n  }\r\n  get palette() { return this._palette }\r\n}\r\nexport default HSLPaletteGenerator;\r\n\r\n\r\n\r\nexport let getBasicPalette = (baseColor, hueSplitter, satSplitter, lightSplitter) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 100 / satSplitter\r\n  let lightChange = 100 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let saturations = Array.apply(null, { length: satSplitter })\r\n  let hues = Array.apply(null, { length: hueSplitter })\r\n  let lights = Array.apply(null, { length: lightSplitter })\r\n\r\n  let l1_change = satChange\r\n  let l2_change = hueChange\r\n  let l3_change = lightChange\r\n\r\n  let l1_divider = 100\r\n  let l2_divider = 360\r\n  let l3_divider = 100\r\n\r\n  let l1_v = sat\r\n  let l2_v = hue\r\n  let l3_v = light\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  saturations.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    hues.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      lights.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color['s'] = l1_value\r\n        generated_color['h'] = l2_value\r\n        generated_color['l'] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n\r\n\r\n\r\n\r\nlet getLevel = (level, h, s, l) => (level == 'h' ? h : level == 's' ? s : l)\r\n\r\nexport let getAdvancedPalette = (baseColor, hueSplitter, satSplitter, lightSplitter, l1, l2, l3, offsetSat, offSetLight) => {\r\n  let { hue, sat, light } = baseColor.hsl;\r\n  let hueChange = 360 / hueSplitter\r\n  let satChange = 101 / satSplitter\r\n  let lightChange = 101 / lightSplitter\r\n\r\n  // Level 1: saturation\r\n  // Level 2: hue\r\n  // Level 3: light\r\n  let level1Colors = Array.apply(null, { length: getLevel(l1, hueSplitter, satSplitter, lightSplitter) })\r\n  let level2Colors = Array.apply(null, { length: getLevel(l2, hueSplitter, satSplitter, lightSplitter) })\r\n  let level3Colors = Array.apply(null, { length: getLevel(l3, hueSplitter, satSplitter, lightSplitter) })\r\n\r\n  let l1_change = getLevel(l1, hueChange, satChange, lightChange)\r\n  let l2_change = getLevel(l2, hueChange, satChange, lightChange)\r\n  let l3_change = getLevel(l3, hueChange, satChange, lightChange)\r\n\r\n  let l1_divider = getLevel(l1, 360, 101, 101)\r\n  let l2_divider = getLevel(l2, 360, 101, 101)\r\n  let l3_divider = getLevel(l3, 360, 101, 101)\r\n\r\n  let l1_v = getLevel(l1, hue, sat, light)\r\n  let l2_v = getLevel(l2, hue, sat, light)\r\n  let l3_v = getLevel(l3, hue, sat, light)\r\n\r\n  let generated_color = { h: null, s: null, l: null }\r\n\r\n  let l1_Palette = [] // 3d array\r\n  level1Colors.forEach((el, indexL1) => {\r\n\r\n    let l1_value = (parseInt(l1_v) + (indexL1 * l1_change)) % l1_divider\r\n\r\n    let l2_palette = []\r\n    level2Colors.forEach((el, indexL2) => {\r\n\r\n      let l2_value = (parseInt(l2_v) + (indexL2 * l2_change)) % l2_divider\r\n\r\n      let l3_palette = []\r\n      level3Colors.forEach((el, indexL3) => {\r\n        let l3_value = (parseInt(l3_v) + (indexL3 * l3_change)) % l3_divider\r\n\r\n        generated_color[l1] = l1_value\r\n        generated_color[l2] = l2_value\r\n        generated_color[l3] = l3_value\r\n        l3_palette.push(new Color(generated_color.h, generated_color.s, generated_color.l, 'HSL'))\r\n      })\r\n      l2_palette.push(l3_palette)\r\n    })\r\n    l1_Palette.push(l2_palette)\r\n  })\r\n\r\n  return l1_Palette\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { getAdvancedPalette } from \"../../utilities/HSLPaletteGenerator\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\n\r\nimport { StoreContext } from '../../Store';\r\n\r\nexport default function BasicTiles(props) {\r\n\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const [selectedKey, setSelectedKey] = useState('');\r\n    const { hueSplit, satSplit, lightSplit, baseColor, blindness } = state\r\n    const selectColor = (color) => dispatch({ name: 'selected', value: color })\r\n\r\n    let getPadding = (palette) => {\r\n        let horizontal = palette[0][0].length\r\n        let padding = 100 / (horizontal * 2) // * by 2 because padding takes left and right parts\r\n        return padding //- 0.1\r\n    }\r\n    let getRowHolderWidth = (palette) => {\r\n        let outer = palette.length\r\n        let width = palette[0][0].length\r\n        let vertical = palette[0].length\r\n\r\n        // 1\r\n        if (width == 1) {\r\n            if (vertical == 1)\r\n                return 6\r\n            if (vertical == 10)\r\n                return 12\r\n            if (vertical == 5 & outer > 6)\r\n                return 12\r\n            if (vertical > 1)\r\n                return 8\r\n        }\r\n\r\n        // 2\r\n        if (width == 2) {\r\n            if (vertical == 5 && outer == 1)\r\n                return 3\r\n            if (vertical == 5 && outer > 4 && outer < 9)\r\n                return 5\r\n            if (vertical == 5 && outer == 15)\r\n                return 8\r\n            if (vertical < 10 && outer < 9)\r\n                return 4\r\n            if (vertical < 10 && outer > 8 && outer < 12)\r\n                return 5\r\n            if (vertical < 10 && outer >= 12)\r\n                return 6\r\n            if (vertical >= 10 && outer >= 6)\r\n                return 10\r\n            if (vertical >= 10 && outer < 6)\r\n                return 5\r\n        }\r\n\r\n        // 4\r\n        if (width == 4) {\r\n            if (vertical == 1 && outer > 1)\r\n                return 2\r\n            if (vertical == 4 && outer > 9)\r\n                return 4\r\n            if (vertical > 4 && outer == 4)\r\n                return 4\r\n\r\n            if (vertical == 5 && outer == 1)\r\n                return 2\r\n            if (vertical == 5 && outer > 7)\r\n                return 4\r\n            if (vertical == 5 && outer == 15)\r\n                return 5\r\n\r\n            if (vertical >= 10 && outer < 3)\r\n                return 3\r\n            if (vertical >= 10 && outer == 5)\r\n                return 5\r\n            if (vertical >= 10 && outer == 6)\r\n                return 6\r\n            if (vertical >= 10 && outer > 7)\r\n                return 7\r\n\r\n        }\r\n        // 5\r\n        if (width == 5) {\r\n            if (vertical == 1 && outer < 7)\r\n                return 1\r\n            if (vertical == 1 && outer > 6)\r\n                return 2\r\n            if (vertical == 2 && outer > 9)\r\n                return 3\r\n            if (vertical == 2 && outer < 9)\r\n                return 2\r\n            if (vertical == 4 && outer <= 2)\r\n                return 2\r\n            if (vertical == 4 && outer == 4)\r\n                return 2\r\n            if (vertical == 5 && outer <= 2)\r\n                return 2\r\n            if (vertical >= 10 && outer > 7)\r\n                return 6\r\n            if (outer > 9)\r\n                return 4\r\n        }\r\n\r\n        // 4 5\r\n        if (width > 3 && width < 6) {\r\n            if (vertical > 3 && outer == 3)\r\n                return 3\r\n            if (vertical == 2 && outer > 4)\r\n                return 3\r\n            if (vertical > 2 && vertical < 6 && outer > 4)// && outer < 10)\r\n                return 3\r\n            if (vertical >= 10 && outer == 1)\r\n                return 2\r\n        }\r\n\r\n        // 10 12 15\r\n        if (width >= 10 && width < 20) {\r\n            if (vertical == 1)\r\n                return 1\r\n            if (vertical == 2 && outer < 6)\r\n                return 1\r\n            if (outer == 1)\r\n                return 1\r\n            if (outer >= 2)\r\n                return 2\r\n        }\r\n        // 20\r\n        if (width == 20)\r\n            return 1\r\n\r\n        return 2\r\n    }\r\n\r\n    // TILES PART\r\n    let handleSelectColor = (hexValue, selectedKey) => {\r\n        setSelectedKey(selectedKey)\r\n        selectColor(hexValue)\r\n    }\r\n\r\n    let palette = getAdvancedPalette(baseColor, hueSplit, satSplit, lightSplit, 'h', 's', 'l', 0, 0)\r\n    let tilePadding = getPadding(palette)\r\n    let numberOfFractions = getRowHolderWidth(palette)\r\n    let wrapperStyle = {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'table', alignItems: 'center', height: '100%' }} className='tiles-section'>\r\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n\r\n                <div style={wrapperStyle}>\r\n                    {palette.map((satArr, i1) =>\r\n                        <div key={i1 + \"l1\"} style={{ border: 'solid 4px white', width: (100 / numberOfFractions) - 1 + '%' }}>\r\n\r\n                            {satArr.map((lightArr, i2) =>\r\n                                <div key={i1 + \"-\" + i2 + \"l2\"} style={{ lineHeight: 0 }}>\r\n                                    {lightArr.map((lightColor, i3) => {\r\n                                        let color = lightColor.HEXString\r\n                                        let blindedColor = convertToBlind(lightColor, blindness)\r\n                                        let colorKey = i1 + '' + i2 + '' + i3 + color\r\n                                        let isSelected = selectedKey == colorKey\r\n                                        return <div key={colorKey} id={color}\r\n                                            className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                                            style={{\r\n                                                background: blindedColor, padding: tilePadding + '%', width: tilePadding * 2 + '%', height: tilePadding * 2 + '%',\r\n                                                border: 'none'\r\n                                            }}\r\n                                            onClick={() => handleSelectColor(color, colorKey)} />\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div >)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useContext, useState} from \"react\";\r\nimport HSLPaletteGenerator from \"../../utilities/HSLPaletteGenerator\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\nimport { StoreContext } from '../../Store';\r\n\r\nexport default function AdvancedTiles(props) {\r\n\r\n    const [selectedKey, setSelectedKey] = useState('');\r\n\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors, blindness } = state\r\n    const set = (name, value) => dispatch({ name, value })\r\n\r\n    const handleSelectColor = (hexValue, selectedKey) => {\r\n        setSelectedKey({ selectedKey })\r\n        set('selected', hexValue)\r\n    }\r\n\r\n    let palette = new HSLPaletteGenerator(baseColor, hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors).palette\r\n\r\n    return (\r\n        <div style={{ display: 'table', alignItems: 'center', height: '100%', width: '100%' }} className='tiles-section'>\r\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }} >\r\n\r\n                    {palette.map((color, index) => {\r\n                        let hex = color.HEXString\r\n                        let blindedColor = convertToBlind(color, blindness)\r\n                        let colorKey = index + hex\r\n                        let isSelected = selectedKey == colorKey\r\n                        return <div key={colorKey} id={hex}\r\n                            className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n                            style={{\r\n                                background: blindedColor, padding: '5%', width: '10%', height: '10%',\r\n                                border: 'none'\r\n                            }}\r\n                            onClick={() => handleSelectColor(hex, colorKey)} />\r\n                    }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n","import Color from '../utilities/Color'\r\nconst SELECT_COLOR = 'SELECT_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let selectColor = (color) => { return { type: SELECT_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { selected: new Color('#81042b', 0, 0, 'Hex').HEXString };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const SelectedColorReducer = (state = initial_state, action) =>  action.type == SELECT_COLOR ? { ...state, selected: action.color, } : state\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectColor } from \"../../redux/SelectedColorReducer\";\r\nimport { convertToBlind } from \"../../utilities/BlindConversion\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    palettes: state.PictureReducer.palettes,\r\n    blindness: state.ColorBlindnessReducer.blindness\r\n  };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ selectColor: selectColor }, dispatch);\r\n};\r\n\r\nclass PictureTiles extends Component {\r\n  state = {\r\n    selectedKey: ''\r\n  };\r\n\r\n  getTiles = palette => {\r\n    let palettePieces = \"\";\r\n    if (palette.length != 0) {\r\n      palettePieces = palette.map(\r\n        (color, index) => {\r\n          let hex = color.HEXString\r\n          if (hex != '#NaNNaNNaN') {\r\n            let blindedColor = convertToBlind(color, this.props.blindness)\r\n            let colorKey = index + hex\r\n            let isSelected = this.state.selectedKey == colorKey\r\n            return <div key={colorKey} id={hex}\r\n              className={\"single-tile-basic \" + (isSelected ? 'selected-tile' : '')}\r\n              style={{\r\n                background: blindedColor, padding: '4.15%', width: '8.3%', height: '8.3%',\r\n                border: 'none'\r\n              }}\r\n              onClick={() => this.handleSelectColor(hex, colorKey)} />\r\n          }\r\n          else {\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    return palettePieces;\r\n  };\r\n\r\n\r\n  handleSelectColor = (hexValue, selectedKey) => {\r\n    this.setState({ selectedKey })\r\n    this.props.selectColor(hexValue)\r\n  }\r\n\r\n  render() {\r\n    const palettes = this.props.palettes\r\n    return (\r\n      <div className=\"tiles-section\">\r\n        {palettes.length != 0 && (\r\n          <div style={{ width: '100%', margin: 'auto' }}>\r\n            <h1 style={{ textAlign: 'center' }}> By Hue </h1>\r\n            <h2> Version 1 </h2> <div> {this.getTiles(palettes[0])} </div><br />\r\n            <h2> Version 2 </h2> <div> {this.getTiles(palettes[1])} </div><br />\r\n            <h2> Version 3 </h2> <div> {this.getTiles(palettes[2])} </div><br />\r\n            <h2> Version 4 </h2> <div> {this.getTiles(palettes[3])} </div><br />\r\n            <h1 style={{ textAlign: 'center' }}> By Hue and Light </h1>\r\n            <h2> Version 1 </h2> <div> {this.getTiles(palettes[4])} </div><br />\r\n            <h2> Version 2 </h2> <div> {this.getTiles(palettes[5])} </div><br />\r\n            <h2> Version 3 </h2> <div> {this.getTiles(palettes[6])} </div><br />\r\n            <h2> Version 4 </h2> <div> {this.getTiles(palettes[7])} </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureTiles);\r\n","import Color from \"../../utilities/Color\";\r\nexport const getScaler = () => window.innerWidth >= 2400 ? 1 : window.innerWidth / 2400\r\nexport const getScaledHueWidth = () => 360 * getScaler()\r\nexport const getScaledHeight = () => 200 * getScaler()\r\nexport const getMainCanvas = () => (document.getElementById(\"main-canvas-color-picker\"))\r\nexport const getSaturationCanvas = () => (document.getElementById(\"saturation-canvas-color-picker\"))\r\n\r\nexport const drawHueCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let sat = baseColor.hsl.sat;\r\n    let canvas = getMainCanvas()\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let scaledWidth = getScaledHueWidth()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"width\", scaledWidth)\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    for (let i = 0; i < scaledWidth; i += scaler) {\r\n        var gradient = ctx.createLinearGradient(i, 0, i, scaledHeight);\r\n        let scaledBackHue = Math.round(i * 360 / scaledWidth)\r\n        gradient.addColorStop(0, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,0%)\");\r\n        gradient.addColorStop(0.5, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,50%)\");\r\n        gradient.addColorStop(1, \"hsl(\" + scaledBackHue + \",\" + sat + \"%,100%)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(i, 0, i, scaledHeight);\r\n    }\r\n    setSaturationPickerStyle(baseColor)\r\n}\r\n\r\nexport const drawSaturationCanvas = (baseColor) => {\r\n    let scaler = getScaler()\r\n    let hue = baseColor.hsl.hue;\r\n    let light = baseColor.hsl.light;\r\n    let canvas = getSaturationCanvas()\r\n    let scaledHeight = getScaledHeight()\r\n    canvas.setAttribute(\"height\", scaledHeight)\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let j = 0; j < 202 * scaler; j += 2) {\r\n        let scaledBackSat = Math.round(j * 200 / scaledHeight)\r\n        for (let i = 0; i < 10; i += 1) {\r\n            ctx.fillStyle = \"hsl(\" + hue + \", \" + scaledBackSat / 2 + \"%, \" + light + \"%)\";\r\n            ctx.fillRect(i, j, i, j + 2);\r\n        }\r\n    }\r\n    setHuePickerStyle(baseColor)\r\n}\r\n\r\nconst getValueAdjustedIntoBoundaries = (val, min, max) => val < min ? min : val > max ? max : val\r\n\r\nexport const getColorFromHueCanvas = (clientX, clientY, baseColor) => {\r\n    let rect = getMainCanvasRectangle()\r\n    let x = clientX - rect.left;\r\n    let y = clientY - rect.top;\r\n    let scaledBackX = Math.round(x * 360 / getScaledHueWidth())\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    // when mouse is out of canvas but is down\r\n    scaledBackX = getValueAdjustedIntoBoundaries(scaledBackX, 0, 360)\r\n    scaledBackY = getValueAdjustedIntoBoundaries(scaledBackY, 0, 200)\r\n    let hue = Math.round(scaledBackX);\r\n    let sat = baseColor.hsl.sat;\r\n    let light = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nexport const getColorFromSaturationCanvas = (clientY, baseColor) => {\r\n    let rect = getSaturationCanvasRectangle()\r\n    let y = clientY - rect.top;\r\n    let scaledBackY = Math.round(y * 200 / getScaledHeight())\r\n    // when mouse is out of canvas but is down\r\n    scaledBackY = getValueAdjustedIntoBoundaries(scaledBackY, 0, 200)\r\n    let { hue, light } = baseColor.hsl;\r\n    let sat = Math.round(scaledBackY / 2);\r\n    let color = new Color(hue, sat, light, \"HSL\");\r\n    return color\r\n}\r\n\r\nlet setHuePickerStyle = (color) => {\r\n    let circle = document.getElementById('pickerCircle')\r\n    let scaler = getScaler()\r\n    let scaledPositionTop = (color.hsl.light * 2) * scaler - 8\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n    let scaledPositionLeft = (color.hsl.hue) * scaler - 8\r\n    circle.style.marginLeft = scaledPositionLeft + \"px\"\r\n}\r\n\r\nlet setSaturationPickerStyle = (color) => {\r\n    let circle = document.getElementById('saturationCircle')\r\n    let scaledPositionTop = (color.hsl.sat * 2) * getScaler() - 3.5\r\n    circle.style.marginTop = scaledPositionTop + \"px\"\r\n}\r\n\r\nexport const getMainCanvasRectangle = () =>\r\n    (getMainCanvas().getBoundingClientRect())\r\n\r\nexport const getSaturationCanvasRectangle = () =>\r\n    (getSaturationCanvas().getBoundingClientRect())","\r\nimport React, { Component } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport { Throttle } from \"react-throttle\";\r\nimport { drawHueCanvas, drawSaturationCanvas, getColorFromSaturationCanvas, getColorFromHueCanvas, getScaledHueWidth } from './CanvasFunctions'\r\n\r\nclass ColorPickerCanvas extends Component {\r\n    state = {\r\n        allowClrChange: false,\r\n        allowSatChange: false,\r\n        mouseDownMainCanvas: false,\r\n        mouseDownSatCanvas: false,\r\n\r\n        pickerCirclePositionX: 0,\r\n        pickerCirclePositionY: 0,\r\n        saturationRectPositionY: 0,\r\n\r\n        selectedColor: new Color('#edb407', 0, 0, 'Hex'),\r\n        hexValue: 'edb407'\r\n    };\r\n    componentDidMount = () => {\r\n        drawHueCanvas(this.props.baseColor);\r\n        drawSaturationCanvas(this.props.baseColor);\r\n        window.addEventListener(\"mouseup\", this.onWindowMouseUp, false);\r\n        document.getElementById('canvases-container').addEventListener(\"mouseup\", this.onWindowMouseUp, false);\r\n        window.addEventListener(\"resize\", () => drawSaturationCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"resize\", () => drawHueCanvas(this.state.selectedColor));\r\n        window.addEventListener(\"mousemove\", this.onWindowMouseMove)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.drawSaturationCanvas);\r\n        window.removeEventListener(\"resize\", this.drawHueCanvas);\r\n        window.removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n        window.removeEventListener(\"mousemove\", this.onWindowMouseMove);\r\n        document.getElementById('canvases-container').removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n    }\r\n\r\n    enableColorChange = () => this.setState({ allowClrChange: true });\r\n    disableColorChange = () => this.setState({ allowClrChange: false });\r\n\r\n    // Main Canvas events\r\n    handleMouseDownMainCanvas = evt => {\r\n        this.setMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n        this.makeAllUnselectable()\r\n    };\r\n    handleMouseMoveMainCanvas = evt => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange)\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY);\r\n    };\r\n    setMouseDownToTrue = () => this.setState({ mouseDownMainCanvas: true });\r\n    setMouseDownToFalse = () => this.setState({ mouseDownMainCanvas: false });\r\n\r\n    setColorFromMainCanvas = (clientX, clientY) => {\r\n        let color = getColorFromHueCanvas(clientX, clientY, this.props.baseColor)\r\n        this.setState({ selectedColor: color })\r\n        this.props.onChange(color);\r\n        drawSaturationCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n\r\n    // Saturation Canvas events\r\n    handleMouseDownSatCanvas = evt => {\r\n        this.setSatMouseDownToTrue();\r\n        this.enableColorChange();\r\n        this.setColorFromSatCanvas(evt.clientY);\r\n        this.makeAllUnselectable()\r\n    };\r\n    handleMouseMoveSatCanvas = evt => {\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange)\r\n            this.setColorFromSatCanvas(evt.clientY);\r\n    };\r\n    setSatMouseDownToTrue = () => this.setState({ mouseDownSatCanvas: true });\r\n    setSatMouseDownToFalse = () => this.setState({ mouseDownSatCanvas: false });\r\n\r\n    setColorFromSatCanvas = clientY => {\r\n        let color = getColorFromSaturationCanvas(clientY, this.props.baseColor)\r\n        this.props.onChange(color);\r\n        this.setState({ selectedColor: color })\r\n        drawHueCanvas(color);\r\n        this.props.setHexInput(color.HEXString.substring(1))\r\n    };\r\n\r\n    // Window Events\r\n    makeAllUnselectable = () => {\r\n        window.document.body.className = window.document.body.className + ' unselectable'\r\n        document.getElementById('canvases-container').className = document.getElementById('canvases-container').className + ' unselectable'\r\n    }\r\n    makeAllSelectable = () => {\r\n        window.document.body.className = window.document.body.className.replace('unselectable', '');\r\n        document.getElementById('canvases-container').className = document.getElementById('canvases-container').className.replace('unselectable', '');\r\n    }\r\n    onWindowMouseMove = (evt) => {\r\n        if (this.state.mouseDownMainCanvas && this.state.allowClrChange) {\r\n            this.setColorFromMainCanvas(evt.clientX, evt.clientY)\r\n        }\r\n        if (this.state.mouseDownSatCanvas && this.state.allowClrChange) {\r\n            this.setColorFromSatCanvas(evt.clientY)\r\n        }\r\n    }\r\n\r\n    onWindowMouseUp = () => {\r\n        if (this.state.allowClrChange && (this.state.mouseDownMainCanvas || this.state.mouseDownSatCanvas)) {\r\n            this.makeAllSelectable()\r\n            this.setMouseDownToFalse()\r\n            this.setSatMouseDownToFalse()\r\n            this.disableColorChange()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let baseColor = this.props.baseColor;\r\n        const { hue, sat, light } = baseColor.hsl\r\n        let hexString = baseColor.HEXString;\r\n\r\n        return (\r\n            <div id=\"canvases-container\">\r\n                <div>\r\n                    <div id=\"pickerCircle\" style={{ borderColor: light > 50 ? \"#757575\" : \"white\", backgroundColor: hexString }} />\r\n                    <Throttle time=\"20\" handler=\"onMouseMove\">\r\n                        <canvas height=\"200\" width={getScaledHueWidth()} id=\"main-canvas-color-picker\"\r\n                            onMouseDown={this.handleMouseDownMainCanvas} onMouseMove={this.handleMouseMoveMainCanvas}\r\n                            onMouseEnter={this.enableColorChange}  />\r\n                    </Throttle>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: \"10px\" }}\r\n                    onMouseDown={this.handleMouseDownSatCanvas} onMouseMove={this.handleMouseMoveSatCanvas}\r\n                    onMouseEnter={this.enableColorChange}>\r\n                    <div id=\"saturationCircle\" style={{ backgroundColor: hexString, borderColor: \"#394B59\"}} />\r\n                    <canvas id=\"saturation-canvas-color-picker\" height=\"200\" width=\"10\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ColorPickerCanvas;\r\n","\r\nimport React, { useState, useContext } from \"react\";\r\nimport Color from \"../../utilities/Color\";\r\nimport './ColorPicker.css'\r\nimport { Label, NumericInput } from \"@blueprintjs/core\";\r\nimport ColorPickerCanvas from './ColorPickerCanvas'\r\nimport { drawHueCanvas, drawSaturationCanvas } from './CanvasFunctions'\r\nimport { StoreContext } from '../../Store';\r\n\r\nexport default function ColorPicker(props) {\r\n  const [hexValue, setHexValue] = useState('edb407');\r\n\r\n  const [state, dispatch] = useContext(StoreContext)\r\n  const {baseColor} = state\r\n  const changeBaseColor = (value) => dispatch({name: 'baseColor', value}) \r\n\r\n  let handleFormInput = color => {\r\n    changeBaseColor(color);\r\n    drawHueCanvas(color);\r\n    drawSaturationCanvas(color);\r\n    setHexValue(color.HEXString.substring(1))\r\n  };\r\n  let getNumberPickerInput = (id, max, val, onChange) =>\r\n    <NumericInput style={{ height: '1.4em', width: '50px', marginLeft: '2px' }} buttonPosition=\"none\" size={true} id={id} min=\"0\" max={max} value={val} onValueChange={onChange} />\r\n\r\n  // Input Setters\r\n  let setFromHue = value => handleFormInput(new Color(value, baseColor.hsl.sat, baseColor.hsl.light, \"HSL\"))\r\n  let setFromSat = value => handleFormInput(new Color(baseColor.hsl.hue, value, baseColor.hsl.light, \"HSL\"))\r\n  let setFromLight = value => handleFormInput(new Color(baseColor.hsl.hue, baseColor.hsl.sat, value, \"HSL\"))\r\n  let setFromRed = value => handleFormInput(new Color(value, baseColor.rgb.g, baseColor.rgb.b, \"RGB\"))\r\n  let setFromGreen = value => handleFormInput(new Color(baseColor.rgb.r, value, baseColor.rgb.b, \"RGB\"))\r\n  let setFromBlue = value => handleFormInput(new Color(baseColor.rgb.r, baseColor.rgb.g, value, \"RGB\"))\r\n  let setFromHex = e => {\r\n    let val = e.target.value\r\n    if (val.length < 7) {\r\n      this.setState({ hexValue: val })\r\n      var re = /[0-9A-Fa-f]{6}/g;\r\n      if (re.test(val)) {\r\n        this.handleFormInput(new Color('#' + e.target.value, 0, 0, \"Hex\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  const { hue, sat, light } = baseColor.hsl\r\n  const { r, g, b } = baseColor.rgb\r\n  let hexString = '#' + hexValue;\r\n\r\n  return (\r\n    <div id=\"color-picker\">\r\n      <ColorPickerCanvas onChange={changeBaseColor} baseColor={baseColor} setHexInput={setHexValue} />\r\n\r\n      <div id=\"color-inputs-container\">\r\n        <div className=\"input-boxes\">\r\n          <div> <Label>H: </Label> {getNumberPickerInput('H', 359, hue, setFromHue)} </div>\r\n          <div> <Label>S: </Label> {getNumberPickerInput('S', 100, sat, setFromSat)} </div>\r\n          <div> <Label>L: </Label> {getNumberPickerInput('L', 100, light, setFromLight)} </div>\r\n        </div>\r\n\r\n        <div className=\"input-boxes\">\r\n          <div> <Label>R: </Label> {getNumberPickerInput('R', 255, r, setFromRed)}</div>\r\n          <div> <Label>G: </Label> {getNumberPickerInput('G', 255, g, setFromGreen)}</div>\r\n          <div> <Label>B: </Label> {getNumberPickerInput('B', 255, b, setFromBlue)} </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'inline-block', verticalAlign: 'top', margin: '0px', width: '100%' }}>\r\n          <div className=\"input-boxes\" >\r\n            <div>\r\n              <Label style={{ marginBottom: '0', whiteSpace: 'nowrap' }}>Hex: #</Label>\r\n              <input id='hex-intput-txt-box' className=\"bp3-input\" value={hexValue} onChange={setFromHex} />\r\n            </div>\r\n          </div>\r\n          <div id='picked-color' style={{ backgroundColor: hexString }} />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport ColorPicker from \"./color-picker/ColorPicker\";\r\nimport { Popover } from 'antd';\r\nimport { StoreContext } from '../Store';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function SelectBaseColorButton(props) {\r\n\r\n    const [state] = useContext(StoreContext)\r\n    const [renderColorPicker, setRenderColorPicker] = useState(false);\r\n    let baseColorFont = state.baseColor.hsl.light > 40 ? 'rgb(33,33,33)' : 'white'\r\n    const handleMouseDownSelectColorButton = () => {\r\n        if (renderColorPicker)\r\n            setRenderColorPicker(false)\r\n        else {\r\n            setRenderColorPicker(true)\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Popover content={<div> {renderColorPicker && <ColorPicker />}</div>} placement=\"bottom\" visible={renderColorPicker}>\r\n                <Button\r\n                    onMouseDown={handleMouseDownSelectColorButton}\r\n                    className='base-color-select-container select-color-btn'\r\n                    style={{ background: state.baseColor.HEXString, height: 'fit-content', color: baseColorFont }} size='small' >\r\n                    Select Base Color\r\n        </Button>\r\n            </Popover>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SelectBaseColorButton from \"../../components/SelectBaseColorButton\";\r\nimport { StoreContext } from '../../Store';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function HSLFilters(props) {\r\n\r\n  const [state, dispatch] = useContext(StoreContext)\r\n  const { hueChange, satChange, lightChange, hueStep, satStep, lightStep, numberOfColors } = state\r\n  const set = (name, value) => dispatch({ name, value })\r\n\r\n  const getSliderInput = (value, min, max, label, name) =>\r\n    <div className=\"hsl-slider\">\r\n      <Typography variant=\"subtitle2\" gutterBottom className=\"slider-label\">\r\n        {label} <span style={{ float: 'right' }}>{value}</span>\r\n      </Typography>\r\n      <Slider className=\"slider-input\" min={min} max={max}\r\n        onChange={(e, val) => set(name, val)} value={value} tooltipVisible={false} />\r\n    </div>\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <div className=' filters'>\r\n        {/* HSL FILTERS */}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', alignItems: 'center', height: '100%' }}>\r\n          {/* Changes */}\r\n          <div className='advanced-hsl-filters-group'>\r\n            {getSliderInput(hueChange, 0, 120, 'Hue Change', 'hueChange')}\r\n            {getSliderInput(satChange, 0, 100, 'Saturation Change', 'satChange')}\r\n            {getSliderInput(lightChange, 0, 100, 'Light Change', 'lightChange')}\r\n          </div>\r\n          {/* Steps */}\r\n          <div className='advanced-hsl-filters-group'>\r\n            {getSliderInput(hueStep, 1, 30, 'Hue Step', 'hueStep')}\r\n            {getSliderInput(satStep, 1, 30, 'Saturation Step', 'satStep')}\r\n            {getSliderInput(lightStep, 1, 30, 'Light Step', 'lightStep')}\r\n          </div>\r\n          {/* Number Of Colors */}\r\n          <div className='advanced-hsl-filters-group' style={{ height: '28%' }}>\r\n            {getSliderInput(numberOfColors, 6, 181, 'Number of Colors', 'numberOfColors')}\r\n          </div>\r\n          <div className='advanced-hsl-filters-group' style={{ height: '28%' }}>\r\n            <SelectBaseColorButton />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport './Filters.css'\r\nimport SelectBaseColorButton from \"../../components/SelectBaseColorButton\";\r\nimport { StoreContext } from '../../Store';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst hueDividers = [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15]\r\nconst lightDividers = [1, 2, 4, 5, 10, 20]\r\nconst satDividers = [1, 2, 4, 5, 10]\r\n\r\nexport default function BasicTiles(props) {\r\n\r\n    const [state, dispatch] = useContext(StoreContext)\r\n    const { hueSplit, satSplit, lightSplit } = state\r\n    const set = (name, value) => dispatch({ name, value })\r\n\r\n    let getSliderInput = (value, label, name, dividers) =>\r\n        <div>\r\n            <Typography variant=\"subtitle2\" gutterBottom className=\"slider-label\">\r\n                {label} <span style={{ float: 'right' }}>{value} </span>\r\n            </Typography>\r\n            <Slider\r\n                value={dividers.indexOf(value)}\r\n                min={0}\r\n                max={dividers.length - 1}\r\n                step={1}\r\n                onChange={(e, index) => set(name, dividers[index])}\r\n                tooltipVisible={false}\r\n            />\r\n        </div>\r\n\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <div className='filters' >\r\n\r\n                {getSliderInput(hueSplit, 'Hues', 'hueSplit', hueDividers)}\r\n                {getSliderInput(satSplit, 'Saturations', 'satSplit', satDividers)}\r\n                {getSliderInput(lightSplit, 'Lights', 'lightSplit', lightDividers)}\r\n\r\n                <SelectBaseColorButton />\r\n            </div>\r\n        </div>\r\n    );\r\n}","const SET_PALETTES = 'SET_PALETTES'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setPalettes = (palettes) => { return { type: SET_PALETTES, palettes } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { palettes: [] };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const PictureReducer = (state = initial_state, action) =>  action.type == SET_PALETTES ? { ...state, palettes: action.palettes, } : state\r\n\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Color, { RGBtoHSL } from \"../../utilities/Color\";\r\nimport { setPalettes } from \"../../redux/PictureReducer\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n  return { baseColor: state.BaseColorReducer.baseColor };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ setPalettes }, dispatch);\r\n};\r\n\r\nclass PictureFilters extends Component {\r\n  state = {\r\n    palette1: [],\r\n    palette2: [],\r\n    palette3: [],\r\n    palette4: [],\r\n    palette5: [],\r\n    palette6: [],\r\n    palette7: [],\r\n    palette8: [],\r\n    clickedColor: 0,\r\n    image: \"\",\r\n    imagePreviewUrl: \"\",\r\n    generated: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    //e.preventDefault();\r\n    let img = new Image();\r\n    img.src = this.state.imagePreviewUrl;\r\n    img.onload = () => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      let ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(img, 0, 0);\r\n      let pixelArray = ctx.getImageData(0, 0, img.width, img.height).data;\r\n\r\n      // By Hue Version\r\n      let pushVersion1Function = (arr, n) => { for (var i = 0; i < n; i++) { arr.push({ totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }); } };\r\n      let arr12Colors = [];\r\n      let arr24Colors1 = [];\r\n      let arr48Colors1 = [];\r\n      let arr72Colors1 = [];\r\n      pushVersion1Function(arr12Colors, 12);\r\n      pushVersion1Function(arr24Colors1, 24);\r\n      pushVersion1Function(arr48Colors1, 48);\r\n      pushVersion1Function(arr72Colors1, 72);\r\n      let version1Function = (hsl, arr, divider) => {\r\n        let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n        arr[bucketNumber].totalHue += hsl.hue;\r\n        arr[bucketNumber].totalSat += hsl.sat;\r\n        arr[bucketNumber].totalLight += hsl.light;\r\n        arr[bucketNumber].number += 1;\r\n      };\r\n\r\n      // By Hue and Light Version\r\n      let pushVersion2Function = (arr, n) => {\r\n        for (var i = 0; i < n; i++) {\r\n          arr.push({\r\n            light: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 },\r\n            dark: { totalHue: 0, totalSat: 0, totalLight: 0, number: 0 }\r\n          });\r\n        }\r\n      };\r\n      let arr12Colors2 = [];\r\n      let arr24Colors2 = [];\r\n      let arr48Colors2 = [];\r\n      let arr72Colors2 = [];\r\n      pushVersion2Function(arr12Colors2, 12);\r\n      pushVersion2Function(arr24Colors2, 24);\r\n      pushVersion2Function(arr48Colors2, 48);\r\n      pushVersion2Function(arr72Colors2, 72);\r\n      let version2Function = (hsl, arr, divider) => {\r\n        let bucketNumber = hsl.hue != 0 ? Math.floor(hsl.hue / divider) : 0;\r\n        let bucket = hsl.light > 50 ? arr[bucketNumber].light : arr[bucketNumber].dark;\r\n        bucket.totalHue += hsl.hue;\r\n        bucket.totalSat += hsl.sat;\r\n        bucket.totalLight += hsl.light;\r\n        bucket.number += 1;\r\n      };\r\n\r\n      for (let i = 0; i < pixelArray.length - 4; i += 4) {\r\n        let r = pixelArray[i];\r\n        let g = pixelArray[i + 1];\r\n        let b = pixelArray[i + 2];\r\n        let hsl = RGBtoHSL(r, g, b);\r\n        // By Hue Version\r\n        version1Function(hsl, arr12Colors, 30);\r\n        version1Function(hsl, arr24Colors1, 15);\r\n        version1Function(hsl, arr48Colors1, 7.5);\r\n        version1Function(hsl, arr72Colors1, 5);\r\n\r\n        // By Hue and Light Version\r\n        version2Function(hsl, arr12Colors2, 30);\r\n        version2Function(hsl, arr24Colors2, 15);\r\n        version2Function(hsl, arr48Colors2, 7.5);\r\n        version2Function(hsl, arr72Colors2, 5);\r\n      }\r\n\r\n      // By Hue Version\r\n      let extractColorsFunction = obj => new Color(obj.totalHue / obj.number, obj.totalSat / obj.number, obj.totalLight / obj.number, 'HSL')\r\n      let palette1 = arr12Colors.map(extractColorsFunction);\r\n      let palette2 = arr24Colors1.map(extractColorsFunction);\r\n      let palette3 = arr48Colors1.map(extractColorsFunction);\r\n      let palette4 = arr72Colors1.map(extractColorsFunction);\r\n\r\n      // By Hue and Light Version\r\n      let extractColorsFunction2 = arr => {\r\n        //looks better when dark goes first\r\n        let darkLightArr = arr.map(obj => {\r\n          let light = obj.light;\r\n          let lightStr = new Color(light.totalHue / light.number, light.totalSat / light.number, light.totalLight / light.number, 'HSL')\r\n          let dark = obj.dark;\r\n          let darkStr = new Color(dark.totalHue / dark.number, dark.totalSat / dark.number, dark.totalLight / dark.number, 'HSL')\r\n          return { dark: darkStr, light: lightStr };\r\n        });\r\n        let darks = darkLightArr.map(obj => obj.dark);\r\n        let lights = darkLightArr.map(obj => obj.light);\r\n        let palette = [];\r\n        palette = palette.concat(darks);\r\n        palette = palette.concat(lights);\r\n        return palette;\r\n      };\r\n      let palette5 = extractColorsFunction2(arr12Colors2);\r\n      let palette6 = extractColorsFunction2(arr24Colors2);\r\n      let palette7 = extractColorsFunction2(arr48Colors2);\r\n      let palette8 = extractColorsFunction2(arr72Colors2);\r\n\r\n      this.setState({ palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8, generated: true });\r\n\r\n      let palettes = [palette1, palette2, palette3, palette4, palette5, palette6, palette7, palette8]\r\n      this.props.setPalettes(palettes)\r\n    }\r\n  };\r\n\r\n  handleImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = (obj) => {\r\n      this.setState({ image: file, imagePreviewUrl: reader.result }, this.handleSubmit);\r\n    }\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  render() {\r\n    const { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n      $imagePreview = (\r\n        <img id=\"uploaded-image\" src={imagePreviewUrl} style={{ maxHeight: '145pt' }} />);\r\n    }\r\n\r\n    return (\r\n      <div style={{ height: '100%' }}>\r\n        <div style={{ height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }}>\r\n          {$imagePreview}\r\n          <div>\r\n            <label htmlFor=\"upload-photo\" style={{ cursor: 'pointer' }} className=\"upload-photo-label\">\r\n              Upload image...\r\n            </label>\r\n            <input type=\"file\" name=\"photo\" id=\"upload-photo\"\r\n              className='upload-image-input'\r\n              onChange={this.handleImageChange}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PictureFilters);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\nimport SelectMode from \"../sections/filters/SelectMode\"\r\nimport TryMain from \"../sections/try-it/TryMain\";\r\nimport {LeftActionsBar} from \"../sections/side-bar/LeftActionsBar\";\r\nimport BasicTiles from \"../sections/tiles/BasicTiles\";\r\nimport AdvancedTiles from \"../sections/tiles/AdvancedTiles\";\r\nimport PictureTiles from \"../sections/tiles/PictureTiles\";\r\nimport AdvancedFilters from \"../sections/filters/AdvancedFilters\";\r\nimport BasicFilters from \"../sections/filters/BasicFilters\";\r\nimport PictureFilters from \"../sections/filters/PictureFilters\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        filterMode: state.FilterModeReducer.filterMode\r\n    }\r\n}\r\n\r\nclass MainPage extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    getDisplayOption = (show) => ({ display: show ? 'block' : 'none', width: '100%' })\r\n    render() {\r\n        let filterMode = this.props.filterMode\r\n        // by hiding components instead of unmounting we will keep thes states saved\r\n        let showBasic = filterMode == 'BASIC'\r\n        let showAdvanced = filterMode == 'ADVANCED'\r\n        let showFromImage = filterMode == 'FROM_IMAGE'\r\n\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n\r\n                <div id='palette-container' >\r\n                    <LeftActionsBar exportJSON={this.handleExportJSON_ButtonClick} />\r\n                    <div>\r\n                        <div style={{ ...this.getDisplayOption(showBasic), margin: 'auto'}} > <BasicTiles /></div>\r\n                        <div style={{ ...this.getDisplayOption(showAdvanced), margin: 'auto' }} > <AdvancedTiles /></div>\r\n                        <div style={{ ...this.getDisplayOption(showFromImage), margin: 'auto' }} > <PictureTiles /></div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode history={this.props.history} />\r\n                        <div style={this.getDisplayOption(showBasic)} > <BasicFilters /></div>\r\n                        <div style={this.getDisplayOption(showAdvanced)} > <AdvancedFilters /></div>\r\n                        <div style={this.getDisplayOption(showFromImage)} > <PictureFilters /></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);\r\n\r\n\r\n\r\n","const SWITCH_LAYOUT = 'SWITCH_LAYOUT'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let switchLayout = (layout) => { return { type: SWITCH_LAYOUT, layout } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { layout: '1' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const LayoutReducer = (state = initial_state, action) => action.type == SWITCH_LAYOUT ? { ...state, layout: state.layout == '1' ? '2' : '1', } : state\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { exportJSON } from '../utilities/ExportJSON'\r\nimport SelectMode from \"../sections/filters/SelectMode\"\r\nimport TryMain from \"../sections/try-it/TryMain\";\r\nimport {LeftActionsBar} from \"../sections/side-bar/LeftActionsBar\";\r\nimport BasicTiles from \"../sections/tiles/BasicTiles\";\r\nimport AdvancedTiles from \"../sections/tiles/AdvancedTiles\";\r\nimport PictureTiles from \"../sections/tiles/PictureTiles\";\r\nimport AdvancedFilters from \"../sections/filters/AdvancedFilters\";\r\nimport BasicFilters from \"../sections/filters/BasicFilters\";\r\nimport PictureFilters from \"../sections/filters/PictureFilters\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        filterMode: state.FilterModeReducer.filterMode\r\n    }\r\n}\r\n\r\nclass MainPage2 extends Component {\r\n\r\n    // EXPORT JSON HANDLER\r\n    handleExportJSON_ButtonClick = () => {\r\n        let colorElements = document.getElementsByClassName(\"single-tile-basic\")\r\n        let colors = {}\r\n        for (var i = 0; i < colorElements.length; i++) { colors[\"color\" + i] = colorElements[i].style.backgroundColor }\r\n        exportJSON(colors)\r\n    }\r\n    getDisplayOption = (show) => ({ display: show ? 'block' : 'none', width: '100%' })\r\n    render() {\r\n        let filterMode = this.props.filterMode\r\n        // by hiding components instead of unmounting we will keep thes states saved\r\n        let showBasic = filterMode == 'BASIC'\r\n        let showAdvanced = filterMode == 'ADVANCED'\r\n        let showFromImage = filterMode == 'FROM_IMAGE'\r\n\r\n        return (\r\n            <div className='horizontal-holder-ls'>\r\n\r\n                <div id='palette-container' >\r\n                    <LeftActionsBar exportJSON={this.handleExportJSON_ButtonClick} />\r\n                    <div>\r\n                        <div style={this.getDisplayOption(showBasic)} > <BasicTiles /></div>\r\n                        <div style={this.getDisplayOption(showAdvanced)} > <AdvancedTiles /></div>\r\n                        <div style={{ ...this.getDisplayOption(showFromImage), margin: 'auto' }} > <PictureTiles /></div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='vertical-holder-sl'>\r\n                    <div className='filters-part' >\r\n                        <SelectMode history={this.props.history} />\r\n                        <div style={this.getDisplayOption(showBasic)} > <BasicFilters /></div>\r\n                        <div style={this.getDisplayOption(showAdvanced)} > <AdvancedFilters /></div>\r\n                        <div style={this.getDisplayOption(showFromImage)} > <PictureFilters /></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='filters-long-part'>\r\n                            <div><TryMain /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage2);\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport MainPage from \"./pages/MainPage\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { switchLayout } from './redux/LayoutReducer'\nimport MainPage2 from \"./pages/MainPage2\";\nimport Store from \"./Store\";\n\nlet mapDispatchToProps = (dispatch) => { return bindActionCreators({ switchLayout: switchLayout }, dispatch) }\n\nlet mapStateToProps = (state) => {\n  return {\n    layout: state.LayoutReducer.layout\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    let switchLayout = this.props.switchLayout\n    document.addEventListener(\"keydown\", function (zEvent) {\n      if (zEvent.ctrlKey) {  // case sensitive\n        // DO YOUR STUFF HERE\n        switchLayout()\n      }\n    });\n  }\n  render() {\n    let layout = this.props.layout\n    return (\n      <Store>\n        <div className=\"App\" >\n          <Header />\n          {layout == '1' ? <MainPage /> : <MainPage2 />}\n        </div>\n      </Store>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Color from '../utilities/Color'\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeBaseColor = (color) => { return { type: CHANGE_COLOR, color } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { baseColor: new Color('#81042b', 0, 0, 'Hex') };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const BaseColorReducer = (state = initial_state, action) =>  action.type == CHANGE_COLOR ? { ...state, baseColor: action.color, } : state\r\n\r\n","\r\nconst CHANGE_MODE = 'CHANGE_MODE'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let changeHSLMode = (isAdvanced) => { return { type: CHANGE_MODE, isAdvanced } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { isAdvanced: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLModeReducer = (state = initial_state, action) =>  action.type == CHANGE_MODE ? { ...state, isAdvanced: action.isAdvanced, } : state\r\n\r\n","\r\nconst SET_HUE_SPLIT = 'SET_HUE_SPLIT'\r\nconst SET_SAT_SPLIT = 'SET_SAT_SPLIT'\r\nconst SET_LIGHT_SPLIT = 'SET_LIGHT_SPLIT'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueSplit = ( hueSplit) => { return { type: SET_HUE_SPLIT,  hueSplit } }\r\nexport let setSatSplit = (satSplit) => { return { type: SET_SAT_SPLIT, satSplit } }\r\nexport let setLightSplit = (lightSplit) => { return { type: SET_LIGHT_SPLIT, lightSplit } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {  hueSplit: 1, satSplit: 4, lightSplit: 4, l1: 'h', l2: 's', l3: 'l' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLBasicReducer = (state = initial_state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_HUE_SPLIT: return { ...state,  hueSplit: action.hueSplit }\r\n        case SET_SAT_SPLIT: return { ...state, satSplit: action.satSplit }\r\n        case SET_LIGHT_SPLIT: return { ...state, lightSplit: action.lightSplit }\r\n        case SET_DISPLAY_ORDER: return { ...state, l1: action.l1, l2: action.l2, l3: action.l3 }\r\n        default: return { ...state }\r\n    }\r\n\r\n}\r\n\r\n","\r\nconst SET_BLINDNESS = 'SET_BLINDNESS'\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setBlindness = (blindnessType) => { return { type: SET_BLINDNESS, blindnessType } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { blindness: 'None' };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const ColorBlindnessReducer = (state = initial_state, action) =>  action.type == SET_BLINDNESS ? { ...state, blindness: action.blindnessType, } : state\r\n\r\n","const SHOW_EXTRA_TOOLS = 'SHOW_EXTRA_TOOLS'\r\nconst HIDE_EXTRA_TOOLS = 'HIDE_EXTRA_TOOLS'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let showExtraTools = () => { return { type: SHOW_EXTRA_TOOLS, show_extra_tools: true } }\r\nexport let hideExtraTools = () => { return { type: HIDE_EXTRA_TOOLS, show_extra_tools: false } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = { show_extra_tools: false };\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const ShowExtraToolsReducer = (state = initial_state, action) =>\r\n    action.type == SHOW_EXTRA_TOOLS ? { show_extra_tools: true } :\r\n        action.type == HIDE_EXTRA_TOOLS ? { show_extra_tools: false } :\r\n            state\r\n","\r\nconst SET_HUE_CHANGE = 'SET_HUE_CHANGE'\r\nconst SET_SAT_CHANGE = 'SET_SAT_CHANGE'\r\nconst SET_LIGHT_CHANGE = 'SET_LIGHT_CHANGE'\r\nconst SET_HUE_STEP = 'SET_HUE_STEP'\r\nconst SET_SAT_STEP = 'SET_SAT_STEP'\r\nconst SET_LIGHT_STEP = 'SET_LIGHT_STEP'\r\nconst SET_NUMBER_OF_COLORS = 'SET_NUMBER_OF_COLORS'\r\nconst SET_DISPLAY_ORDER = 'SET_DISPLAY_ORDER'\r\n\r\nconst SET_ADVANCED_HSL_INPUT = 'SET_ADVANCED_HSL_INPUT'\r\n\r\n/* ---------------------- Actions ---------------------- */\r\nexport let setHueChange = (hueChange) => { return { type: SET_HUE_CHANGE, hueChange } }\r\nexport let setSatChange = (satChange) => { return { type: SET_SAT_CHANGE, satChange } }\r\nexport let setLightChange = (lightChange) => { return { type: SET_LIGHT_CHANGE, lightChange } }\r\n\r\nexport let setHueStep = (hueStep) => { return { type: SET_HUE_STEP, hueStep } }\r\nexport let setSatStep = (satStep) => { return { type: SET_SAT_STEP, satStep } }\r\nexport let setLightStep = (lightStep) => { return { type: SET_LIGHT_STEP, lightStep } }\r\n\r\nexport let setNumberOfColors = (numberOfColors) => { return { type: SET_NUMBER_OF_COLORS, numberOfColors } }\r\nexport let setDisplayOrder = (l1, l2, l3) => { return { type: SET_DISPLAY_ORDER, l1, l2, l3 } }\r\n\r\nexport let setAdvancedHSLInput = (evt) => { return { type: SET_ADVANCED_HSL_INPUT, evt } }\r\n\r\n/* ---------------------- Initial State ---------------------- */\r\nconst initial_state = {\r\n    hueChange: 27, satChange: 0, lightChange: 20,\r\n    hueStep: 1, satStep: 1, lightStep: 1,\r\n    numberOfColors: 72,\r\n};\r\n\r\n/* ---------------------- Export Reducer ---------------------- */\r\nexport const HSLAdvancedReducer = (state = initial_state, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_ADVANCED_HSL_INPUT: {\r\n            const target = action.evt.target;\r\n            const value = target.value;\r\n            const name = target.name;\r\n            return { ...state, [name]: value }\r\n        }\r\n        case SET_HUE_CHANGE: return { ...state, hueChange: action.hueChange }\r\n        case SET_SAT_CHANGE: return { ...state, satChange: action.satChange }\r\n        case SET_LIGHT_CHANGE: return { ...state, lightChange: action.lightChange }\r\n        case SET_HUE_STEP: return { ...state, hueStep: action.hueStep }\r\n        case SET_SAT_STEP: return { ...state, satStep: action.satStep }\r\n        case SET_LIGHT_STEP: return { ...state, lightStep: action.lightStep }\r\n        case SET_NUMBER_OF_COLORS: return { ...state, numberOfColors: action.numberOfColors }\r\n        default: return { ...state }\r\n    }\r\n\r\n\r\n}\r\n\r\n","// reducers/index.js\r\nimport { combineReducers } from \"redux\";\r\nimport { BaseColorReducer } from \"./BaseColorReducer\";\r\nimport { SelectedColorReducer } from \"./SelectedColorReducer\";\r\nimport { HSLModeReducer } from \"./HSLModeReducer\";\r\nimport { HSLBasicReducer } from \"./HSLBasicReducer\";\r\nimport { ColorBlindnessReducer } from \"./ColorBlindnessReducer\";\r\nimport { ShowExtraToolsReducer } from \"./ShowExtraToolsReducer\";\r\nimport { HSLAdvancedReducer } from \"./HSLAdvancedReducer\";\r\nimport { PictureReducer } from \"./PictureReducer\";\r\nimport { FilterModeReducer } from \"./FilterModeReducer\";\r\nimport { LayoutReducer } from \"./LayoutReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  BaseColorReducer,\r\n  SelectedColorReducer,\r\n  HSLModeReducer,\r\n  HSLBasicReducer,\r\n  ColorBlindnessReducer,\r\n  ShowExtraToolsReducer,\r\n  HSLAdvancedReducer,\r\n  PictureReducer,\r\n  FilterModeReducer,\r\n  LayoutReducer\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider >\n  ,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}